(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    515215,       9783]
NotebookOptionsPosition[    508942,       9679]
NotebookOutlinePosition[    509449,       9697]
CellTagsIndexPosition[    509406,       9694]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["functions", "Title",
 CellChangeTimes->{{3.9344350056535163`*^9, 3.9344350468342266`*^9}, {
  3.93487940994611*^9, 3.9348794108641663`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TimestampToDateObject", "[", "timestamp_", "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "format", "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{
     "Determine", " ", "the", " ", "appropriate", " ", "format", " ", "based",
       " ", "on", " ", "the", " ", "length", " ", "of", " ", "the", " ", 
      "timestamp"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"format", "=", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"StringLength", "[", "timestamp", "]"}], "==", "19"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Year\>\"", ",", "\"\<-\>\"", ",", "\"\<Month\>\"", ",", 
          "\"\<-\>\"", ",", "\"\<Day\>\"", ",", "\"\<-\>\"", ",", 
          "\"\<Hour\>\"", ",", "\"\<-\>\"", ",", "\"\<Minute\>\"", ",", 
          "\"\<-\>\"", ",", "\"\<Second\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Year\>\"", ",", "\"\<-\>\"", ",", "\"\<Month\>\"", ",", 
          "\"\<-\>\"", ",", "\"\<Day\>\"", ",", "\"\<-\>\"", ",", 
          "\"\<Hour\>\"", ",", "\"\<-\>\"", ",", "\"\<Minute\>\""}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Create", " ", "the", " ", "DateObject", " ", "using", " ", "the", " ", 
       "determined", " ", "format"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"DateObject", "[", 
      RowBox[{"{", 
       RowBox[{"timestamp", ",", "format"}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9348794186187*^9, 3.9348794352236867`*^9}, {
  3.9348796009360147`*^9, 3.9348796054888673`*^9}, {3.9348797100669985`*^9, 
  3.934879723539684*^9}},
 CellLabel->"In[77]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"TimeSinceMidnight", "[", "dateObj_DateObject", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dateList", ",", "timePassed"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Extract", " ", "the", " ", "date", " ", "list", " ", "from", " ", "the",
       " ", "DateObject"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dateList", "=", 
      RowBox[{"DateList", "[", "dateObj", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Check", " ", "if", " ", "the", " ", "date", " ", "list", " ", 
        "contains", " ", "hour"}], ",", "minute", ",", 
       RowBox[{"and", " ", "second", " ", "information"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "dateList", "]"}], ">=", "6"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Calculate", " ", "time", " ", "passed", " ", "since", " ", 
         "midnight", " ", "in", " ", "seconds"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"timePassed", "=", 
         RowBox[{
          RowBox[{"3600", 
           RowBox[{"dateList", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "+", 
          RowBox[{"60", 
           RowBox[{"dateList", "[", 
            RowBox[{"[", "5", "]"}], "]"}]}], "+", 
          RowBox[{"dateList", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        "timePassed"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Return", "-", 
         RowBox[{
         "1", " ", "if", " ", "granularity", " ", "is", " ", 
          "insufficient"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"-", "1"}]}], "\[IndentingNewLine]", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9348902110896482`*^9, 3.934890234907038*^9}},
 CellLabel->"In[142]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["load & set", "Title",
 CellChangeTimes->{{3.9344350056535163`*^9, 3.9344350468342266`*^9}}],

Cell["set", "Subtitle",
 CellChangeTimes->{{3.9344350056535163`*^9, 3.934435036655195*^9}, {
  3.9344350919215364`*^9, 3.934435092122015*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataRoot", "=", 
   RowBox[{"StringRiffle", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"StringSplit", "[", 
          RowBox[{
           RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<\\\\\>\""}], 
          "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", 
       RowBox[{"{", "\"\<data\>\"", "}"}]}], "]"}], ",", "\"\<\\\\\>\""}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9344351112140703`*^9, 3.934435113498793*^9}, {
  3.9344351757722435`*^9, 3.934435176572344*^9}},
 CellLabel->"In[1]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"configRoot", "=", 
   RowBox[{"StringRiffle", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"StringSplit", "[", 
          RowBox[{
           RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<\\\\\>\""}], 
          "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", 
       RowBox[{"{", "\"\<system_config\>\"", "}"}]}], "]"}], ",", 
     "\"\<\\\\\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9348788507047167`*^9, 3.934878859616874*^9}},
 CellLabel->"In[29]:="],

Cell[CellGroupData[{

Cell["load", "Subtitle",
 CellChangeTimes->{{3.9344350056535163`*^9, 3.934435036655195*^9}, {
  3.934435088496415*^9, 3.934435089671216*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"roomsConfig", "=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "configRaw", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"configRaw", "=", 
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{"configRoot", "<>", "\"\<\\\\rooms.json\>\""}], ",", 
         "\"\<JSON\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"room", ",", "\"\<name\>\"", ",", "\"\<sensor\>\""}], "}"}],
          "/.", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ToString", "[", "room", "]"}], "/.", "configRaw"}], 
          ")"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"room", ",", "1", ",", 
          RowBox[{"Length", "[", "configRaw", "]"}]}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomNum", "=", 
   RowBox[{"Length", "[", "roomsConfig", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.934878906222113*^9, 3.934879104823373*^9}, {
  3.9348792479248147`*^9, 3.934879249750226*^9}},
 CellLabel->"In[56]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomsTempAndHumidity", "=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"roomLogs", ",", "roomsTempAndHumidityRaw"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"roomLogs", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{"#", ",", "\"\<Text\>\""}], "]"}], "&"}], ",", 
         RowBox[{"FileNames", "[", 
          RowBox[{"All", ",", 
           RowBox[{
           "dataRoot", "<>", 
            "\"\<\\\\logs\\\\temperature_and_humidity\>\""}]}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"roomsTempAndHumidityRaw", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ImportString", "[", 
             RowBox[{"#", ",", "\"\<JSON\>\""}], "]"}], "&"}], ",", 
           RowBox[{"StringSplit", "[", 
            RowBox[{"roomLog", ",", "\"\<\\n\>\""}], "]"}]}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"roomLog", ",", "roomLogs"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", "room", "]"}], "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"roomsTempAndHumidityRaw", ",", "1"}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"room", ",", "1", ",", "roomNum"}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9348787307819834`*^9, 3.9348787393908663`*^9}, {
  3.934879116296897*^9, 3.934879212173665*^9}, {3.9348797905087695`*^9, 
  3.9348798295397635`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"summerWeather", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "dataRoot", "<>", 
      "\"\<\\\\external\\\\weather\\\\temp_and_hum_2024_summer.csv\>\""}], 
     ",", "\"\<CSV\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.934888663336454*^9, 3.9348887060137424`*^9}},
 CellLabel->"In[95]:="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["elemz\[EAcute]s", "Title",
 CellChangeTimes->{{3.9344350056535163`*^9, 3.934435036655195*^9}}],

Cell["ny\[AAcute]ri h\[ODoubleAcute]m\[EAcute]rs\[EAcute]kletek", "Subtitle",
 CellChangeTimes->{{3.9344350056535163`*^9, 3.934435036655195*^9}, {
  3.9344350919215364`*^9, 3.934435101792997*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"roomsConfig", "[", 
   RowBox[{"[", "roomsWithData", "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.934888907653931*^9, 3.9348889228751945`*^9}},
 CellLabel->"In[102]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ovi\"\>", ",", "\<\"PK\"\>", ",", "\<\"SZGK\"\>", 
   ",", "\<\"M\[EAcute]rce\"\>", ",", "\<\"G\[OAcute]lyairoda\"\>", 
   ",", "\<\"kisterem\"\>", ",", "\<\"vend\[EAcute]gt\[EAcute]r\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9348889107635174`*^9, 3.934888923229869*^9}},
 CellLabel->"Out[102]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roomsConfig", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.934888937550453*^9, 3.934888939077968*^9}},
 CellLabel->"In[103]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Oktopusz\"\>", ",", "\<\"ovi\"\>", ",", "\<\"PK\"\>", 
   ",", "\<\"SZGK\"\>", ",", "\<\"M\[EAcute]rce\"\>", ",", "\<\"Lahmacun\"\>",
    ",", "\<\"G\[OAcute]lyairoda\"\>", ",", "\<\"kisterem\"\>", 
   ",", "\<\"vend\[EAcute]gt\[EAcute]r\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.934888939338833*^9},
 CellLabel->"Out[103]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomCoolingMethods", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<no data\>\"", ",", 
     "\"\<bels\[ODoubleAcute] f\[UDoubleDot]gg\[ODoubleDot]ny\>\"", ",", 
     "\"\<bels\[ODoubleAcute] f\[UDoubleDot]gg\[ODoubleDot]ny\>\"", ",", 
     "\"\<k\[UDoubleDot]ls\[ODoubleAcute] \
\[AAcute]rny\[EAcute]kol\[AAcute]s\>\"", ",", 
     "\"\<bels\[ODoubleAcute] f\[UDoubleDot]gg\[ODoubleDot]ny + mobilkl\
\[IAcute]ma\>\"", ",", "\"\<no data\>\"", ",", "\"\<nem utcai oldal\>\"", 
     ",", "\"\<bels\[ODoubleAcute] f\[UDoubleDot]gg\[ODoubleDot]ny\>\"", ",", 
     "\"\<bels\[ODoubleAcute] f\[UDoubleDot]gg\[ODoubleDot]ny\>\""}], "}"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.934888898605934*^9, 3.9348889057389665`*^9}, {
  3.934888941064947*^9, 3.934889038479255*^9}},
 CellLabel->"In[107]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roomCoolingMethods", "[", 
  RowBox[{"[", "roomsWithData", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9348890119478264`*^9, 3.934889045631825*^9}},
 CellLabel->"In[108]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"bels\[ODoubleAcute] f\[UDoubleDot]gg\[ODoubleDot]ny\"\>", 
   ",", "\<\"bels\[ODoubleAcute] f\[UDoubleDot]gg\[ODoubleDot]ny\"\>", 
   ",", "\<\"k\[UDoubleDot]ls\[ODoubleAcute] \
\[AAcute]rny\[EAcute]kol\[AAcute]s\"\>", 
   ",", "\<\"bels\[ODoubleAcute] f\[UDoubleDot]gg\[ODoubleDot]ny + mobilkl\
\[IAcute]ma\"\>", ",", "\<\"nem utcai oldal\"\>", 
   ",", "\<\"bels\[ODoubleAcute] f\[UDoubleDot]gg\[ODoubleDot]ny\"\>", 
   ",", "\<\"bels\[ODoubleAcute] f\[UDoubleDot]gg\[ODoubleDot]ny\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.934889015505105*^9, 3.9348890458227344`*^9}},
 CellLabel->"Out[108]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomsWithData", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Select", "[", 
      RowBox[{"roomsConfig", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "!=", "\"\<none\>\""}], "&"}]}], 
      "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9348792289970984`*^9, 3.9348792358765244`*^9}, {
  3.93487927790919*^9, 3.934879278624076*^9}},
 CellLabel->"In[61]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomTemps", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"roomsConfig", "[", 
         RowBox[{"[", "room", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"TimestampToDateObject", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "/", "100"}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], "&"}], "\[IndentingNewLine]", ",", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<last_updated\>\"", ",", "\"\<temp\>\""}], "}"}], "/.", 
            RowBox[{"roomsTempAndHumidity", "[", 
             RowBox[{"[", "room", "]"}], "]"}]}], ",", "First"}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "roomsWithData"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.934879221223483*^9, 3.9348792226456275`*^9}, {
  3.9348792849304433`*^9, 3.934879313517866*^9}, {3.9348796204708786`*^9, 
  3.934879624245739*^9}, {3.934879732471637*^9, 3.9348797755254154`*^9}, {
  3.9348798324117374`*^9, 3.934879902821035*^9}},
 CellLabel->"In[89]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"externalTemp", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"TimestampToDateObject", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
      "\[IndentingNewLine]", "&"}], ",", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{"summerWeather", ",", "1"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9348888031613293`*^9, 3.9348888041365805`*^9}, {
  3.9348888418004827`*^9, 3.934888887619211*^9}},
 CellLabel->"In[99]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"externalHum", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"TimestampToDateObject", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
      "\[IndentingNewLine]", "&"}], ",", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{"summerWeather", ",", "1"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9348899581750793`*^9, 3.934889973253563*^9}},
 CellLabel->"In[130]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"externalWind", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"TimestampToDateObject", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
      "\[IndentingNewLine]", "&"}], ",", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{"summerWeather", ",", "1"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9348900255084467`*^9, 3.9348900316395683`*^9}},
 CellLabel->"In[134]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"weatherCondition", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"TimestampToDateObject", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
      "\[IndentingNewLine]", "&"}], ",", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{"summerWeather", ",", "1"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9348900503715973`*^9, 3.9348900605714464`*^9}},
 CellLabel->"In[137]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomCols", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RGBColor", "[", 
      RowBox[{
       RowBox[{"n", "/", "8"}], ",", 
       RowBox[{"1", "-", 
        RowBox[{"n", "/", "8"}]}], ",", "0.5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "roomsWithData", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.93489464412833*^9, 3.934894648004311*^9}},
 CellLabel->"In[407]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomNames", "=", 
   RowBox[{
    RowBox[{"roomsConfig", "[", 
     RowBox[{"[", "roomsWithData", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.934894742827428*^9, 3.934894745300687*^9}},
 CellLabel->"In[416]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "externalTemp", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", "roomTemps"}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "LightBlue", "}"}], ",", "roomCols"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "\[Rule]", "0.25"}], ",", 
   RowBox[{"ImageSize", "->", "2000"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
      "{", "\"\<k\[UDoubleDot]ls\[ODoubleAcute] h\[ODoubleAcute]m.\>\"", 
       "}"}], ",", 
      RowBox[{
       RowBox[{"roomsConfig", "[", 
        RowBox[{"[", "roomsWithData", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"28", ",", "33"}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.934889237751361*^9, 3.934889481403196*^9}, {
  3.9348895120349464`*^9, 3.93488955076791*^9}, {3.9348896131724772`*^9, 
  3.9348896177990828`*^9}, {3.9348907473970385`*^9, 3.934890747791355*^9}, {
  3.934894642103757*^9, 3.9348946517068033`*^9}},
 CellLabel->"In[408]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.87, 0.94, 1]], 
        PointBox[CompressedData["
1:eJxdW39cnuP3T5IkSZLMTJLMJElaa0mSac9z3/dzl2SSJEmSzDaTZJJJkiTJ
liRJMjOTyWQmkyRJkkmSJEkyaUmSfPac+/W8v6/3d/94vV/XdZ0f73Ouc859
9Tgr9c64W+zt7Oy8HezsrP898m/44NrfLq/abv13ceQRXNd/BH/WZf0XZMVp
AzasCPYbPILT5d9FVjz+ne38aYJ3fI/zgVac9QPvD/jRhsdE3tQocLAVN40d
wRfLv5VWvGkc66FWHDJxBBumr7biuV9t+98Mt+KW36D/UivO+x3rEVYc8Qfs
ucyK7Q5jv+ADMzbsEmnFW2cZr5mDftnvNA//RV/nP8BiX8m/8GeVFWv/gW/x
z+0ok82eECvutTfZ7LnEiiscTDZ5ghMcTTZ5wpeXkw2/KfEbOM52XhFcfbyJ
4pl8gon49j7RRHyPuNn0bRe+691NxHe6B+QJ38s9sV/8nzgVWPjeeRrkC1/Z
p8MfwYFnMJ5eBn1yfo837BX5m31Yf6ivifiePwf6he9954IP8WfLecDib+T5
wMKv/QWQL/y0BUC+4MJAm335wm9MkIny2TkY8RTcdYmJ8r90JbCc11eBH9Hv
vhr6JB/6wrFf7K2MABZ/1kWCL/F3SRTyQfDgFeAjzIprrmS+Uq7CumCftTgv
eNTE8W9Q4L/Iy9DAn+hboZsovydjcV782XU187v+GhPVn6BrsV/wzDrsF/6a
E8GX4Jwk2CP1JiwZ5wUv3Ij9AVa8/yY+n38zxyPqFsgT+xxuhX9if3sG+BH/
ijKxX+JhyoI84cMlm/nqvhPyhM+yu2Cv5HPcRsRHsMfd2C/44GbIk/Pbcjjf
E3PZvqV5wJJfQ/dz/ah9gOtD6oNYF+z7EPM1thX2CL+NhTh/oRVnFmG/YP9i
Xj/0GOwVebsf5/q14QmcF76DnwQfwu9sObDwubeC8zm3EueFr/BtwFI/Frdj
v9SX1mdN1B8KnmMc/TzXL8cXgGW9ow7xFn3F9cBin9LA9ce1EXyIfz2vYL/E
p/xVvh/xryE/BHu+zvWmfzfyQXBVk4n6ddIe5ntZM/M9/Dbfz7p3uD6mvcv5
5fce14vx/Yx3tHK+Zh0wUX8MaON4TH3E/aPpYxP1702fQJ7gkE+xX+TPdXG9
aunm+5bXw/Uxohf8iX92fcDC/4GvIF/w1q+5Pq/5huuD07ewT3DnIPeLkiHm
WxvmeLuNYL/Y0/sj21fxE/iQ/En4mePh9Qvn28AE7BU+qidxXnDyIc5X7ynm
c+QPjl/9Ya7v6X+yPcv/4vyemON+tXMe/kt+ZS/w/Q5c5P47/R/iJXjPUWab
fcLn5qPNdB9CjzFT/5h3NNvkC97nZKZ+ssWZ1yNdzBQfe1ezjX/BbSeaaV4q
PMlM81nMyWaa35xPMdP96fI0U/0q9TITX/oSM/HpvhT+CO47A/YJrjwT/hj9
/ywz1ZMlZ5uJz0Ff5qvGj/lIWW6m/uqzAuuCR8+Hf1LvGy4AlnqecSHslf66
4iKcFzwZhHV/K94VDP5F3voQM9WvoFDmf2aVmeah5tWwV/jNuZT5CLsM+yVf
FyLBh9yP/VFmmofyoyFPcNQa3u8QY6Z+077WTP29yMzxNKlmus8uFjPle7cO
fyU+ZXHYLzgunvPdI8FM9eXgtbBX+Nl2Hed/4vVmmk+X3oB14XcomfOhNoXz
JTXVTPOCbxrn19gtZpovGm+Ff+J/5m1mmk/9b+f1Q1l8fnc27BW8Yb2Z6kXw
BjPV59mNWBf7994N+YJz7+H7HX4v59diLvgW3JoHPgQXbIF8yf/ofOwX7FgA
PiV/Ox4Cf4KLH2asPMLY9VH4I/J6ijle5SXgz+j/pZw/nmXQL3z1P8n1peop
M/W7pKeBJX+XPWOm/ji8DevSH+qqzNQ/0qr5vvjVIB9E/vjzHN8dL3D8sl7k
/A54ievtVAPkCf9NjczPph3gT3DITq5Hc69xPWp5HfYIznsD61KPIt7k+mb3
FtfDA81837bu5fq+poX9ddrH9abzPawLXyXvM5/aB2aa990+NFP/7W1jXNEO
PgQndACLPK9OrlcDn3I/qf4M+iVfkj/n++39Bfe3kV72v76P6036QfgreHk/
x2/iG643O7+FPMHZ33F9D/zeTPPW9DD2C997Rrg+bB7FefEvdAz+Cf/zP8M/
4/v/F87fLb9CvvAX+Rvzaf87x6dtCutyvnCa71PMDNvjPMv3s+svrp+lf2Nd
sP4Px8P9XzPNh32LHJ9KO4Xqwzp7her5EgeF+sHgMQrFr+ZYheKbcpxC9d/n
eIXyfdRFoXrd4KoQ3xluNv35xve/u0L1ZfJkhfjedYpCfK8/VaF5NOg0yBc8
s4TXm5dCvpzPWaZQPMK8FbqfC2cplP/7z2b/8s9RiN+ocxXqvw7nMV/tKxSq
X0X+CvUbUwDWJd9dAhXqL90XcTzKLlaov8VdAn1ir8dK5vdgKOw3vv/DmM/E
cOiT76WlEbBH8NBlkC/fr7WX47zg1Ctgn2DfK8GH4LE1WBd5jTEcn0yTQvfF
X2H7D6kKzbe7LQrdjw2xCt3/4KuxbvT/ePAteG8C1o3+v47jF57I8Vq8nuW1
3qDQ/FhwI/wRe6Nvgjzh1/FmrIv/HWm2deM9oTgdWN4LlAzwIdg1E/7Je3LP
7TZcIrj8Dsbxd0KeYM+7wKfI698A+0V/1Sa+P0mbYa/R/3MU6lfD9ypUr+ru
gzzj+/9+6JN4+D2gUL0ez2f+dxTwfcnayjigUKH5d+oR2CP6mh4FX8b7/2PA
Ym/I49BnvP+XKtQvW8qYj7xy+C98RVSAH+HTrhL5IfjAMzZ53xjv/9tt8lqN
9/9n+bzTc3xfOmsgT+wpqYV/Rv+vU6g/udWDH8m/3pe43la8DPsFJ7zC8fB6
Ff4KHtipUP+o3qXQ/JW8W6H5zLsJ8kT/yJvgU+yrfwv7jff/t/n+L3+H68lE
C/YL3zv3cT5n77etHxYc2Irzl1vx9Ac2+/0E7/nQZl+k4M0fwV45H/ox16/5
Dq5/+zq5Xm7pgv3iX2Q3+2/fw/nX9gXfh8IvFerfMV+BX+P7/2uuL1393F9L
B1iePsj63YeY/77vmf/KH5j/dT/ivPi/5CeuN4NjNtwgfNWM2867CJ8pE8y/
zyTzPfobx6Phd+Y/4w/cB9G34jDkiX2TM9yfds1yPVo/x/EImsd5wTP/YF34
af6X45PzH/MZdpRK30sL9ir1k/0OKs2T+Y4q1cMoJ2Dj+99ZpXrTfrxK/Bed
oBL/phNVyn+Xk2x4o/DV7Y7zgss8VOI3zhP6BXt4qVR/Dp6G/YK3nQ59oj/x
DJw3+v+ZbP+Qt0r9udZHJf5TfZkPXz+V6tPYuSrVp8bzVJqvMs+HPOHb/wKV
6v2hAN6/O1CleXJDEPSJfcHBOC/1dPYSlerN3pXMf+4qm/3bhf/w1TZ/04Wv
xXCV6n1rBPgQXBCpUn2KjmLsGA39gjuuVKnfF1+lUv4ra1W6v65mlb5HehSV
5qFyDfIEx+sq5btnnEr9sv9qlfpB1TUq9YOka1XqB8uuU6n+DyeqVH/qklSq
P2nJiI/Y75fC+TV+E+yT+Oy4WaV5KOsWleaVgFthn/A3laHSfNOUyfdnU5ZK
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
D3Vyiag=
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 8], 0.125], 
          NCache[
           Rational[7, 8], 0.875], 0.5]], 
        PointBox[CompressedData["
1:eJzs3WW0Fce+LnyCBHd3d3dJkJAQZLUsCEGCu7sG1+AOwV2Du7u7u7u7Oy/F
2jWp5+kas9/F2fvce8/p9WWPX0bt6rIu+c+ak+Q1m5WpEzJEiBApc4QIIf73
81/7EyUf/FR5yNYX6RIVKvLZFU9+9rixn//i///yDOFYC4tf6RBL60fC6b88
QOsCpz77wP7Pf5G07n0Kn8c+fAqfx054GvNj1xXufa/06iRhtF5yGp/Hfi8c
4dT05gUjaF38jH8PP4PPY18QXp3k8395XVDndGc/+35p8V+0bnUWn8feKBw0
FLQOf+6zc4q/ZwV1LitcV/zd1HoypWffFW5R8HOJHmud+zzWl93tPD6Pve88
Po8d54LszzNa1xBOKjrkotbzL8jxtF/rV5SeXfQilpc9yMWnhcuIBjmidcpL
+Dx200vy/T+v9ZpLmB879GX5vh3X2r6M+bHHUXr2jcvYnuxsVzA/dscr2F7s
nVfweezoVzE9u/JVfB57tvCMz2/bqWtaP3VxwWuYH7vvNSwv+9g1HO/sJNdx
PLAbXMf3gb38Os437E8uLnUD33f2qBtYXvZlSs/OeBP7i91WeNuLdJWHhCyk
85abWF52pFuf3VE0+Futy9/C8rKnufjBLVwP2Plu+3fP2/J9ja71wdu4nrHj
3ykJ+wN27Tu4nrAXUXr22zv4PHaxu/49VPjzYr+weHKtz7k4zT0sD7vFPXwe
e/092V85tQ57X65X+bQuc1+O12xaT7wvx1MBrW/fl+O1qNY5H8jyVtS6ywM5
nhtpveeBnI+max3r4Wd/2W4t1LraQzke9mo996HvfdX6xUNZnoyFdS7ySOZX
SusBwi8/N8fWNlqfFA4h/rppnfyx7M9lWjd+LNt7q9arHvvqo3XIJyX/tR++
rbX5RNY3YhGdxzyR62Ekra89kfNBaq2zPP3sEqK70n6Ttwt/ed3zah31me99
+CbPfCbbI5zWj5/J/goh3C3Vc9/4K6xzs+fy/Z+q9drnMv/6Wod5Id+/DloH
vpDvRy2tx7/wvd9a33Rx9pcyv5Rad3rpm/+13iUssmv+oZDOMV5henaVV7K9
rhTSeY6wmD4rH9L6GaVnF3qN6dn9hIP2N1offy3rs0HrpG/k/Lta64Zv5Pp4
ROsVb2R/LNY6xFv/DniL5WH//VbOz2O1vvLWN161zvQO5meH272T69sErbdS
enbk9/L976N1BRdPd/FDF+f/AOuTw70+yPaoofUhSs9O8NG/63yU/dlc68Uf
YX11+J3wl/11Va1//YTlZQ/7JOfX8lqfp/TstCFKQXnYLYWD1k+tNwh/mQ+K
aR3uO//+Tfjr/sSzZ8+ePXv27NmzZ8+ePXv27NmzZ8+ePXv27NmzZ8+ePXv2
7NmzZ8+ePXv27NmzZ8+ePXv27NmzZ8+ePXv27NmzZ8+ePXv27NmzZ8+ePXv2
7NmzZ8+ePXv27NmzZ8+ePXv27NmzZ8+ePXv27NmzZ8+ePXv27NmzZ8+ePXv2
7NmzZ8+ePXv27NmzZ8+ePXv27NmzZ8+ePXv27NmzZ8+ePXv27NmzZ8+ePXv2
7NmzZ8+ePXv27NmzZ8+ePXv27NmzZ8+ePXv27NmzZ8+ePXv27NmzZ8+e/6c6
ROdNAQ9+yin+WhXUebdw5SFbX6RLpHXMzf5dVXhh8SsdYmXR+h/hcWM//8XX
+rmLC28JkPXRur9wLPHAslqfEA4h/oponWzrZ69O0vte6XxaN9oq61tZ65XC
6cV/qK/1d9tkfcZqbWyT5emm9ehtsjzttb4q/FmrkxTTOvN2rC+7vXBH0WAF
tN62HfuDHWXHZ0c4Nb15wQhaVxR+mU40yI86z9ghx8tDrR/tkM87o3WBnZ9d
UDxwg9a9XXxY+MB+8ad1wl2fff9zc/aep3XdXZgfe8ku+b4t0/r9Ljle5mhd
fPdnz2guctR6+G45HidofWG3rM9ArdPt8e9WwknFgJqk9UbhL6/DEK3D78X8
2GX3Ynr25L2yPTtrfdfFuff5d7d9vvdV630ujrNfvi8dtK6xX473NlrP3y/H
e1OtX7m46AF8HnvQASwv+7Rw3S9/Wqc8+NktvjSY1k0P+uZDrdccxOexQx/C
57HtQ775XOtxh/B57BuUHzvbYTlfldK642HMj73zsBzPhtbRj/h35SNyvNta
z6b07KdH5PtYVeuCR33rgdZ9j2J+7GNHsb7sJMd864nWDY751lOtlx/D9mZ/
OoblYZc6jvmxRx2X73tBrS8fl+9jbq0znsD82G1PYHr2lhPyfcmmdaSTmB+7
/ElMz552Uo7nNFo/cHG+U/7d8xQ+j33wlJyPsmgd/7QcL4m0rn1arqcZtV50
GtuT/fY0lpdd7Ay2J3voGSwP+5yL05yV63FKrVucxfZir3dx2HPYHuwyLp54
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
4vB6F4ddINeba1qXWYDPY0908W3hr58XOZxzIaZnd3HxnoXYH+xYi/y72iIc
j+y5i3C8sV8sMtTzosNFFmN7swcsxvqwTy7G/NjJlxjqedvhxsJB+0GtVy0x
1HiCwyGX+re5FMvLHrPUUM/rDl9biuONnWWZf/+5DMcTe/syLA876nLsj+B6
5nL5vESFdH4srOxX2D+sMGC/wf5rhSxvc62PCH/dbzucaKWhnsf/7f6wUq6H
Z7Quscr4137ittYjVhnqfQOHL66S7Z3xm9x6tXxefa03CQedB7SOsMZQz9sO
/77G195aT1kj39dZWt9bI583Ves8a33vu9bdhYPOm1rvX+ubr4roHHedXK9T
aF1TOOj3wrResA7zC65/Xu/fg9f7xoPWZ9bL9yGa1qk2+N5HrZu5eO0GbA92
mI2yPdJqHbjRNx61Hr9RzsdZtL65UbZHEa2zb5Ll/VHrTi7etUm+r/m1jrEZ
n8eusln2R1at52yW83VKrZ9tlu9jOK0LbfGt14W/xceFv+wHV2uddKuhxrsc
brgV32f2iq1yPPT4Jgdsk/Npea3/3ib7o6LWV7b51gutM23373bbDfU+l8Nb
txtqPM3hyDsMeZ9I6wo7DPW+l8PThYP2W1o/3GGo8TiH8+/0zYda93LxoZ3y
fXuodYJdmJ5dZ5ehxvMcXiwctN/R+h2lZ/+621Dj1Q4P222o8UaHz+821Pt0
Dqfdg89jt9xjqPFChzfsMdR4o8Ph9hpqPNHh31w8aa+cL6ZrfUc46PMurXPt
w/Kwu+4z1Hikw3tdHHu/f1d38bz9WB/2y/2GGu91+KcDhhqPdXjgATmfztH6
1AHMj53ioAH7SXaTg1gf9uqDcjz11zrUIf+2DmF+7LHCQb+XoPX1Q3K96qZ1
1sMGxGvZHQ5jfuwdhw01Xu1wtCMG7NfZlY5gfuxZLn5yBNuL/eNRA+LJ7D5H
DTWe7vDRo1heduJjhvp9V4frHzPUeLvDy45hfdgfXVzyOPYne+RxLC/70nHs
b3aGE9ge7DYnsL7szSd867nWEU8a6uexDpc7ic9jTz2J5WXfP4nlYec9he3J
7nEK82MfcHG809jf7FqnMT174WmsL/sN5RdcDzmDz2OfPYPtwU591r+bC3/9
PMrhdS7+/hyOV3bpc/i+syecw/qyb53D+Yqd4zy2B7vzeewP9u7zWB92zAtY
H3bVC5ie/c8FLA/7OeXHLnzRUL8P4HB/F5+4iOshO9klQ/6ejNaNLmF69spL
uB6zv7uM/c02LuN6yR592YB4DvuqizNfwfKy21/B8rK3XcH82FGuYn3YFYWD
znNazxBW9oPsR1cN2G+xC1wz5PcJtO59Tb7vK7Q+7OKE1w3Yj7PrXjfU+y4O
LxFWzivs9778guJp7OI3ZH1Taj38hqHet3D4wg3f+6R1upu+/tK61U0Dztvs
jTcNOK+zw9+S4+mM1mVvGRAPYE++Jee7t1rfvWVAvIud+7YB8Qx2t9vyfU+t
9b7bBsSD2HHuGBAPYte4I+fzn7SeL6zEe4LroncxP/YgF5++i+Vlp7yH7cVu
ek++L7G/yaHvy/c1pNb2fexv9jhf+q1a37iP45Gd7YF/d3xgqPelHN4p/PW+
lsPRHxoQj2JXfijbo43Ws1389KEB8W52wUeYnt33Ec4H7GPCSjyeneSxAfEu
doPHBsTL2Mtd/InyY5d6gvMde9QTOR6KfpMzPvXvtk8NiLextzyV81lOrSM9
k+2dTevyz2R/5dZ62jPMj/2A8mPne26o9+0c7vncgM9r2Aefy/6Ir3X8F5gf
u/YLXO/Yi14YEK9kv31hQLySXeylfJ9fF9J56EsD4pXsc8JB32fXOs0rXM/Z
LV4ZEO9jr3dx2NcGfB7HLvMay8ue+BrzY99+bUC8kp3zjQHxUHaXNwbsh9h7
3hjweSM71ltMz672Fp/HnvsW82O/oPTsIu+wPdkD3sn35bHWJyk9O/l7OR9c
0brxe2xv9qr3BuyX2SE/4Hhjmx/weewxH7C92NeEv953dTjLRxxP7D8/GrAf
Z2//iPmxo37y7z9cPNPFjz/heGP/EMKEeDv7L2HlvMI+Iqw8j53oO/+u9x0+
j71UWIkXsz8IhxB/m7UuEdKEeDt7hLDyeQL7orAyHtnpQ5nQ3+zWobA87E2h
sL7sCKGxvdi/Cyv9yZ4irLxv7HuUHztPGOxvdvcwmJ69PwzWhx33eywvu6aw
Mp+xF3yP9WG//h6fx/45LKZnDw6L9WGfCYvlZacKZ8J8yW4WzoT5lr02nAnz
HTtMeBPmO3agsLJesseHx/IE19kjmDCfsjtFwOf9u10lon/PEVY+z2U/i2jC
fotdKJL5r/16XK37RTJhv8k+Lqx8ns1OGhnTsxtGlu2dTusVwsp+mB0iin8H
RDHhPMH+O4qJ9wHIV4SV8xY7U1QTzlPsdsLKeZO9Naos7zKtI0fzvW9aV4jm
ex+0nh7NhPN4cJ0/ugn3ddi9optwX4d9KLoJ93XYCWL4+kvrOsJf7gP8qvXi
GPJ9rKj1uxhyPar+TR4WU7Z3s29y2lhyPLXTumUs+b721npDLNmf3bUOF9v8
133Uxlr/Flv2R02tJ8WW601Zre/40hfVOlcc7C921zg4Hth74/jmC61jx5Xr
VXStq8eV71s4refFNSGeGFz/FM+E+3LsgfFMiGexT8WT/X3qm9wkvuzP/Vqv
jm/CfUR2qASyP49rbSWQ8/Hi/4izJpTjdarWHRKacF+TvYPSs6MlMiEex67k
4lmJZH920/pJIhPicewfE/t3H+Gv37d0+GhiOd76aJ04iX/Xd/Ey4S/7qaZa
f3RxyaQmxBPZI/+LzpAMn8dukwzbi705Ga63wXW55Ljes6cKB93n0Pp+chPi
mey8KeR4raF1D+Ev+7FSWh9IIee70lrHSynX48pa10qJz2MvTGlCPJT9JqUc
T8W1/iWVCfFM9pBUJuy32GdTYX3YqVNje7Cbu3hdahP2m+zv08j3vYjWpV08
IQ22B/tWGhP2o+wcabG92J3TyvmkgNa705rweSI7ZjoT4rnsqukwPfufdFhe
9vN0JuzX2YXTY3uz+wsr8Wj2ifQmnCfYyTL4d6MMWB/2ygwmnHfY32XE/mAb
GfF57NEZsT3YVzNifdmZM/l3+0zYn+xtmUz4PIMdJTP2B7tiZqwPe0ZmbE/2
o8xYHnaBLP7dOwu2F/twFmwPdsKsWF923az4vrKXZMX3jf0+K84H7OLZ/Ht4
Niwv+0I2nI/Z6bJjfuxW2fF9ZW/MjvMxO3wOHA/ssjmwPOzJOTA/9t0cOF+z
c+fE9YzdLSeut+x9lJ4dJxeu9+wauTA/9vxcmB/7FaVnF82N7cEelBvLwz5N
6dkp8+B6z26aB8sbXIfOa8J+iG3nNWG/xx5H6dk3hJX9HjtbPhP26+yO+UzY
77N35jPhPgw7en4T7hOwK+c3IR7Dnp3fhPMc+2l+Wd9QRXQuWMCE8yy7bwHf
eqX1sQImxGvYSX6Q7ZVM6wY/+OZbrZf/INsjn9afhIN+707rUj/+Z52xoJxP
A7RuKxz0fVGttxQ04b4OO1IhrC+7fCET7uuwp7n4QSE5nrJqna8w9he7p4sP
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
vgDHE3veAiwv++UCbG/2TwuxvdgDF2J+7FMLsTzsFIswPbuJi1cvwvZih1qM
7zPbcvHYxVhe9vXF+L6xsy7B9OwOS3A8sHcswfHOjrYUn8eutBTHC3vWUiwP
+4mLf1yG8ym7zzJMzz66DMvDTrwc11N2/eU4X7KXUXr2x+Um7AfYJVfgesse
uQLTsy+5OMNKLA+7jYs3Cyv7KXbEVSbsN9nlVpmwn2NPXWXC55Xs+6tM2G+z
86424TzB7rHahPMK+8Bq+b6X1zreGhPui7FrrTHhvhd7obDyfQX2mzUmfJ+D
/cta33jQeshaE+JF7LNrTbgPwk69zpTnCa2br5PzXdB9Ffa6dbI8UbX+fr0J
8Qx26fVyPkqk9QQX33Jxjg0mxGPYnV28ewOWlx1zo39X3SjHS4hv8nNh5ftI
7MKbZPrNWvff5JsvtT6xyYT7Nuxkm034vg670WYT7qOwV242IV7D/m6LCfdd
2cYWfB/Zo118dYsJ903YmbeaEK9gtxdW4insbVtN+L42O8o2/664zYR4BHvG
NhPug7MfbTPhPjm7wHYT4hns3i4+vB3Lw064Q/ZndK3runjJDt98ofX7HSbE
U9jFd2J+7OE7cT1hX9hpQjyEnW6XCfEGdqtdWB72xl2++biQzuF3Y3nYZXeb
EG9hT96N6yn77m4T4kXs3HtwPWd324PlZe/bg+3BjrPXhHgSu8ZefB57/l4s
L/vVXhPiHeyi+0zYz7AH7cPysk/vw/Zmp9xvQryG3XQ/thd7zX4sDzv0AWwv
tn3AhP0ie9wBE/aD7BsH8HnsbAcxP3bHg5ievZPSs6Mf8u/Kh0w4L7FnU3r2
UxcXPIzlZfc9bMJ5h33sMJaHneQIjkd2gyOYH3v5ERPOM+xPR0w4T7NLHcXy
sEe5+PJRzI+d8RiOd3bbY5gfe8sxE85T7EjHsb7s8scxP/a04yac99gPKD92
vhPYH+yeJzA/9kFh9T4AOf5JE87b7NoncTyyF53E57HfUn7sYqewPuyhp7A9
2OdcnOa0CfEGdovTOB+x15/G8cAOewbbg13mDNaHPfEM5se+fcaEeAM751mc
T9hdzmJ92HuElc8D2LHO4XzBrnYO82PPPYfvI/sFpWcXOY/1YQ9w8cnzuJ6z
k1/A9ZDd+AL2J3vVBVyP2SEvYnuxzYuYH3vMRSwP+9pF7C92lktYHvafl3A9
Z28XVvY77KiXMT/2H5cxPXvmZRP2O+zHl7E+7B+umLBfZf8lrHyeyz4irPwe
FzvRVRPOS+x6V00477GXXpXt2VTrD778mmtd4poJ51X2CGHl9zTYF4WV3wNh
p79uwn0Mduvrvv7QetN1E+I17Ag3TLgvwv5dWIlXsKfcMCEewr53Q64n8bXO
c1Oud7G17n4T82Pvv2lCvIkd95Zcb0JpXfMWtgd7wS0T4ins1y7++Tb2J3uw
sBLPY5+5LefLIVqnumNCvJDd7I5sjz5ar71jwn0Ydpi7JtxnYQfeNSEewx5/
V86HNbS+edeE+zDs7Pfk+1Ra60738H1m77pnwvfF2THumxDPYVe5b0K8mD3n
vgnxFvaz+ybES9iFHmB+7H4PMD/28Qc4H7KTPsT5lN3QxSsemnDfhB3ikQnx
GHaAi/9+hOsJ+8ojXK/YmR77d7vHuF6ytz7G9Y4d+Qnmx67wBNd79vQn+Dz2
wycm7CfY+Z/i89i9XHzoKebHTvAM12t2nWeYnr34mQn7OfY7F//63L+HPcfn
sc8/N2G/zU77AvNjt3yB6dkbKD073EsT7vuwfxNWzgvsSS+xvdl3Xppwn4Od
65UJ5xV211cmnMfZe10c+7V/V3+Nz2PPE1bOC+yXr004j7J/emPCeZQ98I0J
53n2qTcmnKfZKd5iedlN3mJ52KtdHOod9hfbcvHYd1he9vV3WF521vcmnKfZ
HYSV+wrsHe/leB+idbQPOB7YlT5gevasD/g+sJ98wPqyf/yI6dl9PmJ69tGP
2F7sxJ+wP9j1P2F/s5d9wuexPwor8RB2yRAWtCd7pLBSHvYlYWU+Y2f4zoL+
YLcRVsYDe7Owch+GHTGkBe8ru5ywMh7ZU0Nifdn3XZw3FJaX3UNY6W/2gVBY
Hna80Fgfdq3QmB97oXAI8bf5m/xLGAvGO3uIsHJfjn1WWJkv2am/x/HEbu7i
dcLKeGd/HxbLyy4trLxP7Alh8XnBdY5wFrxv7M7hMD17dzjsT3bM8Basd+yq
4fF57H/CY3uxn1N6duEIFuyX2P0jYH+zT0TA+YKdLCLmx27k4pURLdjvs7+L
ZMF5g20IK/eJ2KMjWXDeYl+NZMF5i505sgX3FdjtI1tw3mVvi2zBfR92lCgW
xIvYFaPI/miv9YwoFsSj2I+iWHAfiV0gqgXxAnbvqL7xrPXhqHI+3aV1wmgy
v5ta141mQbyKvcTnoN8rZr8XVn6PmF08ugXxKvbw6HK9i6r1hei+8VZY53Qx
LLiPw24VQ+YXdB+LvTGGbz7ROnxMC74PxS4bE/ubPTkmjhf2XRfnjmXB943Y
3WJZEC9h74sly5NN6zix/btGbAviGez5sS2478d+FduC+xbsonEsOI+zB8Wx
4L4E+7Swct5np4xr4X0AclNh5fMO9pq4uB4G13Y8XC+D6xvxLLhvzc4WH9c7
dsf4uF4F19ETWLCfYldOYMF+lT07gQX7QfbTBFhfdsGEuJ6y+ya0YD/IPpYQ
y8tOksiC/Si7QSLffK318kSyvdpo/Un4y+cNrbQulViWp6LWoxL71jOtLyf2
rYdaZ0zi322T4PPYW5LI8VZK60hJ5XpZWuvySeX7UFDraS5+IPxlP1FM63zJ
fPOV1j2TYXr2wWRyvs2ndfzksr3TaV07uZxP0mi9SPhLPCmW1m+TY33ZxVLI
8ZJT66EpsDzscymwPdhpUmJ6douUvvle6/Upfeu51mFT+dYDrcukkuMlutYT
U8nxFkHr26nweeycqeV8kEjrLql965HWe1wcKw2Wh10tjZwvQmg9N43sz2cF
dX6RRvbXY62LpMXysAekxfTsk2nlfHBN6+Tp/LtxOsyPvSqd7I/9WodM71uP
tTbTy/FyRusx6WV779X6Wnr5vh3XOksG//4zg2zPrVpvz4D1YUfNKMfzEa3/
yOhbr7WemRHrE1z/kEmOp2Va/5XJt95rfSQTlpedKLN/18uM5WEvzSzfx/Na
f8iM/c0ukQX7iz0iC/YH+2IW7E92+qyWPE9p3Torthd7E6VnR8hmyc+jtf49
G5aHPSUb1od9Lxv2NztPdsyP3T079id7v4vj5sD82DVzYHuwF+TA8cJ+/V/0
4Jw4n7HP5MTx9u/22lyWvM+udZjcOB+yA4WD4i2FdB6fG9cT9s3cuB6xs+fB
9YTdKQ8+j73LxTHyWrDfYFfJi+nZc/Liest+lhfbk10oH9aH3S+fBfsR9vF8
WB520vzY3uyG+fF57BX58XnsEAWwv9gBBbA87L8LYH7sKwWwPdmZfpDz1duC
/xvdqyDOF/9u1ymE6yF7cSGcT9jvKD3718I437KHefbrXEUtGc/4jzj2z/9Z
v/xZjrfpWv/0i/Wv8968/5Ue+6tcb2dpff1XOV8O0zprcfm+TdC6Q3Fsb/YO
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
9v5/MD923LlYHnbNuZievWAuPo/9mvJj/zwP25s9eB6ON/YZF6eaj+8ru9l8
fB/Za+fj+8YOswDnE3bgApyv2OMX4HzHvkn5sbMvxPme3cnFuxZa8HkTO8Yi
XC/YVRbhesme4+Jni3C9ZxdajOs9u5+wEm9gH1+Mz2MnXYL5sRsusWC/xF6x
xIL9EDvEUgv2g+yApRbst9l/L7VgP8u+slSuN7G0zrQMy8NuJ6zsd9lbl1lw
nmBHXm7BfRd2BeEv51Vb6+nLLTjPsR/60g/ROv8KC86z7F4r5Ps2QetDKyyI
d7ATrLQgXsGus9I33grrvHilBfdZ2O9Wyvctp9a/rpL9VVHrYatkfSprfX6V
7I8OWqddLcszSeuWq2V/TNV6w2r5Pq3+Jv+2xteeWk9aI8fbB63vrPHNV1rn
Wivr+1brrmvl84L+fXr23rVyvQurdex1cj4OpXX1dXI8Bv376+x567A9yd0+
rJPzzTCtS6y31N8vd3jEekv9fWSHL6631PtODqff4N+thb/eh3J40wYY7w5H
2Gip8TKHfxf++vs9wfa9jZYaD3Q4zybZ3le07r7JUuNtDu93cdzNMJ84XHMz
pmcv2Gyp8TyHX2+21N/PcfjnLZZ6H8zhwVtke23V+ozw13i0w6m2Wmq80OFm
WzE9e62Lw2zD+rIDt8F87vD4bb73Reub2yw1nulw9u1YH3an7ZievWu7pd7H
dDjGDkuNhzpcZQeWlz3Hxc92wHrpcKGd+Dx2v51yvPbX+vhOOd+20jrpLku9
z+dww12Ynr1il6XGcx0OsRvzYwfs9q13Wv+921LjwQ5f2W2p93UdzrRHjoda
Wrfbg/mxt+7B+rAj77XUeLPDFfZifuzpe+V4KK31w71YXnb+fZa6X3O41z4s
D/vQPiwPO8F+S423O1xnPz6PvVj4azza4Xf7LXU/6vCvByw1Hu/wsANYnuA6
7UFL3S873PKgpe73Hd5wUM53+bQOd8i/fzuEz2NPOoTPY985ZKnnFYdzHbbU
eL/DXV2897Clxvsdjn0Ey8OuLvz1POTwPErPfnkEy8P+6ailnqccHnjUUj8P
cPiUi1Mcw+exmxzD8cpefQz7gx3quKWe9xy2juN4YI89juVhXz+O7cnOesJS
z8sOdziB9WHvOIHjmR3tJJaHXUn463nW4Vknsb7/bvc5he0RXCc+jfN1cL3s
NM5H7I+ncT1jlzzj3yPP4HzPvnTGUs/zDmc4i/mx27h481lc79kRz+F6zy53
zoL9BnvqOcyPfd/Fec9bajzC4R7nsTzsA+ct2K+x412wYL/JruXihS5+IxxC
/G3W+peL/j1EWDlvsM9elM87o3XqSxacx9jNhZXzHnvdJd98p/X3l33rjdal
L1tqvMXhCZdlfYprfeuypcZbHM5xRa4nI7Xu7OLdV+R4XaZ1zKu+9ta66lVL
jUc4/M9V2Z9fft/Y4edXff1RWOfC12R73ta6/zVLjec4fOKapcZzHE52HfNz
cyMXr7wu59/HWn93w1L/PTaHjRuYnj36BraPm68KB32eoXXmm5YaT3O4vXDQ
fVOttwkHnee0jnILxyu74i3ffKf1jFu++V7rR7d865XWBW7L5xXQuvdtfN/Y
h2/71nutE96x1N+Hd7juHd96rPWSO5b672c5/P6OrG9yrYvfxfTs4XexPOwL
d2V7fLlP5nC6e5Yaj3a41T1Mz97o4vD3ZX8d0brsfQvibezJ933vj9Z3XZz7
gQXxMna3B7hesPc9wPKy4zzE/Ng1Hlrq5wEOz6f07FcPcT1kF31kQbyQPegR
rrfs04/kenFc65SPLYj3sZs+xuex1zzG8rJDP8H6su0n2N7scU8siJexbzzB
57GzPcXnsTs+tSDeyN75FJ/Hjv5MjqepWld+ZkE8lj2b0rOfCi/0/b66wwWf
y/Vyg9Z9n+N4YB97juVhJ3lhQTyV3eAFloe9/AW2J/uTsLLfZJd6acF+mT3K
xZdfWhAPZWd8ZUE8l932FebH3uLiSK+xvdjlX1uwn2dPe43lZT+g9Ox8byyI
17J7vsH82AffWOp9dofjv7XgvMKu/dZSv+/t8CJKz3771oLzHrvYOwvOW+yh
7zA9+9w7rA87zXtMz27x3oJ4KXs9pWeH/WDBeZNd5oMF8VL2xA9YX/btDxac
99k5P2J6dpePWB/2no8WnOfZsT5hena1TxbEu9lzP2F92S8+YXnZRULYfj1A
WCkP+6Sw8r6wk3+H+bEbCyv9zV4lrPQ3O2RIzI9tCivvC3uMsDKe2deElc97
2FlCYX7sP0Nhe7C3CyvzOTtqaBvmS/Yfwsp6y54Z2ob1hP04tA3zOfuHMPg8
9l9hsL3YR8LYsF6yE33v3/VcvPR7G+Ih7A/CynrLLhEW24M9IiymZ18U/jJf
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
CTbsl9hLXfxhAj6PXWIiPo89YqIN8SL2xYk27BfZ6SfZEE9it3bxJmFlv8eO
MBnry/59sg37cfaUyVhe9j3Kj51nig37dXb3Kfg89v4pNuzn2XGn2nBeYtd0
8YKp+Dz2a0rP/nmaDedB9uBpmJ59ZpoN5w12quk2nMfZzabj89hrp9twHmWH
mYH1ZQfOwPzY44WV+zjsmzNsOI+zs8/E+rA7zbThvM7e5eIYszA/dpVZ2B7s
ObMwP/Yzyo9daLYN8Rp2v9mYnn18tg3xCHbSOVgedsM52N7sFXOwvsF1wD84
ntl/CyvnbfYVF2eai+87u91cnI/YW+fieGZHnuffFebhfMWePg/nO/bDefg+
s/PPx/mc3Ws+1od9aD6uN8F1nQU27Af+3f51Ia5H7GELcb1ln1+I7clOu8iG
/Qa75SIbPk9ib1hkw+d57HCLsT7s3xbbsB9gTxJW9jvsO8LKfp+da4kNnyez
uy6x4TwSXMdeauN9AHL1pTZ8Xs+et9SGeAv75VJb/fe0HP5pmW++0HqgsBLP
YJ9aZsPv9bJTLLfleUfrJsttiEewVy+X72vQ7zWzQ62Q80XQ97XY1grZX0Hf
d2KPXSHHS3ytr6/w9YfWWVfK+Sj1f8TRVsnxmELrSi6etQrLy36ySrZXAq1/
XC3nw7Ba91kt3+dwWh9dbav/HpnDidfYcN8ouF62RpZ3bWGdP67B8cguudaG
+2LskWt9873OIW6thffF4RzrbDWe5XDndbZ638jh3etsNR7qcMz1thrvcriq
i/9Zb6vxUIefr7fVeJfDhTfY8O/9sftvsNV4lMMnNthqPMrhZBtleeJq3Wgj
zJcOrxT+Gm9z+LtNmB/b2OSbL7QevclW410OX6X07MybMT27vXDQfb9COm/b
LMfDQ62jbLHVeJrDFbfYajzO4RlbbPW+l8OPtsjx/ljrAltt+Pcm2b23yv6+
rfVhFyfchvmx67p4yTZbjfc4/H4brNcOF9+O+bGHb7fVeJ3DF1ycboet7jcc
brXDVuOJDm/cgfmxw++01XiTw2V32mo80OHJO211Pxds596F+bG7uXjfLsyP
HWe3f9fYbav7SYfn78bnsV8JhxB/m7Uuuse/B+3B9maf3oPlZafci+VlN91r
q/txh9cIfz0PBNv2Pls9Lzg8bp+t7scdvrEP82Nn2+/fHV28c7+tnrccjn7A
Vs+TDlc+YKvnHYdnH8D6sp8ewPqyCx7E8rL7HsTnsY+5OMkhLA+7wSFMH1x/
Ev4aD3C41GFsT/YoF18+jP3FznjEVs/rDrc9gvVlbzmC+bEjHbXV877D5Y9i
e7CnHcX82A+OYn+z8x3D/Ng9j2F69sFj2B7s+MdxPLJrH8f2Yi86ju3Bfkv5
sYudsNXPUxweegLrwz53AvNjpzmJ8yG7hYvXuzjsKXweu8wpXC/YE118+5St
xkMcznka53N2l9OYnr3nNNaHHesMtje72hlcj9hzz2B/sl+4uMhZG/ZT9lla
b8jjztrq55MO3ziL6y872zn5/Ctadzxnw/6QvfOcDftzdvTztno/x+HKwsr5
iD1bWDl/sZ+et9X7DQ4XvGDD+ZTd94JvftH62AVf/2ud5KKt/vtODje4KOtz
UevlF+X4uf1NLnXJVr/f5PCoS7I+UbW+fMnX3lpnvGyr8RWH21621fiNw1su
y/Km0zrSFUzPLn8Fn8eeRunZD67I8ZpW63xXbTU+5HDPq7K/E2l98Kqtxn8c
jn/NVr+/5nDta7Ya/3N40TVbvZ/k8NtrON7Yxa7jeGYPvY7jmX1OWInPsNPc
wPeJ3eKGDfEb9vobNsSH2GFvYn7sMjdtiN+wJ9601fivw7dv2ur9OYdz3pLz
ZRGtu9yS5cmm9Z5btnq/yuFYt2V9c2td7bYN8R32XBe/uG1D/IVd5I6t3n9y
eMAdW42/O3zyjg3xI3byu/g8duO7mJ69itKzQ96zIX7ENu/hesMec8+G+BD7
2j0b4kvsLPdxvWP/ed+G+BJ7+30b4jvsqA9siC+x/3iA6dkzH2B52Y+Flf1G
cP3XQxv2E+wjD23Yj7ATPbLVz58crvfIhvgNeymlZ394ZMN+hl3isQ37GfaI
x/g89sXHNuw/2emfYH7s1k9s9fM5hzc9sSH+xY7wFOvD/v2pDfEV9pSn2B/s
e09t2N+y8zyzYX/N7v7Mhv09e/8zzI8d97l/13xuw/6ZvcDFr59jf7F/fuHf
g1/YcH5gn3Fxqpf+3czFa19ifdhhXmF/swNf2XB+ZY9/ZcP5m33zFfYHO/tr
HM/sTq9xvLB3vbbhfMmO8QbTs6u8wfHGnvMG82M/e2PDeYtd6K0N50N2v7fY
XuzjlJ6d9B2mZzd8h/3NXvEO+5Md4j3Wlx3wHtOz/36P7cG+4uJMH7A/2O0+
4PPYWz9gedmRP2J7sit8xPKwp1N69sOP+Lzgutcn7C/2oU8437AThAiE94ld
R1h5H9iLXfyO8mP/+l0gvO/sYcLKfBVcpw0ZCPVlt3TxBmExrv+1H2GHC4X1
Yf8mrKyH7EnCyn6AfYfSB9ddQwfCes7e6+LYYQJhP8quHiYQ9svsecLKfpz9
MkwgnHfYP30fCOcR9kBhJZ7DPvV9IJzn2CnCyvFW/z/iUOEC1e8nOWwJK/Ec
9thwgRCvYV8PFwjxAHbW8IEQT2B3EFbiPewd4eX7HFvraBF8/al1JWElnsKe
JazEU9hPIgRCPIn9Y0T/7hMxEOIx7KMRsTzsxJEwPbt+JNmfybReJvz1fpTD
H4WVeBC7ZGRMzx4ZGfuDfSmyLG8orTNEke/bl3+v3uE2UXC8sTcLK/EkdsSo
ger33xwuF1XON1O1nhrVtx5ofT+qfN87aJ03WiDEe9g9omF69oFosr1qaR0v
Or7v7FrRcb5hL4weCPEk9pvo8n0orvUvMXC+Yw+JEQjxJvbZGIEQT2KnjhkI
8Sx285iYH3tdTJyv2d/HCoR4Ebt0rEC4f8SeECsQ4knsW7HweewcsXE9Ynd2
8W5hJZ7EjhkH68OuGgfXS/Y/wsr9IfbzOIEQD2IXjhsI8Sh2/7iBEM9in4gb
CPEidrJ4+Dx2o3j4PPbKeIGwn2B/Fx/Tsw0XjxZW4k3sq/ED4X4SO3MCTM9u
nyAQ4mXsbS6OkjAQ9mvsignxeewZCbG87EcJ5Xg7o3WBRJie3TsRlpd9OFEg
7FfZCRMHQjyNXTdxIMSz2EuElftZ7PeJ8Xns4kkCYT/OHp4kEM4L7AsuTpc0
EO+bkVslxfKwNyYNhPMOO3wy/y4rrJxX2JNdfDcZ1oedO3kgnCfZ3ZJjfux9
yQPhvMuOkwLTs2ukwPqy56fA8rJfpQjE+2bkoinxeexBKQMhnsA+nTIQzvvs
lKmwvuymLl4jrJyn2aFTB6rf/3HYTi3HY2mtx6WW7ZlO6xupfeup1tnSyPko
jdYd08j+yKb1TuGg+89aR0/r35XTYn3Ys9PK8tbQ+qnw1+//OVwwHbYnu2+6
QLh/xT6WDscLO0l6HM/sBunxfQuuP1F+7FIZcLyyR7n4cgYcr+yMGQMhXsVu
mxHfV/aWjDhfsyNlwvqyy2fC+gbXDzLhfMDOlxnXI3bPzLgesA9mxvWQHT9L
IOwH/qc5TbZA2E+zW2QLhP06e302uZ7aWofN7nvfv8kThb9+vyXYzplDjvcz
3+Q9wko8hx0rZ6D67185XC1nIMQD2HNzBkI8g/0ip2zPrFoXySXHey6tB+SS
7fnTNzl5btke+f+P2Mwj14OMWo/Jg+3FvpYH25udJW8gxOPYf+aV692z/6+9
+46uqkgDAB4RiBQJJfSWUEIVXVkVSCEEQg3wXQi9hV51YRVXZIEISFdA0UVX
FAuKoPReNFIWUEBQivRApEjvveyZPOa+r533TrK7uGr473fOcO990+e7cyc1
Na97xo63x1QHVQMSb+RuWw1IPIV7RjVbnlNUnzf2nk8kHF4dyH4c7lHVgewH
4t5eHch+H+5iNXy7Zw0g8RTuBTWA7PfjvlMDSDyau344kHgJ95vhQOIV3AfD
6fW4K0QA+T6M+4UI2h9yfx0BJB7BnT0SyH5J5sT2kYDjEcKfGXvjBcIXI8n9
hCOjgJxvxD0mCnA8QPjHKMDrfeESNe14k11175qA12Np9r2aQL5P5m4YDXi9
LfxWNJDzj7iTowGvt4Ur1aL3436xFk3P/U0twO97hHPGADl/ibtVDJDzf7g/
igE8nxE+EwN4PSNcrTbg+aDwiNpAzv/h3lob8HxDuHAd+jzc3eoAnk8Kz61D
n4f7Zh3A80nh2FjA80nhScbe+bbwvlgg5zNxh9Wl+cE9oC79Pdyr6tL7cQfW
A7yeEW7mx9Pq0ftxn6gHeD0hXLU+4P0MwkP9eFN9wPsBhIMb0PLg7tSAXo97
lh9faeCOh6qjGwI5f4N7vB/vagjkfA7u0EaA16vC/RoBXu8KL21ky7Or6kxx
tj/qqLpxnG0v/VVPjbPtpZfqlDjA63nhKo19e1Bj2x+3Ub2OpecOamLbQyvV
bZvQ9NwzmtDfw32+Cc1P7vCmvj3KGJ1vxL29KS0P7mJg62tT1T2B/l7uBUB/
T1pd36HtkftNh/a33AdZeu4KzWh74H6hGe2vuL9uRvtb7uzN6XjI3aI5HY+4
pxuj81O4TzWn4zH30/FA5ivcr8TT8Y57czztj7kLtvDtLi3o/bi/bEHLi/u6
H9duSa/H/XpLmt/ce1rS/OYu0wrI329Jq1e0svnhOX+GO0trwO9ThaE14HiE
8D9bA17vCB9rDXg9J/ynNkDO/+D+exvA+1GEN7QBvJ9AOG9bm9+B6fLMtoDj
AcKX2gI5/4U7qh3g/SDCY9uR9AFz27n9m+qbbvruqmPbw/34Sz/Vk9rb39dT
9b72tv3Gqw7rQH6/8ABjz/pQ9aoOtvzLqw7sCCS+wd2sI5D4Dve0jrb/i1Z9
oqNtH9VUV+1En5d7aCcg8SfuTZ3o9biDE2h5cndKoPnNPSvBPk/zdDm6s2+P
70zLk3uXMYpPcYd2oem5+xmnFneE6qVdgMSvuDN1BRK/4m7c1ZZ3gOqpfpzS
1e2fa6bHg7rZ8l72q3hGd9L/Cp/vDmR/EXd4D5o+rd7eA0h8i7tYTyD7j7h7
9rT1qY3qBT3J+PN/5wq9geyP4n6hN5D9SQ/a0/sAibdxn+oDJL7H/XRf336l
L5D4IvfmvvR+3AX7AZ6fZDiNzvIXIPuPuOEvQPZvZTjDvyWvGQjk/XaGM/wg
/f5gWx+Xqf7FGO3feNDOPwTI/kzuBGO0/5J7tjHa/8p9lV2Pu9ZQwO93hCcM
pc/LvdvYG78TLjXMjmcxqp8dZq9XXvWyYfb3RKp+OBHs9w+qmxh75jOq30m0
9aGa6p+NvfFL4cdfARw/FX7ZGO3v4l5vjL4v5M49HMh5VtztjNH+J+5P/fjC
cFqezEkRIwDHt4RHj6DpuX8YQdqbcPGRZLwQ7jWS1HfhhSMBz5eE744E/P6W
O7nBq4D3DwlPMfaejyF8yNi7XhCuOArwekl44ChbHv1VJ40CvP9BOMdom9+9
VLccDfg8aeEPjQPMv6R0+ZkxgNfTwsONPe+HVW8ZY/Nj96/hgJtjgZ5nwxw7
DnB8U3iSH+/z47DxpDyEB4y3/c3EdDlwAqlvws0mkPrKHTJtAqnvfzhfeZ30
d8LRE3/fbjwZ8Ptz4amTAb/fz3CG0+KEg28Dnq9lOMMZznCGM2w8vfoM6/0R
mkcap663U9LlIp+CXa/8T3zL2HN+wW/Sq2fS/OJ+5HNaHtzNjVPn01dUv2/s
2b+dHif9eRbY9Xyk5mHGnvctqr+dZa9XQ3X+2XD/fWkV1QnGqevFONWzjVPj
PbGqr7L03LW+ALueVz3B2PP9g+rdxp54gupSX/r2s8ae7+9ULzP2rFc1Jz88
x+bXHM1JTea49U1z8jtz7P32pMuPz7X5nSVK88vGnu8LVK+fa8sjp+rc82h6
7nbzaHruT+fR5+G+MM+tr6oj5vv26PmAv68V/mG+za/CqosvAPz9LXdAb2MU
j+VetID058L3FpDnFW64EO7H84NVv7WQXi+trrSI3o/7xUU0Pfc3xiiezJ1z
MX1e7laLSX5zh3xE0wufWUzqk3C1JWDjoapHLCH1TXjrEre/jdRceKlvd1tK
78c9149vLrX9waVIzbHLfHvSMlsep9Lj6LDlpD8RHrCc3E941XJ3vFQduMK2
x2Oqm62w5b1D9bQVtrw3qz6xwo6H36quutK3h66k1+PeZOyZ76gOXkXTc3da
ZevLCs0Js1aR8UD4yirb36xWHb3atucP0+Vdq219mK069Cv7eyb8IT0oCfB8
5LfmxPA1tj5VVT3K2Dvf+6+759pf12+uo7/3AXv61+vd8ep36c0bbH9yOEJz
wY1A1kvcXTYCWU9yf+nbSdc3uuOV6tqb3P5W9evGnu8rVe/ZZMfrNRlOhzds
tuN5vOq8W8DuJ9Cc3GGLrS/tVc80Tp1P9FB9ydiz3lMdtRXselX12K30ebh3
+HHJ78F+P6a6j7HnfaXqxd/b9hanOmCb7e+eU93Ij9/eZuv7QNWHt9nyHK66
8na4Px8Zojngpe3kesJrt5Pn+d1524+2vk9RXXSHrQ/vq+6xg/RHwvP9+PYO
0h6F6+0E+32Y5pA3dpL+WvjATtvejqkuvwtwPEz4+V12vLyk+iuWnjvbbjIe
Cccbe+IVqj/YDTgeJnzSvV6c6qd+8u1EY+98TPg7Y288S7jAHsDzdeHOewCv
F7ijvzBG6z3ua8YBqf+iNMfsBRwPEH5tr5tfqn/aa5/nedWl97n9gern9tH0
3Mv3Af4+WjjzfsD7wYSb7nfzU/W7+wF/ny58dD/g973CTxyw+fWe5oTBxt7v
a4X/dYDkh3Ceg259Ut3e2Pv9tvBnBwF/3yx88aDNj86qIw+R/BYe48c/HqLX
4y6RbPurGM2JvZMBx6OEFyUDjucJ30sGHC8UbnjYt986DDieJZx8GHA8S7jS
EdLehF88AjjekmbnTAEcjxFulQI43iL8kR+fSbH96XbN06v9bPvDzapH/EzT
c2819sZrhAsftePtHNXdjtrf+7HquUcBx/OFbx61zzNZdewxwPES4UnH6PW4
9/lx2HH6vNwDjrv9iepVx+nzMicFnrDlOUV1sxO2PiaqnubHJ07Y8eBl1VV/
oem5h/rxpl/c/kx18Enf7nSSXo971kn6vNxXTrrjkeroU25/pnr8KVtf+qre
dQrI+zDm5NDTtr70UN3vtC3PeNVLT5P8EM50xra3hqobnwE830mzU87Y+uio
rnLWtwedpdfjXnfWHS9UB53z7bbnaH5xzzD27KdXfZ5djzv8POB4FXfAaD/+
wY+LX3DHQ9W9LgCOVwkvvGD7k2Kq7/pxg4vueKl6ykWanvvQRcDzeeGKlwC/
7xYe6MdJl+j9uHNcpvfjbnmZXo855MPLtj0VVn36MpD1CPczV4Csd7iHG3u+
h1G9xdhzfkSk5kJXaXrurleBrMe451wFst7jvuHHda4B3u/AHT3xGkkvvPea
rc+nVJe9DjgeKdzf2LveFV553bb3Haqz3rD5tVq1c8M+z2zV792w+blQ9fEb
gNfrwk/eBBwvEB5i7JkvqN54E3A8QjjfLfq8zAkdb5H7CX9+i/we4cu3bH81
R3XN2/R+3ONu0+tx77xNr8cdcoem5+57h5Sn8JI7gOPRwg/dJfVFOO4/9JG7
pL6n1Ykv3QO830l47T3S3wjnCnDwfiThNsbe/kz4E5ae+5yxdzwVrvGQY88T
UP2qsSderHqbsXe+JVw0k09Hd83kkPfJ3HOM0fts7hvGnr8fki5PfNjB+wmE
9xp790sIl83skHgOc0L/zA7+XlB4ZWaHrOe5s2ZxcLxG2MliyytR9XtZHPw9
oPBxY+/5mMJPZnVwvEZ4SFZbXuNUbzT2ns8unC/Qwd87CncMdEi8hjnx80AH
x2OELxuj8+e4az7ikPPzuMf58c5H7PPGqg7JRspbuG82B+8HE16SjdQn4Yey
OyRewh2X3cH7dbin/8PYux9H+Eh2m18HVT+Wwz7PftUv5SDtWXitH+fKSdq7
cBtj734O4U9yOiSewH3OGMULuGs86pB4QVq97VEHxwOEi+ay/ckE1T1yOXg/
JXfS/FwOWW9z36bXE64X5JD1NvcbQfR63AeC6PW4y+d2yHqd+/ncbntX/RVL
z50tDxmPhOPzkPFG+IM8DolncJ/M4+B4gPBTeR2yH5Y70RjFH7i/y0vvx10g
n4PXu8KdfTv5i3wOWc9zX8vnkPU4d0ywg/cjC78W7JB4BvdPwfR+3KXz0/tx
P5ef/h7u5fkd/L5JOHMBB89nhJv68bsF6O/lPlrAwfEA4ScKOni9Ljy4oIPj
BdwBGwqS3yOct5BD4hXcHfx4ZiEHzweFLxWi9+OOKuzg9bjw2MIOWd9z7yhM
78ddsghNz92niIPnu8KLizh4viwcUNS3GxWl12MOeduPDxcl+SFcuRhNz/23
YuR5hNcYo3gG96PFHRKv4G5d3CHxCu6PizskXsF9trhD4hHc1Us4eL0kPNKP
vy9B78ddpKSD11vc0d39eF5JB7+PF75V0iHxCu66IQ5erwpPNkbxEO79IbY/
3Ky6XKhv/zXUIfES7tWh7nhjnHTF/f85VUeXcuun6vGl3Pqjelcpm3/FVIeW
dscH1f1K2/xpqnppaQfvDxHOVMb+ngnpcfLUMg6OXwinlLH9/3rVVcqS8hUe
VJa0L+F1ZUn9Fw4KI+1XuG0Yaf/CM8JI/yJ8Poy0L+7EJ8o5OP4lPLicg/eP
cYfMLWfbT3BqPOVKOTf/whUnRpe3480K1eP9eJexJ96nOrSCfZ4pqvsZe+Jx
qpdWcNu76kwV3fJX3biivd5B1VMruvVDdUpF+3syRaTD0wdVIu1XeF0l276q
qA6qTPoH4baVbf17SvWMyvR63Ocr2/oTpjr8MZsfkapHGXvmE6q3P4b6n38D
TwliSw==
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 4], 0.25], 
          NCache[
           Rational[3, 4], 0.75], 0.5]], 
        PointBox[CompressedData["
1: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
ZyO2h93Axas34nhlv6f07GKbsD7sMS6+6uLkv+L1ZLd1LL3/yt72K+bHDr0Z
28MutxmvJ3vmZryf2Pc343zBzrIF5yN2ry14v7MPb8HrxY7+G/YHu7aLl/2G
8z37FaVnF9yK8wl7+Facz9kXtmJ72Ym3YX+yW2zD/mT/ug3zY4fYjusV29qO
6dlTtuN8zv5jO7aXnX4Hpmd33YHtZe/bgdeLHWmnAfsFdjXH0n6DvdDFf+/E
8th5dmF57EG7DNhPsU/vwvLY8XZjfsH1Ohd/2m3Afoldcg+OF/Z4F9/Yg/3F
TrUXy2N3cPFOF4fdh+ORXXEfpmfP2YfXg/2I0gfXfffj9WAf22/Afpod64AB
5w12PRevdCydF9hvDxhwHmIXOWjAeY096qAB3xexLx8U+e3QOukhA38vk9za
xb8dMuC8z/7xMKZnexxL8Qj2dBffdSydl9mZjhhwHmf3OGLAeZp98IgB31+x
ox7F8tg1jxpwXmYvcfGLozge2PmPGfD9FHvoMRyP7HPHMD92wuM4XtnNjmN5
7I2OpfMs+yvlxzZOYH3Zk07gfM++dQLnS3bak4YcL1fc+STOF+w9J3E9ZUc4
henZVVw8/xTO5+wnp7A97FyncT5mDziN6dknXRz3jAH7GXZDF69xLO232B8c
S/tVdvGzBuwX2WPPYn7sa46l/Sg7xTlMz253zoDzAnv7OQP2++ww5zE9u7yL
Z7n4wXkDzivsrBfE9Qylde8LmJ595IIB553/tpdfNOA8zX7t4kKXDPl9I8Uj
LhnwfRf74iVDfl6nOMllQ35fSHFLx9L3d+zNlw35eaLikFcM+P6PbV/B9rCn
Unr2nStYHjvDVTHen2rd7Sr2B3u/Y+n7NHbka4b8vFVx9WuYH3uRi59dw/aw
817H8tiDr+N4YJ9xcfwbBny/x27i4vU3MD/25xsGfN/HLnUT82NPuIn9wb55
E8tjp/4d07M7/o7p2bt+x/HKDnfLtyvdwvay53rTL9b68S1Dft9JcY7bhvw9
ieJ+tw34Po99/LYhv6+gOPYfOF+w6/+B9yt71R+43rHfubjoHVzP2KMdS/sZ
9pU7Bpy32Mn+9O02jqX9DHsrpWeHumtAvINd9i7mx55B6dn37hqw32Bnvof9
ye55D9dL9qF7eL+wo93H+Yxd6z7Op+yl9w35fRzFL9EBqR7A+Fbc4YFYX0tq
vfOBt3069w3x0IDfi2JbD7310XrKQwN+j4r9x0Pv9cuvc/pHon9r/yPveyT6
d5zWkR4b8vtxiqs9NuT3txQvfIzrD/vvxzi/sfP89Z/59F8GPF9gx3si2vNa
68ZPcH5mr6P07E+Opf0ru+RTA84P7PFPcX5i33hqwPmOnepvA8437A5/Y3ns
nX9jeeywzzA9u+IznF/Ycyg9+9EznL/Z2Z8bsL9m931uwPMT9rHnBpxf2LFe
+Ha9Fzj/sVe+wPqw374w4Pc82EVeGrD/Z496ieWxL7/E8chO+sqA/S+79SsD
9vfs3xwHfP8roPOPr/F+YXteG7B/Yk9/jfMF+y6lZ2d6g/MBu8cbXH/YB10c
9S2Wx675FstjL3Hxi7cG/B4AO/873x7q4nMuTvjegP0du9l7XA/YG98b8HsF
7K8uNj5gfuxJH7A+7FsfMD922o8G7I/ZnT9ifuw9jr9vF+ZpHeGTb1dx8fxP
WB/2k0+43rJzfTbgfMAe8FmMtylan3Qc9P244rhfDNgvsBt+EfPRSK3XOJZ+
L5H94QvWh138K5bHHvtVzBdjtL72Fctjpwgwob7sdo4D47dab6f07DAhTPg9
SXZ5F88KIfKztH7gWNrvsbOGNOXfN1Dc28VHHAdWR+sYP5j/Wi9yaV3nB9Ge
TFovdxy4X9D69Q+iv1NoXehH3x7hOHA/ofVFx2O8v0+hOEkoU/59CcUtHQf9
foXizaEwP3bI0Oa/7re4WtuhsT/YU0OL6xVK6zuhTTjPsDOE8e1uYTA/9n7H
gfsVrSP/hOnZ1R0H7pe0XkTp2c9+wv5k5w3r24PDivslodZnwmJ72PHD4Xhj
NwmH6dnrw2F/sz+Hw+vNLhUe82NPCI/9xb4ZHvuDnToC5sfuGAHHK3tXBOwP
driImB+7UkTMjz03IvYH+3FEbA87RyTMj90vEubHPh4J+zO4rh8Z68NeFRnn
E/a7yJgfu2gU7E/26Ch4vwXXyaJieew2UXE8s7dGxfawQ0XD/NhlXTwjGt7P
7HvRsDx25ug4Htg9XXwoOl5PdrQYWB92rRh4v7CXxsD1jP0yhinHuxQXiGnC
foI9LKYJ+x32ecfS72mzE8UyYb/Fbh7LhP0ce5NjaT/MDojt22ZsE+KH7MmO
pfMc+3ZsE+Lb7HRxTDjvsrvEMeG8zt4bx4R4ATtiXBPiu+yqcU2ID7MXxDXh
/QL207gmxIvYuX824f0G9kDH0vcXwfXP8Ux4f4XdKJ6o70yt18Yz4f0T9sd4
JrwfxS4R34R4GnucY+n9A/b1+CY8f2enTOCdj7Ru71iKt7B3OJaen7B/Sojj
lV0hoQnxefZsx9LzNfZDxwHO326tsyUy4fkRu08ivB/ZRxOZcN5kx0xswnmZ
XTcxzifsFYlFfw/S+k1inG/YhZNgevbIJCacN9mXkoj5uLXWv/zi261+MeE8
x97yC87H7B+SivmqhdZlkor5porW05Jieew/KT07YzLf7u7iA8m885XWUZJ7
71eta7h4cXLvfKf1cxfnS2HCeZY9xMVnU2B+7AQpTThPs5umNOF5EXsDpWd/
SWnCfoJdOpW43wtpPTEVlsf+ndKz06TG9OxOqU04b7N3pzZhv8UOn8a3K6cx
Yb/FnudY2u+z/0pjwn6YnTOtb/dPa8J+k32C0rPjpMP07AbpMD17dToT9qPs
9+lM2E+zi6U3YT/PHpMe07Ovphfr6ed8OifPIMZLQH6d2zoO/L45n87bMmB+
7NAZxXpyW+tyLp6ZUczXT7W+n1Gsdw+0zpLJux5r3SuTuB9ea304E9aHHT2z
GA9ntK6dWdzv97Relhn7k/0qsxhPl7QumAX7mz08C7aHfSELlsdOnFXcz1e0
bpEV+5P9a1a8XuwQ2fB6sa1sWF/2lGxYHvsPyo+dPjteT3ZXF+/LjvmxI+XA
682ulgP7g73QxX/nwPLYeXL69qCcmB/7dE6sLzteLuwPdmMXr8tlwvsa7E8u
Lpkb68senxvby77h4lR5sL3sDnkwPXtnHryf2GHzYn3ZFfPi/RZcP8qL/c3O
ng/ne3bffNjf7GMujpUf82PXy4/rFXtlfsyPHPAV0ys2Cvj2pAKwXiu+5Tho
P6I4bUFTjgcp7lzQlPdDivcUNOXnPYojFBLrSTmtqzgO2m8rnu846HmZ4ieF
TPl5p+JchU35PKl4QGFMzz5Z2JTjQYrjFjHh9xvZDR1Lv8/EXlPElN+3UPzB
cdB5XnHxoqb8PoLisY6D3pdQfK0olsdOUQzry25XzJSfhyveXgz7ix2mOF4P
dvnipvy8WvGs4qZ83lf8wMVZS4j1drbWvUuY8vNmxUdKmHI8QHGMkqYcD1Bc
x7H0PiJ7eUnMj/26pCnHAxQXKiXGQwOtR5TC9OyLLk5S2pTP44pbOg6KJyje
XBrnA3ZIw5TPu4ptA8tjT6X07DsGzjfsDKYpn0cVdzNN+byseD+lZ0e2sD7s
6pYpn2cVL7IwP/YzC+dzdl7blM/zigfbphyPUHzGNuXzuOL4ZXC9YTcpg/3F
Xl8G1xv25zKmfB5XXMqD7WVP8GB69k0PlsdOXRbTszuWxfTsXS4OV863K5XD
9Z49txyOF/ZjSs/OUd6U4wWK+5XH9rKPlzdhv8KOXcGUnzcqru/iVS5+51h6
f5tdtCK2hz26oinv9xRfqWjK5znFySr5dptKpnzeVbyV0rNDVTZhP8kuWxnr
y55R2ZTPA4rvVTbl84DizFWwPuyeVTA/9qEqphwPCLZrVfXtpVVN+Tyt+GVV
MR6Oa12gGubHHlYN07PPV8P+YieqLu6HA1o3r27K8RjFm6pje9gBNbA+bLOG
GA+7tZ5cQ9xPh7S+XQPrw05X05TPc4q7uHhvTWwPO2ItUz5vKq5aC68XewGl
Zz+thdeLnbu2bw+sjfcj+xSlZ/9cB9vLblQH07PX1sH2sD/Wwf5gl6iL9Q2m
+x6oK67nNK2j1BPzRafvthwH7g+0nlLPuz7pHPConnf+1zp7fe/8p3VfFx9z
HBj/1jpWA6wPu14D7/qt9UrHgfsrrd82EPUppHWRhuL6N9V6VEMx/zbW+nJD
cf26ap20kWjvGK1bNxL16av1b41Ee9pq/WNjzI/taSzG/2ytpzcW7Vms9V1K
z87UBNOzeziW/j049sEmor6ntI7a1JTjV4prNsX5L7h+0RTXV3b+Zrg+s4c2
w/kjuE7YHMtjN3PxxubYH+yvzbG+bKMF1oc9qQXmx77VAuczdtqWOH+yO7fE
+Zm9pyVeL3aEVtgf7CqtcP1mz2+F8zf7SSscj+xcrXH9Zg9ojeWxT1J6dtw2
WB67YRvMj72mjQn7j+C6eFsT9lfssW3FfLRW62suTtEO5wt2u3ZivKzWens7
Md62aB2mPc5X7PLtsT7sWe3F/bBU6weUHztrB2wPu3cHrC/7CKVnx+iI9WHX
6Yj1YS/vKMb7FK1fdzTl/YfiQp0wP/aITpiefbETlsdO0tm3W7p4s4tDdjHF
72VpbXfB+rKnUnr2nS7ifhqidYauuF6zuzkOfP9K6/2Unh25G6ZnV++G6dmL
umF92c+6mbDfYeftbsr7VcWDXXymuwn7LXb8Hibs19hNHAe+P6v1eseB7z9p
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
4Ph7POG61okLe8eD1i0cB/6+tta/FhbzTeC/R++3337/9zyntCW//+a3335L
flHWgu+bg+uh5SyIh7PPlbPg+192wvIW/B4du5ljab/D3lhetCeT1l9dbFTw
7UkVsDz2rQrYH+y0FTE/dmfH0vMC9p6KWB47QiULvj9mV6mE9WHPr4TlsZ+4
OFdlzI89oLJ3Ptb6ZGVsDztuFd9u6OI1VbA89gdKzy5e1YLnFeyxjqX9Ovta
VSyPnaIalsduVw37m729GpbHDlPdt8tXx/zYs6rj9WQ/cBz0frfirDVwvLN7
18D82EdqYH3YMWpienYdx9LvA7CX18T5iv26Jl4PdqFamJ49oha2l32R0rOT
1Mby2C1r43zK3uzikHUwP7ZdB/uTPdXFdxxLz1vZGer6dre6eL3Y++tif7Ij
18P+ZFevh/mxF9XD/mI/q4f1Zeetj/cDe3B9rA/7DKVnx2/g200cS+d59nrH
0u93sD+7uFRDLI89oSGWx75J6dmpG1kQb2B3bIT9zd7VyILfV2GHayzmk8Za
V2os7ocGWs9tLNbbaVo/bmxBvIOdo4kF70Ow+zUR42GTzgHnm4j15JLWiZqK
8k5p3bypuF+eab2pqbheYQroHNDMks9bik3Hge+Paj3ZceD7oVrfbibWq9pa
p2vuvZ5ad3H8PR7YQeu9zUV7hmgdsYUl4u1aV20hxsMCrRe0EOVt0Pqp48B4
l9a5W4r77YzWA118ynFgvErrn1tZ4n0BrRu1EvPdbq3XthLXc6vWH1uJ+XS1
1iVai/LmaT2uNfY3+3prUV53rVO28d7PWrdvg+OBvaONqE89rX9qi+ONXaEt
lsee3VbcL1W0ftjWO99pna2duJ89Wvdph/cT+2g773ypdcz23vVU67rt8X5m
r2iP+QXXhTuI+yGV1iM7eNcLrS91EP2d4h+5VUcx3yT8R/6hk7gfo2pdphOW
x57WCfNj/9kJ51t2xs6Ynt29sxhPEf6Ro3QR92MMrWt0wfayFzsOfN8rv87P
KT07X1esD3tIV0zPPtvVkuP1ihN08+2mLt7g4i8uLt1dzJdPtZ7YXcw3j7X+
vTv2JztND1zv2Z16YHns3T3EeLqpdfiemB+7ck+sL3teTyyP/ZfjoOcp/3Wf
6CXW8ztax+ntXW+1btDbkp8XKV7d24L9Gvt9bwv2a+xifbA+7DF98Hqwr/bB
+rCT98X2sNu6eFtfLI8duh+mZ5dzHPi+oNYzHQc4f7u1vt/Pkp/nKc7SH/uT
3au/Jb/vrPhwf6wPO/oAzI9dewDWh71sAPYH+xXlxy44EPuDPXwglse+MBDz
Yyce5NstXPzrIBxv7BCDfdsajP3BnjIYy2P/MRjvF3b6IXg/srsOwfLY+4Zg
fuxIQ/F+YFcbiunZC4die9h/D8X5lp1nGM537EHDMD37NKVnxxuO6xm78XDM
j72O0rM/DcfyguvxI3z7xghcj9ipRuL1YHcYifmxd47E9Ti4rjgK6xNcPxqF
9WFnH+3bfUfjesw+NhqvJzvWGMyPXW8MXm/2Ssff9/uftX47xoJ4BbvIWDGf
xNd61FgLzjvsyy5OOk60J7vWrR0Hfl+s9W8u/nG8Beddtme8BfEM9nTHgfEm
re+Ot+C8zs40QfT3Dq17TLAgHsA+OEG057zWUSda4nsKrWtOFPl90HrJRO/1
LKjzi4liPKXQOv8kMR8n1HroJFFeHq3POQ48z2qdcLK4HiW1buY4MN6g9UYX
f50srldrrY0p3vGi9STHgf9eiNa3pmB92Wmnivkmrdadp4rxkl/rPY6/M5zW
EaaJ9S6y1lWmif4OpfV8Fz+ZhuOJnWu6d77TesB073qg9UkXx50h7sfjWjec
IfrjqNZrHAc4f7u1/jBDtPeA1sVnWhBPZI+difMB+9pMC+Kh7BSzxHy4Set2
s3C+YG+fZUE8lR1mtm+Xd/Gs2Vhf9oPZ2F521jm+3XsO5sc+QunZMeaK+2mF
1nVcvHwurgfs13OxPHaheRbEq9kj5lkQz2VfnIfXm51kPq4n7Jbzsb7szS4O
uQD7m20vEPPdNK2nLsD2su84DnwfVusMC8V6NFPrbgvFfDZG6/0LsT7syIss
2A+wqy/C/NiLXPxsEZbHzrsY07MHLxbzzSCtzyzG/mLHX2KJ95m0brJEjKdO
Wq9fIsZTL60/L8Hxwi61FNOzJyzF9OybSy14XsBOvcyC5xHsjsuwvexdy7A+
7HDLsT/YlZZjfuy5Ln68HNvDzrHCguch7H4uPu5Yel4SXNdf6durVmJ57HeO
peeR7KKrLHhexB69CtOzr6wS80FNrZOt9u02q7E89lbH0nmCHWqNb5ddg+Wx
Z6zB9rDvrcH+Zmdea8HzIHbPtVge+9BaHG/saOuwPuxa67C/2EspPfvlOgue
RwXXw9Zb8LyLfX69Bc+L2Ik2iPU6g9bNN2B/sjdtsOC8+v/atzdif7PTbcL5
kN1lE85HwXXEX3G+/m/7qWPpvM3OvRnTswdutmA/xj612YL9HvvnLb7dyMVr
HcvP/8kft1iwHyL3tX+D/ILtO46DzjuKM2y15POMq7s5Djp/Kd5PjrzNks+b
rq6+TYzfJFov2ibGb1atnzkO/Pf7tM673Ts/az14u3f9/0eOv0PMb7O1brJD
1HeD1utd/HmH93poXWqnJc6vWk/YKepzU+ubO8X4eax16l1i/H7QuqPjwPir
1rt2YX7scLsxP3al3aI/Xmo9d7eY3+/9I+fYg/Vh99sj1s/rWh/fg/3Jjr3X
EvEBrevvFeN1r9ar9or+3KL1u73e+U3rovu886fWox0Hnk/+kZPt964vWrfZ
L/qzhdZb91tyfE1xqAOYnl32gLgeNbWe4eJ7B0R/WFpnPujbPQ9acvxS8aGD
OB+xox2y5Pih4lqHMD/2Uhe/PGTJ8VvFBQ5bcvxR8bDDYjxl0Pr8YUuO/ypO
dMSS48uKmzsOfD9H601HMD92wFFsD9s8Kub7GFpPdvHto5Yc31Sc7pglx18V
dzkm1ovPBXTee8yS46uKIx73zkcFdK56XIynkAV1XkDp2U+PW/LzA8W5T/j2
wBOWHN9VfOqEd77V+ueTlvx+peJGJ8X9cEXrtSct+f1NxR9PWnJ8VnGJU1gf
9rhTFuyf2NdPYX7slKctOT6tuP1pS36+o3jHaUuOTyv+6Qzmx65wxpLjg4pn
n8H6sh9Sena2s5ie3ecs1pd91HFQfFFxzHOYnl3XcVB8VPEKF785Z8H+mV34
PLaXPfK8JZ8vFF+i9OxfLmB72a0uWPL5QfEWF/9w0ZLji4rLXLTk85XiaY6D
zleK/7yI/cXOeMmSnx8o7u7iA5csOf6pOMplC85P7BqXsT/Ziy9b8vvTip9T
ena+K1hf9pArmJ599gr2FzvBVbyewfWGq5gf+8tVHK/s0tcwPXviNWwv+3cX
p7mO9WV3uo73C3v3dawvO/wN3658A+vDnncD5wv2XzewP9g5b2J+wfWJm5gf
O87vuB6xG7h49e8WnN/Z711c7Baul+wxtyzYDwTXyW9bEC9gt71twX6Mve22
Bfsxdug/LNiPscv9gfVhz3Qs7bfY9yk/dpY7vt3LsbQfDq6j/2nBfja4Xvan
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
+t6X/dNWG95nZFfYasvnRcWzt9pyPEjxw602vM/GzrbNhvfh2H0cS99rsI86
ln7vgR1zuw3fG7DrOpa+t2Cv2G7L8QrFbyg/duEdNnzvwR65w5bjGYov7bDl
eIriX3ZifditHEvfIwbXP+zC/NhlduH1YE/bhf3J/nOXLb8Ppjjjbhu+d2B3
323D+4fsA7txPLKj7LHleIviGntseJ+XvXgP3i/s53ts+D0ydr69NrxPzh6y
15bjEYrP7sX7mZ1gny3HGxQ33Yf5sTe4+IuLS+/H+Yo9cb8txzsU/07p2WkO
2PL7FIo7OQ6KhyjefQDnS3b4g7b8e3yKK7t43kFbjmco/usgrgfsnIfEelVc
6/6HMD/2iUO4XrHjHMby2A0cB/77rFqvPmzLzzsUvz+M6yG72BFcb9ljjmB6
9tUjthzPUJz8qG+3PYr5sbcdxfayQx/D/mSXO4b5sWces+V4j+L7x7C+7CzH
MT2713G8HuzDx23YT7Gjn7Bhv8aufcKG/RZ72Qkb9nPsVy4ueBLbwx5+EuvD
vnDSluNJihOfsuV4kuIWp7A97F9dHOI01odtncb07Cmnbdivsv9wcfozvt31
jC2fhxTvO2PL5xnFkc7a8nlFcbWzmJ69kNKz/z5ry+cdxXnOYX7sQS4+fQ7z
Y8c7b8vnWcWNXbzOcdD7Goo/ncfy2CUvYHr2+AtYHvvGBbye7FQXMT27w0Xs
L/ZOxwHO326tw16y5fO64oqXbDkeo3jOJewP9qNLWF929ss4nth9L2N69rHL
OB+yY13B/mDXu4L9zV7pWDovs99ewfuVXeQq1oc96irWh33ZxUmvYX/77bff
fvvtt99+++2333777bfffvvtt99+++2333777bfffvvtt99+++2333777bff
fvvtt99+++2333777bfffvvtt99+++2333777bfffvvtt99+++2333777bff
fvvtt99+++2333777bfffvvtt99+++2333777bfffvvtt99+++2333777bff
fvvtt99+++2333777bfffvvtt99+++2333777bfffvvtt99+++23337/X3eK
zJ4nhRs7f/e0bud40ONyWxIe0Hq749Q1x+x9vVTrMFk8/ypvgc59q2WB9IoX
ZoHyFP/tOKvzt0HrPFm/OcD52631oKwi/UutTzv+VtlvNS6oc7xs35zoe4W0
bux43+tUNccU0Xqd4x4xVpe83V3rT45PHP/2N1Lrktm/efo050/r8Y63JHQq
pPWN7CK/41qnyvHN7ZzL9UzrDjlEfu+03unYSd72s9Zhc4rrGaqQzhUd//WN
g8JrPSen6M+QWj/KifVlZ8/lvd5a980lrvfRf+RYub/5++WcqHW93GK8zNZ6
ZW683uy3lB+7SB5Rn+Faj8oj7oe+Wl/OI/qjg9ZJ837zm2/dvbeT1q3zYnr2
b45vd/9W43pa/5jvm53pIFVNrT35MD17ej4xnoprfTefuN/yaJ0pP97P7B75
xXhMq/XB/KK+8bWOWkDUN4nWNQtgeewlBcT1jqH1iwJYHjt/QTGeImg9tKDo
jw8FdD5X0Hu/FtQ5YSHv/V5A52aFYL1RvLGQ6M/HWn8tJPrrttZGYcyPPcnF
twp750Ot0xYR/X1e685FvPOB1nsoPTtCUUzPruLi+S5+4uJcxbC97AHFcL1m
nywmrtcKreMWF+Nhh9YNi4v5ZJPWa4rjes/+4Pj77bBa6+IlPLAfYI8tgfmx
r5XA9rBTlMT2sNuVxPzY2x1L+yV2mFKYnl2+lHe90HqW4+/T6RitH5QS88VM
rbOW9q43WvcuLe7HeVofofTsGIaYb7prXccQ631/rZcbWB77teNSzn8YonUh
U8xng7QeYWJ69kUT+5OdxPKI/ZrWLS1sL3uzhdeTHdL2rsda27YYj720nuri
Oy7OUAbry+7m+Pt+rK3W+8uI+bix1pE9mB+7ukdc73paL/Jgf7CfecT93ELr
vGUxP/bgstge9hkXxy/n203KYX3Y6138uRz2F7tUeUzPnlAe7wf2zfJYX3bq
Cpgfu2MFMZ910HpXBcyPHa6ib1eqiO1lz62I45n9uCLeb+wclTA9u18lnO/Y
xyvheGTHrozzCbt+Zewv9qrKOF+y31XG9rCLVvHt0VWwvuwrVbC/2cmq4vVi
t6mK+bG3VsXxyA5VDevLLlsNy2PPqIblse9Vw/LYmavjesHuWR37g32oOtaX
Ha0Gjid2rRpYH/ZSF7+sgesVu0BNHO/sYTWxPsF1olpYH3bzWpievamWB/YD
7IDaHtjPsU3H0n43uL7tOMD52611ujoeOM+wu7h4r+Pv+92n/8hV63rgPMpe
UFfMN5G1flpXrNcptM5dT4z3kloPrCeuV0WtT9XzwHk+uG5UH8tjr60v+iOD
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
9BG0p/Lgj+B6Ko+n9OzNxqn3Aez8Lh+LG+9WHv2xuPFq5bkfixvPVa43Jb2H
TxH3ewHsyHtTBN7Hsw9OEXifxO7zicB+eXLWs/+iW0+F+oY5d9xUuH6570+1
z5NdRf2tYKpt/9eNo9X/YvvbIJ/jVxoXxXPq+pw7zrgonj6ru89rjCPmL8/r
U6Yln1de3zst+Tz2OW/mtGR/8rrK9OR4/m/xtunJ+9Hn/O6f2udV5/+Pjkz+
LNme3f4dfjoveb2Ph7Omfm7H+1h3j6OlZiTHS69lhr2/rj8ejt//V3u/jTsu
fvML258nHQ/nzJ9pr9d3x8O5kVk4nh1j562aZZ9XM71u95Udjxd6PSK982d8
Bb9HudLXUJ7y4K8xP/b4EG82TuzXK3bmji7/G9wPyq3/DtdL+S7jxHzC60/T
O15uDjyvlQfOsc/b171+dY59Hkz1euMc+zya4nWnuZienJMzF9IrfzMX6qtc
61u4H5WHfQvXQ/ltSk/O3fOtHU8Xe93rO7he/23Of3me/PQ+cK7Xa+fZ/rTO
6w7zxX4PyOv75mN6cmQWpleu9j2MZ8pXfI/p2W9+b5/nBV7vME7sh/c5q+cC
SK/8+AL4PcrzF2B+7MYL7f2y1+sbF9r7JdLD4+iHIY4sste7lNd9jRP7Tbx+
0bgo3tfM61WUnhxvt9j+3pO9HrHY3q99vJ5hnFiPel1pibjxSHbOYOPEfiWv
xy+x48E4rzcvSY5nXndZKj/Fa6b7nDvauCicM9vruUuT/dnresvEjbcpD18m
EM8g503C9MoHlokbD1TuvRzzY49dnuzPPucvC3GrFQLxTPadK2x/WuH19BXQ
XuxIuZWQn/LAlZie/epK259We71xJdRHuVM+lkfOygnxN/nJ8djrWqugPykP
WwX9kR19e1Xyeez1nlXQ35V7/SD2vLDXT/2A6dmLfhA3ns6ON1ud3reuhvtV
+ZPVtr2e8Tmn5Bqx8y2vgzXivk9QfnmNfd78weu1a7A8doe14r7PYOfeF+Iv
jRPfc/K66jp7v97uc96QdVBf5TfWwXipvN049b5Gucd6gfct7MfSO3/eehjv
lRsV2PtliNc3FIj7Pkd5cgG0BzsS2SBuPE657wY7nt3q9YvGqfdhyqs2QH0y
ddaIjXa8udLrGRuhvuxopU3ivg9UHrwJ8lMevwnaW3nzJiyPHO/yIz7v2aN/
hPooz6X07HqFYs9rez280N5P/XzOmVQI5SkfKITylHtvtv25h9djNwu8ryXn
Ltts+2MHr1ttseN11Os7Qzx9C+bHLrvV3m/ZXg/YivUl572yFcpT3kDp2adv
E3e+qTxym7jzTXb+7G1QX+Wa2zE9O74dylOesN2O55W93p3ekV477Hhd1eun
dkB9lBdRenaznbY/V/T61p3irgfYWZ/stPdrba9L7sL07CDEL++C+iqv3SXu
+w52tMNuSK98325oL+UvKT276h5oL3Z8yB57v5fx+o094q73lLfvEXe9ptxj
b3o/tlfc9SI7Z95ecdejyo32pfcN++zzZpfXk/fB72HnHtln23uF1xfsT+8X
9kN9lPPTOy/7ALSH8t3GqfW88ucH4PcoVzwobrxBeZBx4ryIz/mvHYTylAtD
3PlQeo9K78jcQ9AeyvUOQ32Vhx/G9OxJlJ594DBc70ydNfYItHfGbhWJwXhE
jt5pnOpPytMpPbvsCTEYT9gDTsD05Pgrxs54wt5gnBqPlU8/MQbxGPZI49Tz
THm2sROvIefULBFzn6fKcWNnvsOeYFw0nEW93l0i5s4X2blnlYy58zHlMSVj
sB+NvbBkzF1vKDctFXPXa8q3lIq57/PZeVOMU+tJ5RKlY+56W7l/6Zi7Xlce
Z5xaT7Pz12B65VPKpPe9ZWx/nOn1TOPUep8dqVrW9peJXg8pC/VVfqMstJfy
9vTO6lEu5q5nlR8rB9dLeR6lZzcqD/0hU0cnl4f+pnzEOLXeV76gQnq/UMFe
r4d9judXgPooZ1dM77srQnnKn1eE+42dU7FSzF1vKw+qFHPX08qvVYq561Hl
QuPUepSd2/kkOx7HvB51Eo4X7DmUnl23clrnXVMZ6qP8bmUYz5T3V4bxUPnc
KpienP/rKjDeKi+tAvkpt6wac9e7yndUhd/LjkyvGnPX48plq6X3gGrwPFF+
JcQbqsXc9S476/TqkF55ZHWoj/Ls6pgfu2YNO1528jpeA9OToxNqQHnKu2vA
81r5rJq2P7f0ekzNGKyX2AtrYn3I8aa1ID/lW4yd+QZ7Si2or3KJ2jF3vsHO
6W+cWi8qjwvxmtoxdz6lfEqd9L63TsxdL7JzZ9aB9lSuUhfqo3x53Zg7n1R+
vS60t/K2ulgeOa97vZg7H1V+tF7MnY8q/4PSsxvWh9/Dzr++fsxd7yp/UB/K
Uz5snFqPKJ/fAPNjP98g5q532ZF8Y+d9Mzu7Ifxe5bsbxmB9w/68YQzeT5Oz
KjaKuesp5UGNMD37tRAXNorB+2x258bwe9nRUY1j7n4P5TmNY7Dfhl03K+bu
l1K+Jsu250yf4+8ap/YzKO/Pirn7RZTPbYLp2b9ugunJOUtD3LJpDPbTsO9o
iunZ05ra/jzlaJx7UbOYu59J+ffNbH+Y6HVBiDs2t/fLL4quz+3Nbf9oUvTv
zzdPtmc3j+PLmyefJz7n1mhhx9uFXY0HtkiO/918frVFcnzxOW+jceJ8g9ed
Wtrrs7+rx9FhLW15E3zO/8Y4MX/wulYrm1/Xo3HknVa2vJu83tvKttcgr89u
jenZT7e2/e9Rn7MWt7b351ivm7ex7fmm17cZJ/5/HK+nGie+z+h1qbbJ8dPn
qLS17X3oqLyure1/W4vyL5tty3/e6wHZtj8/43P0lWx7/e71ekM2tK/y6e2g
POWR7ZL3u9ezjRP7BXyO12yfHE+9jrdPjtdeT2gP9yf6nxzDKk8=
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[3, 8], 0.375], 
          NCache[
           Rational[5, 8], 0.625], 0.5]], 
        PointBox[CompressedData["
1:eJzs3WWUHbeaLuA2MzMzM2ObYsd2wTYzMzMzxxxD7JiZIWZmZmZmZma4KXe0
W+8rrV23PZk7d9aM/5z1nKOjklQqwVeq3cnqtynfKLifn1+K7H5+zn/6+fVN
063006Lv0tYctStXoSJ//xfNzv7tm91jLitZ74eNc387yaDH5TbU1nq8479T
3+xe8f/KNxyHPz+nrb+hdYbzf9v/x3+hdWfHR4/8/c/Seud5zI8d8QKWh13l
ArYHe7bjHs7/Ib/WTx072cXMrHXei1gf9oCLmB/72EXMjx3v0t/e/fbvAhfT
uqHjv2vzNm1CrZdfwvqyP13C8rBLXP7bc9v+XaMUWo++jOnZlx07rRE+jtap
r2B92e2uYH3YWxyX35B40ONoWoe5Kvp3Yq3LX8X07GlXRX+MqPWDq6K/xdQ6
xzXR3m/9de59DdOzDzou5TzAYbSOeR3Lw67jON2PBtN6sYvfurjIDSwve/gN
bG/2uRt4P9nJbmJ/Ybd08fqbeD/ZwW9hf2bbLp54C6/Hvn0L+zM7822sL7vb
bbwee4+Lo9z5242df6m1ru7ieXfwfrFf3MHnnV3gLrYH+7e7OB6xT97F8Y6d
8N7f/lGcElo3uYf5sVfdw/vB/noP68MudR/Lw/7DcTtnQsiq9bX72N7sdA+w
POyODzA/9vYHOJ+ywz/E/sKu9BDbiz3zIc537McPsT3YuR9hfux+j7C92Uco
PTvOY+wP7PqPS8N6gf3XY8yP/cHFvzzB/Ni/P8H2Yl90LK132Cmf/m1nuKhZ
Rus2T0V/aqz1pqfier20DvXsb+dw/nXQuuwzcb1RWk9x/OTv5h60ROt7z8R4
d0XrbM9Ff7ytdc/n4npRCv+Mo7/w9geta73wtofWC1+I/thd69cvxHw9WOtC
L0V9p2o99KXIb5PWZ16K9nysdZJX4n691rq5i9e+EuPJC639XovrRSjyM/7z
tXgeYmp987V4nmJpnfGNaI/4Wndx7LRGubha73rjnc+0jvS2tFgvaF31regP
XwvrPMfxj/1XsCI6P3uL94ud750Yr49oPdDFx9+J52WO1vHfe59HrRu9F/mN
0HqFiz+/x+eB/esH73ii9RjHkyf9/a+a1lc+eMc7rdN8xPTs9i7e+tE7X2kd
9pNvV/gknveSWk//5J3PtH74yTufaJ3zs7hfGbTu4+JDn0V/TKZ1rC++XfeL
93nVeskXMV+F1/qd44D1oNZFv2J69oivor2Da32e0rOTf/M+r4V0buXiDd9w
PmGH+I7p2Z7vWF72pO/e8biQzne+43zJzuJn/LNefKZ1d8dSevZexz/u902t
owYzxHildQ3HP5Yb97Se7/hHfzmj9UvHP8bbk1oXDO7bgx3/uN+HtD4VHK/H
ThTC+Ke9V2vdNARej72a0rO/hTBgPcQuHdK3xzn+0Z+2an09pLjfy7ROH8oQ
6wmtOzkOmC+03uHYz/m3Q+sIoUV/mqp15dCiP83SepbjgPlE6yehsTzsPGHw
euz+jqX1KvtoGNEfxmkdNyyWl90gLKZnL3P8Y7kxSOuPYQ1Yj7OLh8P2YI8K
Z8B6nX0pHF6PnSq88c941F/rto4D1rNab3Zx6AhYXna5CFhf9tQImB/7fgRs
b3b2iNge7F4Rsb7sAy6OEUk8T921rh0J07MXRcL7wX4TCevLLhwZ82MPi4z9
nX02Ml6PnTQK1ofdIgreT/Y6Ss8OFhXrw7Yc/1ivTdJ6QlQsL/tWVOxP7EzR
jH/WW5207hoN+wt7dzTMjx05OqZnV4uO7cGe6/jHfqyt1s+jY3nZ+WNge7AH
xcDxkn0iBt5PdoKYmJ7dOCaOl+yVjn/Emxdq/YXSs0vG8u2xsbA87KuxRHut
1TptbKwvu0Ns7I/sbbExP3a4ODifsivGwfTsGXFwPmc/ciytV4LqvnENWO+y
D8c1YL/Ajh3PgP0Su148A/Zj7KXxRH71tH4fz4B4C7tYfOOfeMCGn/IFx9J+
mp0igSHWW1q3TmBAvIe90fGP9eowrUMm9O0yCcX9GqP15ISiP/XV+m5C73ih
ddZEBuy32T0Sifq21npfIgP2++xoifF+s2smFu1VU+sFicXzaGn9KrG4Xg6t
/ZMYEA9kD3Hx6SQG7PfZiZP6drOkmB97jeOA9wVaf3cs7ffZRjJ8HtnjHQfE
w7S+kQyfd3aG5Abst9mdk4v6hNJ6Z3K8HjtiCnG/E2pdJYW43xG1np3CgP02
+2kKMV5+KqRz3pT/MR9LacB+mB0vlQH7fXbDVJievTyVAft59qdUBuzX2SVS
i/Y6ovXo1AbEA9iXU4vn9aLWqdMYsN9mt0uD12NvSYPzITtMWgP2++zyaUV/
26v1tLQG7NfZD9LifMrOkc6A/Tq7dzrMj30wHbRH34jpDXl9prhKekPe3yie
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
kVK+PbyUKZ/HUHyulCmfN1acrDSmZ7csjenZ60ubsN9nBzdM2K+zbcOE/S57
IqVn3zZM2I+zM5u+3c00Yb/L3mNiedhRLN+ubpnyeQDF8yxTPo+h+IVjab/P
LmCb8D6A/ZttwvsE9knbhP0qO6HHt5t4TIg3sFd5sDzsrx6sD7tUGZwv2X+U
wfqwr5UxYb/MTlfWhPeN7I5lcb5lby9rwn6bHb6cCesBdqVyWB/2zHJYXvZj
Ss/OXR7Ly+5X3oT1NvtIeRPWQ+w4FUxYD7HrV8D82H9VwPzYHxxL6132LxXx
euzfXXyxIl6PnbKSCftpdptKmJ69ycWhKpuw3meXdfwjHhpP6ykuvldZ9Ic4
WmerYsJ+nt2zCubH3l9FPM+Jf8q1qmJ+7IVVsbzs145HBf5eLLtQNfE8R9R6
aDXxPITR+kw1zI+dpLroz35aN68u+mvA31Nmr60u5ssPWvvVEP31rdZmDTFf
Bfw9aPafLr7p4ow1sT7sLjWxPdm7amJ7siPVwvZgV62F/YU9pxbmx35WC8vD
zlcb+xt7YG28Hvt4bWwvdvw6eD12ozp4PfaKOtjf2Z/riPkg2k95TF183tlX
HEvxMHaaejgestvXw/Kyt9bD+rLD1vftCvWxvOzp9XE8ZT+sj/eTnbOBb/dp
gPMJ+1ADbA92rIZYHnbdhtje7CX/QRdthOVhj2iE5WGfb4TzGTt5Y0zPbtUY
53P2BheHaIL1YXuamLDeYE9qYkI8iX2nCV6PnaWpCestdnfH0nqQvbepCetp
dtRmmF9QPb+ZCeth9stmWB52weYmrFfZg5ubEG9in2puwnqTnaiFCetZdtMW
WB/2akrP/ubi0i3xfrPHtcT+HFSnb+XbnVy8oxU+j+wIrXG8Y1dujeMVexal
Zz9xcZ42ON+x+7fB67GPUnp23LYmrDfYDdqasF5gL3Pxx7YmrKfYxdthevYo
F19yHHDeQutU7bE+7LaOA85DFdR5c3vRnte0Dt1B9Jd7WpfrIObTi1pP7YD5
se93EM/jea2zd8T07F4d8XrsAx0xP3aMTpieXbuTGG/2a73IccB5MK3fOA6I
Z2lduDOmZw9z8dnO4n7v0DppF99u4Tjgeyqt1zkO+L0srYN1Ff1hvtZWV9Hf
Zmk9oSvmx77VVYxnK7TO1A3rw+7aDdubvbub6E/TtY7cXfSHSVpX647p2XNd
/Ly7mA/HaZ2/h+ivE7Qe5PjHcmKY1id6iPFilM59k/cU41UnrVv1hOsp3tAT
7qfiEL2gPIo9vcT9bKv1pF7ifvbV+g7lx87SW9zvrlp3743twd7bW/TH7lpH
7WP+E09uqnWNPmK8GKz1fBe/7IPlZRfsi9djD+6L95N9itKzE/UT97Oe1k0d
B6z3tF7t4m/9xPNUTevS/bE87HH9sTzs6/1Fe5bUOv0ALA+70wBMz95B6dkR
BornuaLWlV08y8VPBor+WkbrPIMwPbu/i486Dljvah33N99u4OJlLv74m3ie
Da2LD8b+wh41GNuDfWkw1pedagjmx247BNOzNw/B/sAOPVTMl41/ylOH4vPA
vk/p2dmH+XYvxwHv+7U+MAzbgx1jON5Pdu3heD32ouFYH/ab4fi8swuPwPzY
w0bg/WKfHYHXYycdiddjtxiJ/Y29biTmxw72O+bHtn7H9mZP+B3ry75F6dmZ
RmF/ZXcdhfmxd48S83URrSOPFvVJpnW10aK9ovyUn48W43UYrfOPMcV+9L/E
jcea4jyG1ivH4nzD/jIW25td8g8T1kvssX+Y8npW8dU/RH9cqHXacaa8H1Xc
wXHgfkvxNscBfy9I63DjTXm/r7jieBO+Z2bPGG/K8SLFjxxL3zOzc/3p230d
S98Tsw9TenbsCaYcj1FcbwKmD6rfTzDleIviYhNNOZ4fZF+YaMrvSxSnmGTK
8QzFrSeZcrxC8UbHgfEcxSEnm/C9OrvMZLwf7MmTTTmeqfiuY+l7aXbWKaYc
D1Tcw8X7pphyvFBxtKlYH3bNqXg/2QumYnuxX03F+8X2n4b3gz1kminHuxSf
dnHi6eJ5faZ1s+mmHG9SvGa6aM+TWn+fjuMN25iB4xV7/AxTjicovkHp2Rlm
mnK8RnFnF++cacrxGMURZ2F52FVmmXK8Q/HsWaI/7NX6KaVn551twn6fPWC2
KceDFB+bjfMNO94cU473KG44B9uDvXwOzlfsT3OwPOwSc8V83F/r0XOxvOzL
c03Yz7NTzzMh3sBu5zgwHqR4yzxsb3aY+Tjfs8s7luIZ7GmUnv3AxTkWYH7s
3gtM2E+wDy4wIR7EjrnQt+ssNGE9zV680IT9CPvtQhPWU+wii0xYL7OHLzJh
P8E+R+nZyRb7dsvFmB97/WIsLzv4EhP2I2x7iQn7DfbEJSasR9m3l3jnW60z
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
tLAF8RN23iKWHK9QPKCIJccjFB8rIp73mFrHKyrKk1jrhkUtiP+wlzuW/p72
/zSHKf6//l//53liaRyv2Lf/1//r/8auVFb0d+u/xP3KWfD3XNlHHMt/v4wc
p7wF51vZ9R3Lf8+M/JeLPziWvo8Nqn+vYMF6in2xgiXHWxWnrIjp2W0cDwr8
vpi9qSK2JztUJcyPXdaxdL6XPaUSlpd9z3FgPFpxtsqYnt3TsfT9LHu/Y+nv
IbGjV7HgfDG7VhUL4s3shVWwPOzXlJ5dqKoF55fZQ6tifdhnqmJ92EmqWfD3
mNjNq2F+7LXVsDxsv+pivAiIp7PN6pie/aeLb1bH+rAz1sD0QfWuGtif2ZFq
YnuxqzqW3n+z59TE/sB+VlOMR35a56uF6dkDa2F52cddHL825sduVBvTs1fU
xvqyP9fG9mL/Wgefd/aYOng99hUXp6kr+qO/1u3rYnnYWyk9O2w9HC/ZFeph
fdjT6+F8xH5YD+cLds76OB+x+9TH9mAfqo/5sWM1wPTsug1wvGcvcfG7Blhe
dtGGWB72iIY437PPuzh5I7weu1UjvJ/sDY0s+X214hCNLfl9t2KPiyc1FuPV
IK3vNBbXm6B1liYW/D4Ku3sTSz7PoHhvEwvOh7CjNrVgP8Su0dT7PGk9v6mo
TwmtX3rzs7Qu2EyMV7W1HtzM215an3L84zzBVK0TNbfE+zytmzb3tpfWqx3/
iOec0fqbi0u3wPzY4xwHnO/S+noLMZ7s0Dp9S5F+ltadWoryjNN6R0vRH9Zq
HaGVGC+3al25lbifR7Se1Qrrw37SCu8HO09rMV4s07p/a/G8zdH6qOOA9wFa
x21jiXi71g3aYH9jL2sjyttB649txHzRWOvibTE9e1Rbcb8qan2prWjPelqn
aucdz7Ru6zjgfL3Wm9uJ9iqjdej2+Dyzy7XH8YA9tb13vP4pZ+9gifPxWvfq
YEE8lX2gg3c++SnX7ijG47RaL+ooxqOEWr/p6J0PtS7cCfNjD+uE+bHPdsLx
nJ20swXxanaLzhbEq4PqYF0sOB/JtrpgedkTulgQj2ff6oL1YWfqakG8nt21
K85n7N1dLXhfwI7cDevDrtZNjJcB50fZc7uJ8eq21s+7WfA+g52/O+bHHtQd
y8s+0R3bg52ghyX2u/46N+4h7tcVrVf2wPKyvziWzqeyS/a0YL3CHtsT82Nf
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
GKT1up5i/OivdbBemJ5t9fLOj1pPcCz9fj37Vi/R3zponam3Db9//m87ch/f
rtZH9Md6Ws91LP0+N/t5H/F81vxv6ZX9xPNvaf2ln3g+Kmpdsr/oj/5aj+3v
nb9/ymkH2PD7U+wOLt7mWPp9HXa4gZieXXGgaK+EWs8YaMPvC7EfOZZ+/yqo
7jtIPG+5tD48CNvrv5tHDhb9KeZPOcUQbC926yF4P9kbh2B/YIccasPvO7HL
DMX07MlDsTzsu0PF/Jdf66zDsL+xewzD/Nj7honxvITW0Ybj/WDXHI79jb1g
OJaX/crF/iPEfFdG6yGOfwwnhtanR+B4zk48Esc7drOROB+x17j4+0icT9nG
7zb+vRny+N9tWH+wb1D6oLrzKBvWd+ydo8R8d1PriKNt+H0HdpXRtrw/UDx7
tC3vbxQ/HW3L+zvFecfY8v5Q8YAxtry/VXxsjC3vvxXHG2vL8S3FDcfa8v5e
8XJKz/40FsvDLvGHLe/fFY/+w5b350F26nG2/P5TcbtxWB/2lnG2HF9RHGa8
Lb8fVFx+PF6PPW28LcdnFD8Yb8vvXxXn+BPTs3v/acvxRcUH/8T6sGNO8O06
EzA/9uIJ2N/Ybyk/dpGJvj18ItaXfc7FySbZcnxZcctJthyfUrx+EvZ3dvDJ
mJ5tO5b+flxQfXsytic78xRbfj+huNsUfF7Ye6bgeMSOMhXbi119KtaXPc/F
Lyg/doFpOJ6wf5uG5WWfdCz9fhM74XS8HrvJdFuOnyleNd2W338o/uriUjNs
OT6l+I8Zoj8n1PraDJxv2Olm2vD7SeyOM205/qZ4+0xbju8pDj8Lr8euNAvn
S/ZMFz+eJfpLwO8bsXPPxvma3W+2aO97Wh+ZbcvxO8Vx5oj+8Frr+nMwP/Zf
Lv4wB8vL/mUuXo/9u2Pp9//ZF+facvxPccp5Nvx+ErvNPBviV+xN82yIh7FD
zbch/scuOx/Ly54yX4xna7W+N9+GeBs72wJxP5dp3XMB1oe937Gf82+H1tEX
iudxqta1FuL12AsXiud9hNavKT92oUVYX/ZQF59ZZMN6mp1kMZaH3XyxDfsB
9trFNsTb2H5LMD+2uQTzY/+5xIZ4IvsmpWdnXOrbXZZiedi7lmJ92JH+siGe
ya76F16PPecvMR600PrZXzbs19j5ltkQ72MPXIb5sY8vw/zY8Zfb8PcL2I2W
2xBPZa9YjvmxPy/H9mL/ugLzY49ZgeVhX1mB+bHTrLRhv8pu7+KtK7E/sMOu
8u0Kq7A87OmrsL3YD1dhedg5V2N/ZvdZjc8T+9BqLA871hocb9h112B+7CVr
cLxjv1sj5qs5Whdd69sj1mJ7sM+vxfKyk6/D8rBbrcPrsTdQenaI9b7tWW/D
+y72pPU437DvUHp2lg02xFPY3TfYsJ5g791gw3qKHXWjLb8fVVzD8fnA339l
z6f07JcbbVhPswtusmE9zR68yYb9HvvUJhv2M+xEm235fIXippttiBewV2/2
Ps9af3MceP5Gcekttvz9gOJxjgPPvyi+7tjP+ddX6/RbsTzsTltt+fyJ4h2U
nh1hm29X3mZDPObfdp7teD12/+3e8U7ro5SeHXcH3m92gx2Ynr1shw3xDvZH
Ss8uvhOvxx61E9OzL+20IZ7GTrXLhngfu+0uG+I97M2Unh16Nz5P7HK7sT3Y
Ux1L8Sz2fRdn32NDPIXda48N8Qr2AUrPjrEXxxt27b2Ynr1orw3xIvabvXi/
2IX3YX7sYftwvGOf3WdDPIqddL9vt9hvQzycvW4/locd7IDorzm0thxL8Rj2
hAM2xHvYtxxL8SR2poM2xEPYXQ/i9di7D2J92ZEP4fXY1Vw89xCWh/38kA3x
Hnb+wzgfswcdxvmWfeIw5sdOcMSGeA+7sYtXHrEh3sX+csSG9QK75FHMjz32
qA3xMvbVo6K/BcRr2GmP2bAeYndw8bZjNsRr2OGO2xBPY1c8bsP5LvaM4zbE
O9iPjtsQr2LnOmHDepHd94QYj69offiEDetJduyTNsSL2PVcvPSkDfEo9vuT
NsSD2MVO2bBeZo88he0VVKc4jddjt3Ys/f1G9kYXhzyD+bHLnMH07MlnsL7s
u2dsiNexs561Id7E7nHWhv0Ye5+Lo52zYT/NrnkOy8NecM6GeCb71Tm8Htv/
vA37WfaQ8zbs59inXZz4gg37UXazC9ie7DUXbNiPsr+72LiI5WGPv4jXY9+4
iO3BznAJ82N3dvHOS2I8WqJ1xMvY39lVLmN+7NmXbYiXsJ9exv7EznsF68se
cAXbm33sCl6PHe+qDft9dkMXL7+K4xH701UcD9glrmF52KOvYXuyL1/D8YSd
+jr2J3a763g/2Vuu4/PCDnMD7xe7/A2sL3vaDexv7Ac3sDzsHDfxfrB738Ty
sA/exPmOHfMWzqfsOo6l91XsxbdsWM+w396yYb3ELnLbhvUie/htG9Zr7HO3
bVgvs5PdsWG/xW55x4b9JHv9HRv2o+zgd23YL7Htuzbsl9kTXXz7rg3xGnbm
e77d7Z53PtJ6D6VnR7lvQ7yHXf0+lpc9774N8R72i/vYnuwCD2zYr7N/e2BD
vIZ98oEN8QCyX8qHNny/zm7zEMqjeNNDG77vY4d6ZMvneRSXfYTp2VMeQX0V
33uE9WFne4zlZfd8jPmx9z+25XiB4uhP4HlSXOuJLccDFC90LH1/GVQXeorX
Yw99asvxBMVnntpyvEBxkme2vN9W3PyZLceLFa99ZsvnURT7PcfysM3neD32
n89tOR6h+KZj6fcn2Rlf2PJ+W3GXFzBeK971wpb384ojvbTl/bDiqi6e8xLm
A8XPXmJ52fleYXnYA1/BfKL4+CusLzv+aywvu9FrTM9e8dqW98uKP7v41ze2
vN9XPOaNLe/3FV+h9Ow0b234+ybs9m9teT2geOtbW97PKw77zpbjAYorvLPl
/bji6e+wPOyHlB8753vf7vPeltebig+9t+X1muJYH7C87LofRH/Yq/WSD3g9
9rsPtrweV1z0I5aHPeKjLa+XFZ//iPmxk3+y5f2K4lafMD17g4tDfLbl9bRi
j4snfbbl77UU3/lsy/sRxVm+2PJ+XnH3L3g99t4v2J7sqF9tOR6huMZXWz7P
oHj+V2xv9kvKj13wmy2fN1E82HHgeQnFpyg9O9F30d+6a930uy2fR1G8mtKz
v3235fMqikv7eeTv2RSPcyylZ193HPi9heL0wTxQXnYnxz+mkypa73Ac+D2a
4gjBPfL3PIorOw78XkbxLMcB472/zk8c/xgvoxXSOU8IUZ6IWvd3/ON5CqP1
UccB7xO0jhvStxuE9MjfIyle5vjH7zN+8Nf5Y0jRHle0Lh5K9IdrWo9y/ON5
Oq71pVCYHztVaNGfHmvd1nHAeqCQzptD4/1mhw7jkb/HUlwujChPTa2nhhH1
KaP1fceB3yMpzh4Wnwd2r7B4PfaBsJgfO0Y40V/9ta4dDuvLXuR4mfd7L8Vv
HAd+rxVkDwuP9WGfdRywH9Y6aQQcL9gtImB69roIHhjv2cEiemC+Y1sRPXK8
TfEEx4HxRsW3HEt//5CdKZIH5kN210geOR6meDelZ0eO7JHj8YqrRfbAepA9
N7JHjncpfh7ZA+stdv4o4n7d1HqQY+n3FNgnonjkeJniBFE9sB9hN3Ys7TfY
K6N6YL/E/hLVI79PVFwymgf2G+yxLr4aDduDnTa6B9bb7A7Rsb3Y2xz7Of92
aB0uBl6PXTEG5seeEcMD63X2oxgeWE+zc8XE/sTuGxP7E/uwi2PHwuux68XC
9OylsbC92O9j4f1gF4uNzxt7ZGwP7GfYF2LjeMVOEccD61V26zh4PfbGOB5Y
z7NDxvXAepxdJi6Whz05Lo5X7LtxsbzsrPFwPGP3iOeR30co3hcPy8uOFh/r
y64Z3yOf11W8IL4H1vPsV/FxPmH7J8DrsYckwPzYpyk9O3FCvB/sZgkxP/aa
hB7YT7G/J8T7xTYSYXuxxyfC+Zp9w7G0H2FnSIzlYXd2LO3H2DsTe2A9wY6Y
BK/HruJYWs+xZyfB/NhPKT923qQeWC+xByQV42VFrY9Rena8ZB7YT7EbJsPy
sJdTevanZB5Yr7JLJPft0ck9sN5mX04u+msxrVOnwPTsdilEfy2h9ZYUHlhP
s8OkFP0tl9blU3pgPcyeRunZDyg9O0cqLA+7dyrRH1NrfdBx4O9FKI6ZGtOz
66T2wH6avdixtB9lv3Us7afZRdL49vA0mB/7XBqsDztZWkzPbpkW68Nen9Yj
/96L4uDpMD3bTofXY09M54F4Avt2Og/EE9iZ02N7sbulx/zYe1wcJYMH9uPs
6hmwvux5GbA8QXWBjHg99m//QSfMhPeD3SSTB+Ix7FUu/urY78c/rUtlxvZm
/5EZ2yOoTpcFr8fumAWvx96eBduLHT6rB+Jp7EqOpXgUe6bjgP3WTzl3Ng/E
o9j9sonx4LbWR7KJ9jqpdZzsHohnsetnF/3lvNZ/Zcf82B9c/EsOMR7f0/r3
HGI+PaT1xRzYHv+/uWwuj/j7SlpPcfE9x1I8MajumRv7A3t/brweO3oe366V
B/s7e2Ee7M/s15Qfu1BenA/YQ/Pi884+kxefZ3aSfHg9dvN8WB/2WkrP9svv
+Wc99FZrMz+OJ+w/XXwzP9aXnbEAPs//0zzQ37eP++N4xo5fCMcrdiMXrygk
+ut+rT+7+NfCor9t0HpMYfE8Lftfa5yzmLgfY7TuU0zMN/N/yrF+8Yh4w3+K
3/0ixqtBWhctLsabtv8jPelXj9jPa33nV3G/GmudpSTmx+5eUsyXDbTeW1L0
p3JaRy2F5WHXcPH8UmK8qqn1y1KiP5TQumBpMV/4az3YxadcnMgQ7ZVV66aG
eB4za73accB5N62/ubi0Ke5naq3HmZiefd1xwHkyrdNb4n4k1rqThddj77BE
f4imdQRbjPdhtK7s4lmOA/YzWj+xRX8IpXUej0e8jyqoc38XH/V45zut45bx
iPcxWjcoI9rzmtbLXPyxDF6PXbysuB/3tB5VVtzv41pfKivaa6/Wqcp552ut
25bD/Niby4n7dUTr0OXxeuxyLp7qOOB9g9b3y4vndYXOffNV8M6nWg+s4J0P
tT5eQdzvWVrHr4j5sRtVFP1ttdYrKmJ+7M8u/rWS6E/TtR7jOOB9i9ZXXJym
Ml6P3b6yd77XemtlbE922Cp4PXYFxz/WsxO0nl4Fy8N+WAXbg52zqm/3qYrl
YR9yHPA9gtaxqnnEeTyt61YTz9tgrZdUE8/bKK3fVcP2YBet7tsjqmN5gurk
NTz/rOe7at2qBpaXvaEGlocdoiaMJ4o9NUX681pPcvEdxwH7Wa2z1IL5NMje
W0tcL47WUWvDfKy4Rm2YjxXPr+2R1yOKX9YW9yOv1gXreP7ZbxfRenAdvB77
VB3Mj52orkdezyluWhfL+2+7dD2PvJ5VPK6e6E+W1tfriftVRev09TE/difH
gevdf92VG3jk/SDbb3IDD8Qj2XcdS+9j2FkbeuB9AbtHQw/E49n7GnrgfRU7
WiMPvC9k12zkgfeF7AWNPPC+kv2qkQfe97L9G3vgfSl7iItPN/b2N60TN/HA
+0B2syaYnr2mCbYH+3sTvB9soylejz2+Kd6voDpDM9/u7Fg678je2cwD71vZ
EZt74H0Nu0pzD8QL2bObi/YMiNeynzb3QDyZnbeFB+Lh7AEtxPV2aH2shQfi
Lex4LUV912rdsKWYD6Zrvbwl5sf+1NI7n2pdopUH4jHs0a08EM9hX3YccN5d
69StMT92u9aivp203tJa3O+KWodp44F4A7t8Gw/ES9jT2mB+7AeOA87ba52j
rQfiKezebfF67INtMT92zHZYH3Ydx1K8h724Hcxnit+2g/lMcZH2WB728PaY
nn2uPcz3ipN1gPlMccsOMJ8qXt8B25sdvCO2F9vuiO3BntgR68O+TenZmTv5
drdOWB/2nk4eeT2mOEpn73ipdfXOHohnsedRevYLx4HrOcUFumB69m9dPBAv
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
2Cc8TnhJQDyH3eslAfEc9u8eF3852s+9LGC8w56qbIyn2Fe/EumOTV4R5njO
8pce731FmONNyze/Gu2Orwoz3mL5N2Vj/xY7bztMz368nYD9Veyxysb+Lfap
dgK+X8C+7TVhxmssf+DxOo9Lvi7M+Yjltq8Lc75jebrH17whYH8SW3j82RvC
jKdY3uFx5TcF7N9iv/2mMOebln/1OMdbAvZPsR95C9Ozv1WOU3+JTh/1uM7b
0e7+tq4Ps51e5XHRdwTsv2E/4/EPHv/l8d3to/2xx0nthbl+zXKFd6P92rt4
PPbPHmfpEO0HOuD52F95fICOx67eMdqdOuLx2Es9LvBetJ98D8/H/p7Ss89S
+tS63/tYnv9pv9QJ6xt7VidMz07fGdP/p12lC7ZH7Hc9XtgF2zt27q7Y3rKb
/02f6Ir9BTuhm4D9tan1792wP2YX7y5gPMB+rruA8Qx7andhxossX91DmONN
y/cqG98/SK239RDmfMjy9T2j/abHcz3O1kuY80HLD/cS5nzX8je9BHwPh31Y
2fi+TGrdtbeA7wOxV/TG87ELfyDgez7sp5RT4gGWJ36A98u+oJwyn7fcsE+0
P/J4cx88H7tcX0zPfrUv5if7J48z9RNmvMfy/cop8SjLQ/sJM55meZ9ySjzO
8i39hRmPtPyeckq8zfJij/N9KMx4m+Un/qZPf4j5wb79IwHrv9h9PsL8Zq9X
Ton3Wi41AJ8n+4UBWJ/YMwZgfWGn/Tja8mMsr+zPPd75MZZn9o0DhRlPt/yO
x/MHYnvHzvlJtB/9RJjxMssjPT72iTDjVZbrfhrtHp8K+H4Te7XHxQYJM55l
+dlBAr5vx548SJjxLMtxn0X7ns+EGa+yPNDjrZ9hf8qu+Hm0X/d4jrLxfSB2
1sHCjHdZftDj4YOFGe+yfHCwgPEGu8YX0e78hTDjWZaXeVxwiDDjVZZbKRvj
JfZ4j895fOeXwoyHWe6vbMS72Bu/FDDeY5cdGu2XleMu/Tk9e6iAeBc7wzAB
41F2Y4+HeLxnmIB4F7vqVwLiXewOHi9SNsbb7DzDo93C4zHDhbmeyfLJ4QLi
Yexbv452b4/Xfi0gXsYu8U20n/9GwHyFPY3Ss9OMiHYwAo/HHuTxdo9v+Dba
b3k8z+PsIwXMB9nNRmJ69giPj3hce1S0u40SEA9grxwl4Pvw7CKjhbk/yfLT
ozE9e9JoAfEW9sXRAubz/7S3jMH2nl1+rIDxArvdWOzP2YljBYx32Jm/EzDf
YjdVNsar7GHfCfN9dqpdbZyA+Qb7/XHCXE9gecm4sLw4nf97Ya5nsNzS43Hf
C3N/jOUz3wtzPYblO8bj/fj823jd/l9f73L8+ATdfhV2euwEXT/KOH1qQlh+
nL5tos6fmk5/4PG6ifr51HG65CRdPuo73VY5efzv9HTl5PfzTl/zg77f1k6L
H3T97Ob0Z8rJ81+nd/wQlg+nK08Oy9dl+dfJYfvpdI4p+n5XX5a/9fjoFDwf
u87UsP90uvvUsP93etVUPB+76DSh47dOPzMtbB+c/mEaPg/2X9PC/sPpu6fr
6x3i9MfT9f0OdjpJ+VJx7+l0hRm6PrR3+rUZur63dfrnGVie2Vlm6vL6kNMP
zMT6xP5qJtZH9oGZWJ/Z1Wdhe8LuNEs/rypOL52ln1cFpwvMxvaM/eRs/byK
Ov39bGwv2Wdn6/KY+7Lc70fd/2Zx+o8fdX6mdbrMT9F+6Sed35f2H1qe5XH6
RN3enHX6vkT9PI45/UWiLo8Hnd6dqJ/XPqer/Kyf106n3/V4ofKl8ctWp3PP
Cdsjp5vP0fVhvdOj54TtkdMnlJPH104n/BLtXr/o8rDY6d9/0e3FIqeLz9Xl
Yd5leepcAeMn9tXzBIyP2PfO0/V5stOfzhMwfmNv8/j6X3V5Guf0m8rG+Is9
V9kYb7GzzY/2w/MFxM9T68PzBcS/2bUWRLvrAgHxbfYK5ZTv6VkuvDDaTy0U
MD5nT1Q24uPsCx43XCQgPs7+yOPNi3R5andZfvU3AfF19k+/CXh/xc60WEB8
nX3/YgHzJ/bQxQLi6+x9Ht+yRED8nf2eshFfZy9eostTE6fzLY32E0sFxN/Z
33l8eqmA+Sf79mUC3o+y+3i8fhkej11qebRfWC4gvs+e4XHaFdGWHn/u8c4V
Aub/7BtXYnr2OysxPXu+xzlXRftRj0d6fGyVgPcf7LqrBcQ32D1WC3g/wV69
GusDu9gabC/Yz67B9pg9eQ32R+y434Wer7gc11g5ZTxgeQilZ+/5Hfpby1XX
4vF87rBWmOOjuEVrhTnespxnnTDHg3/bY9YJc3wbd3Kd7o+31f3v+Nb1why/
We69XpjjJ8tr1wtz/GO5xAYB+13Yz28QZrzI8jRlYz8PO80fAvbLsIM/BOyX
YQ/yeDsdj33DRrxe9lsboXxbnrdRwH4idvZNwhx/Wm62Cctjan1kE5YHdu3N
WN5S65Wbdf+WrZ7LRbYIc/5o+ektwpyfWp60RZjzX8sXtwgzvmb5riRMzx6Q
JMz4YapdfiveD7vdVswPduJWYc5/LWf+E+s/u+mfwpy/Wh72pzDnr5b3/4nP
k11tW7Tf3ybM+a3lJduEOb+1nH87tp/sltuxvLLHeXxmO7bf7Dt2YHvI7uvx
Bo9L78T6yH7R45kep9slzPmx5dgubE/Yg3dhe8/eRenZN+2Odvvd2D+zF+zG
/oSda8/f86g92P+zj+/B/opdb2+0e+7F9p69Zi/2F+z4fdFusw/7Q/aUfdhf
sa/aH+1GHn+yH/tL9p/7dX0a7HSlAwK/b0Z+44CA/b7sXyg9+9qD0X7ooDDj
A5a/PihgPyv7kMc1Dwn4fj+7i8fLDwkzvmC50GEB3ztjt/Z4wmFdH9o7fd7j
BkeEOf63/KHHm47o+vKK09cdjfYrR4UZf7D8o7Kxn5ed8RimZzc5Jsz4heUv
jwnYr8ve6/HNxwXs12V3PI7p2b9RenbeEwL287Mf93jsCWHGNyyfOiHM+IXl
205G+4OTAvbbstd5XPJUtNueEvC9NfZ0j685HW1xWpjzb8ufKRv7bdk7PK58
JtpvnxHm/N7yrx7nOBvtRzz+1uOjZwXs92XXORft7ucE7Odlrzqnz5f8vSx2
0fO6vZzn9DPnBXw/nP3D+bA9d/qv8/p5vOX03RfC9sLpjy+E9dXpJErPrnAx
bK+cfu1i2N46/fPFsD13OstfYX/o9AN/hf2x01/9Jcz1RpYPKCePh5yuHifh
+/LsTspx6i/R6aXKKfuBLBe4SsL3ethPKhvf0/mnXf9qCd+zYfdTNr4Xw/5D
2divzS6TRt9P4cvyLI/TXyNhvzv7Po+/8Hi3srHfnl0lrcT9/+R3lVPWS1te
mFZCe8XOnU5Ce89unk5Cf8MerWz0d+wT6aT5fiLV7pVewniK/buyMZ5kF88g
YTzNfi6DhPkGe6qyMd9hX51RwnyOfW9GCfNJ9qcZpfn+2PK2jBLm86n1m5kk
xBPYczNhena2zNJ8f2754cwS4gnsbzLj+diHM0uIh7BrZZEQT2F3zSIhHsNe
oWzEg9iFs0qIJ7GfyqqfVyanJ2aV5voOyxeUk9dzOt3wWgnxstR6s7IRL2OX
y4b3w341G+YH+6dsmJ/sTNnxebDvz47Pmz00O5Y39r7sWJ7Yt+SQEG9iv5cD
6xN7cQ4J8SR2vpwS4knsJ3JifWZ/lxPbA/Zpj2/PJSGew+7j8fpcEuI97FK5
sT1jv+DxjNwS4j3stHmwPWXLPBLiOezP80iIx7B3enxj3mi/k1dCvIY93+Oc
+bA/YT+aT0I8hj3S42P5JMRr2HXzS4jHsHt4vDo/9pfsYgUkxGPYzyob8Rb2
ZI/jCkqIt7DvUTa+p8ce6PHWghLiKeyKhaL9urIRT2HPKSQhnsLOWlhCPIP9
YGEJ8Rb2cErPPqhsxEPYNYpIGE+xOxeREA9hL/O4YNFotyoqzfUVlsd7fK6o
hPEm+85i0e5fTEK8gr2xmITxLrtsPKZnvxwvIV7Bnh0vYbzNzlBcwnid3djj
IR7vKa7LUxmnq5aIdocSEuYj7EUe5ykpYb7DbuHxmJIS5mPskx7fWiravUtJ
c7+N5bUelygd7edLS5ivsqd5nKaMhPkwOyiD6dmDPN5Ox2PfUDbab3k8ryye
j539umg3uw7zkz2C0rOPeFy7XLS7ebzS4yLlo/10ecwv9iSPL9LxUusBFbA+
sLdUwPaAXb6ihHgEu11FCfFOdmJFbA/ZmSthe0vu+GglievNyCOVjfVvqXXd
6/F4/9d8T2VdHpr8W1zxRmnGa1LtOcrG90b+0z54kzTnm5ZrVJGw/yC1XlZF
wv4IdsGqEvZfpNbjlVPm65bPVZXmfNvynTdL2D/xT7vsLRL2L7BfvkWa89n/
uIdUk+Z82fIej6tWl+Z82XKH6hLWh6bWeWpI2I/KblFDwv4H9hiPT3p8a81o
964pzfm25bUel6glYf8E+/la0pyPW55G6dlpamN6duDxoNrYXrC3U3r2DXUw
Pfstj+fV0e3tAKez15WwP4TdzOMRysb3kthHlI39I+za9aQZL7DcrR6mT62L
JODx2E8nSDOeYHmSxxcTJOw/Sa0H3CrNeILlLcrG/hN2+dswPbvdbdKMN1hO
vE2a8QTLmW+XsD+F3VTZ2H/CHna7NOMJlvd7XO0OCevv2e/fIWE8wV7icf76
EvafsFvWl7D/gz2uvoT9JewzHt9xp4TxKruvsjEeY2/wuHQDacYbLL/YQJrj
acszG0jYH8FO1zDasYbSjDdYHtxQwvea2LsaSnM+Yfmmu6Ld/i5pxhssL7hL
mvMZy7nujvZjHo+6W5rzKcvHlY3vKbHr3RPtnvfo8pjF6TX3SPjeEju+kTTf
t1tuoxx36c/pKY10eU3+nhL7qnslfC+c3cjjTzz+815prnexXCmQ8L0l9hsB
pmf/QunZ14poP+Tx10LXh4NOH6L07JpSwveS2F2kbq+HOb1chv2J04Viur60
dLq1xxNi0lwvZPl8TJrrYSw3uE/C93jZH96n2+tll+XrGmN+s19pjOWB/WNj
rC/sjE2wvrGbNMH6xP6yCR6PvZeOx775fmwP2B3vx/T/tB9viudjj/X4VFNs
L9m3PRDtDzxep5wSL7Rc8kFsb9ltPZ7+IB6Pfc1D0oxnp9qfPYT9LXvHQxLG
E+zKD0sYj7DffljCeIv968MSxoPsHM0kjFfZjzSTMJ5mf6tszGfYR5tJmO+y
6zwizf0Wlrs/IiGewF7lcdFHpfm+3/Izj0pzvcA/7rsfkxAvYn/8mIR4DTvp
MV0fVjtdoTmej/1ac8xP9s/NJcRLUusHWkjYD8v+yuMDLfB47OqP/z0v9bjA
ExLiPewnlY14D/v7J7A8s88qG/Ecdv2WEuIt7H4tJcRT/mm/9CTW19Q6fSsJ
8YrU+otWEuIV7N2tJMQr2FVaS4gnpNYLPc79lIR4BLu5svF9DPZoj094nPD0
v9fFn5EQj2A/94yEeP5/2p8+i/1Ran19GwnxFPabHs9tIyHews723BX/HV9o
KyGew274goR4zhVf8RVf8RX/9zzwbQnzXfbW/2Fnba+vN8tlebjHB5WNeAy7
xrvR7uzxMuW4S39OF+wgId7KbtUB07PHU3r2OUrPvrMjpmf393ijshHPZZd9
L9ovezzb4wzv4/WwG7+P6dlDlM3v/5P3UHpyUq1OkN5y105wPey4lZ3geVgu
0lnC74+m1pM6S1xfRr6obKzHJMff1UWa73MsD+gizfdNlrd0keZ6K8vlu0J7
ZLmdcsr7RHZConLKeNxy5m7SnK9YbtpNmvEqy8O66evp7fR+5ZT5LrtFte7S
nE+n2ku6S3O+n1p3bNkDrifVPtNDwnyWfUdPyC/LfXtKmK+Rh25QTpmPWS7d
S5rzAcsvejyzlzTfZ1tO11ua8VB2Yszjwcop8xHLu3pDef5POylXH6iPqfYo
5ZT3vey4E32gPbCc0Pf/tOPv7S/N9xGWP+0P7e0VX3FqPHTzQN2eXfo96yu+
4iu+4iu+4kvzyZrfSP37IE53UU75nk5qHVd4hD5f63+LLyinrDf63+aEn0ZK
PR91OtOoaN+vnDyfcHqocvJ618txi1tGSz0fcPo95eT1Jk4vHq3L0/VO5xsj
/zVeiTn9xN9zx9PKKd+Tsnz7WChPlvuMlbAejr1eOeV7Uuyhpb6T5vekLL/g
8Qzl5Pmy02nH6efR22mp3Df8XhU78fNxurx84vRO5ZT1gpZv/F7n1win3/le
P+9xLifNV05e7+B0zvE6Pyc7/eh4TM8e6fExOh45rt4E+a943TSne3q8ZoJ+
nrOdjp+on+c8p9sop/weIDt+inLyeiSnr5qE6dmNPP5kEh4vlU6o9APcj+U3
PP7F42snS3M9qOWHJmN6couvMb3lQ5PheVmuOSXaXaLdcfkUKC+WC02NdmuP
J0yF8m75/FQo7+yhDaZBessfKqd8L9DypmnQnli+bjq2Z+xXpkN7y078cTq0
55YzzoD+0HKTGdCfWf7S470zoL9hJ908U9enBk539Pi3mfp5Vnc67yzd3pZx
+vFZ+n7zOT12li7vcS7HnZ6l7yeH07fP1vmR5bK8Xjn5e0y1XS71o06/+P9H
J7yTKPV473/CLUb+rOvb4VqX47pzwv7E6R7Kyb/38O9wx2d/Cfuj/wkPHThX
6vHOf8JJX86TenxW87/hhIy/hu3B/0a3+G2+7m+uczrvAl0eajr9uHLyfjmn
xy4I22OnTy0I+wOXO962MNofLITjWV63UPeH9Z0uueiKI5z462LdHlV2OseS
aD+ifGm8U8XlpG+XQHmyfHQJXI/lOkulft/ndPelur4+7vSqpbr+t3U5rtgy
fT1vOf3sMt1e9XR6snLyemqn45aH7Y/T9ywP20OnBy7X/c1Gl+O3Ltf5fczp
iit0fcpS64otJyxbpdvDkS63KLga+092q9X6ea92evxqXR63On1utYTxAPvO
Nfp8Z13u2H+Nbg/T13Z5o/Kl8WIBp8v+LvV+X6df/j2s707P/j3sD1wemmFt
WF+dbqycHE9yesjasD46vSc8Xl+nq64Ln6fLiR3W6fZmntOLlJP3izqdZ73U
65WcbrFemvMNy2PWh/2dy0knlY34MfvWDdKcD1ruvUGa803LazdIc7+n5RJ/
hO2Ny3Ft/4D0lqd7fM1GCd87Zwtl43v95PjPNuryus3pHcqXxkNrna68SUI8
h/32JmnGCyz/ukma8TzLOTZLcz7PTnhkMzwvy99uDsu700c3S3O+b7nOFigv
lrtvkRBvJ7dYtUWa8XTLRZOkGS+w/IyyEX9m/5AU9vdO/6Ucp/4SnL57qzTn
++yOH2+VZrzdctJWnR8VnK7wp67vRZ1+7U9pxgtS7Szb9P2mdXnoA9vC8l7b
5a+26fq82+kD28L+xunq2/XzWOF0p+1hfXB66fawPricWGAHtrfsJ3fo6xnm
9Pc7wvri9Nkd0N5brr9Tl5eOLif126nzs53Tf+zU1/u002V2QX9l+aVd0owX
WJ6lnPw+yen0u3V+N3A5rvFu3R7UdHrI7rA8O71nt87v4k5X3aPzM5vTHfZI
czzCjl+0R5rjGct59ur82ul0i71he+30mL1hf+L0yb3SjKdYvnWfNMdz7ITe
ysnxXKfX7pMwfmSX2B+WZ6efV05eD+r0tP26PvZ3uUWaA/p+ujkdHAjLu9OD
DoT9idPbD+j6/IbTNxyUej7lcse3Dob1xel5B8P64HT2Q2F/4XSzQ2F9cHrE
obA+OH3kkH6eVVweWvtwWF+c7nZY95clnV55WD/PAk4XORL2B04/fSTsD5ye
pJy83r2mw4kXj4T10em7jkpzvmh5wNGwP3F6y1Fpzkctlz8W1leXk9odC+ur
04nKl+YTc5zOfFya82nLTY+H9dHpYcfD+ub0/uNhf+J0tRP6et53Oa7TCf08
2ju99ISEeAS7wMloP3kyrE9Of39Sl9c2Tp+l45Hj658K+0On+52C+7X8x6mw
vXK6zGldXgY7/dJpeF6WZ53W+Tnb5YT0Z6QZT7F83xkor5a/OAPl3fLuM1Bf
LFc5C/XR8rvKRjyC3GLhWX09hZ3OfU5fz3VONz8H7Z3l0eegvbR8Qjl5POJy
x4Tz2J6ze50Py4vTv58Py4vTxS9Af2f5uQtheXF66gVpxv/ZQ6++qPvDRKfv
vSjN8UKqve1iWF4ux4lv/hWWh9ouz/1LmvEcy9niYro8OP2wcsp40fI3yinj
TcuHlZPjrS4n1boqpuejTne9Sh+vm9MrlJPbY6cLXx3T4zGnn1JOmc9Ynqic
Mp9ix11UTpmvWb4rTUz3904PSBMz55uWtyhfKm8JTpe/Jga/98dud03MnO+z
4xOVU9ZLWc6cNgbxCXbTtDFzvYflYR7vV05ZT8JOqJYuZq6XsPx+Ojie5SXp
YuZ6Ecv508fM9VSWW6bX+TnE5Rbj0kN+WD6TPmbGayzfkQHy23LfDDFzPZzl
Dcop6+3YHUtnjJnxFssvZoyZ6yUsz8yor6eO0+kyQXm1HFM24iXswZl0fS3g
8tBdmWLmegnLN2XW15ve6faZY+Z6DMsLlFPisZZzZdHl7ZjLiY9l0eXloNOj
ssTMeIrl41liEC9m18uqn9fay/Ia5eTxsstJ8dfGzPUSlttcGzPj3ZaneHxV
tpgZ77HcKBu2x+S4T7OF9dHpbdl0eR/h9PXZw/rq9JvZob+wPDd7zIwXWc6W
A/ojdvzDysnjFae/yaHz4w2nD+eA/tByrZwxM95kuWvOmBlvYiesyAn9seXC
uXR+POT0U7l0fYw5PTFXzHyfk1q3aJg77O+c/ii3zq/qTm/OrdvLm50ulydm
xrssv5onZo6HLP+knLzf0OWOmfLGzPGY5fuVjfd17KF5Y2Y8zPK+vDFzPGj5
lnz6ea13eeh7+WJmPMzy4nwxGO+y8+UP67PTT+SPwXia/V3+mBnvsnw6f8yM
d7ETby8QM8f7lvsoJ7+Pd3p9gZgZ77JcqmDMjGexk14oGDPjWZZnKCe/L3E6
baGYOV+yLAuF9cHpzwvp+7nb6Z2FdHtzm8txNxWOmfM9y+0Lx8x4l+UFhcP+
3ulcRWLmfNPyY0X08y7u9KgiMTPexY4/XiQG7+/Z9Yrq/MjkdE/llPm25TVF
Y7Begh1fTLcX+1xOaFMsBvEA9pRiujxsc/qq+BjEG9iN4mNmvMzyJ/ExM15m
+c/4sL93uUWl4mF/7vQbxWNmvM3yL8V1eZrh9LUlwvbC6Yei3fFrjw95XLNk
zIwXWe5SMmbGsywvL6nLSx2XhxYqFZanGi63LqXbqxVOTyiln/dgp8+Hx2vv
dIPSYX/t9Ielw/7a5cRNHl9XBo5n+ZUyYXvl9I9ldHmq73TGsro9vd7lpCYe
f6mcvJ7C6b1lw/bE6ZuvC9sLpzteFz7P6i7/dp0ub6edzlsu7M9dTnygXNgf
Xvp/u3Jh/judWE63HyWdzlw+pt9PO920fHh91S7H+8uHz08dL65khbC9rOZy
29BVqrs8vUJYnpy+pmJY3p0WFcP2yOX4z0JfXcPlHeHx6jhduZK+/zecfruS
Lo/jnP61Utje1kj4LxAVphY=
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 2], 0.5], 
          NCache[
           Rational[1, 2], 0.5], 0.5]], 
        PointBox[CompressedData["
1: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
lXJiedhzhJXnNeznFM/OmUuOx8JG+woHvu/XfCIXtgc7dm45H5Qwun5uLC97
JcWzv+TG/NhF82B92KPyYHuzr+bB/mInz4vlYbfJ61DPc2jeltehnpfRHNLH
8Z/zHm/zmVzWR843X42e7iPn009GP/KR690Do7Pk8+yewn772RdGH86H+bGj
5Zfj8YrRtfJjfuwl+R3qeT7N7/NjedgFCsjr9bbRQwtgeuwLBQLGg1/8O+Hw
fhUwOn9Bef1s9zF5iLD//YXR5wvK/KYZnaiQHD8jjW5WCOPZGwrJ8vQw+nch
Of8uNrpM4YD1z+iJwgfE9qS/0XeE/Y7/1DI6XZGA9ja6cxHZ3g6j91I8O0JR
zI9dpWjA/Gf0PGH/811Gv6R4du5int2/WMD8aPSpYlhfdtziAeun0Q2LB6yf
Rq8uLq+f9EZ/K471ZRcvIcdDHqPHlMD02NdLBMzfRqcsGTB/G92uJObH3lFS
zk85jQ5dKmD+9nP2Uth+7D6lZP3bGH2sFF6f7JilPbtuaUyPvdzGn0rj9ccu
XAbjyb6dysD8pHlPGXn93DQ6vMMhz7PmM7mysP95P6PnOgL63+gXDlmfokbn
cjrkftfofs6A68vok86A/jY6jkuu1+2MbuAKmF+NXuWS9fE1+quNi1mePdqS
6+0Uo68J+99PGp3CLdfDQUa3dcv1dLbR291yfplndKiyAeuT0eXKYnrsGWXl
9TrO6MdlZX8vNTprOUyP3asclod9xMbRywesn0bXLi/nvxVGL6V49ofyAfOF
0QUrYHuzh1XA8rIvVsD2YiepiOmxW1TE8rI3VcT6sr0qYX+ynZWwvOzJlbA8
7HuVMD92hso4Hthdbby/MtaXHamKZ1erIufDDUYvqIL9wX5dBevDzlsV49kD
q2I8+0xVbE92/Gpyfd1kdONqWB/22mrYHuwf1eT6vtXoktWxP9jjqmN67JvV
sT3YqWvgfMruUAPbg72rBubHDlsTxzO7Yk2sD3u2jZ/VxPzYOWphPLtvLWwP
9vFamB47Vm28ntn1auN4YK+ojeVhf66N7cUuUsezR9bB8c6+UgfLy05WF9Nj
t7bx1ro4ntgh6uF4YrvrYX+wp9XD9mI/tHHm+g75PNXoHvWxvOxD9bG87KgN
sLzsmsLKfoW9mOLZ7xpge7PzN8TysofY+Lywl/jna3SiRnK+6mZ0s0YYz97Q
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
F6bHvvULxxM7zW8H7BfZHX9jfdm7hZX9OjvcHwfsZ9iVbDznjwP2k+znfzA/
dk4vJ+zX2L7Cyn6QfUJYaQ927GBOKA+7vrCyX2WvDIb5sb9QPLtocCfc77BH
CSv3q+yrwsr3h0F1mxBOuN9jbwsh22OK0SFDOtX3HZrLCivfc7GnUzz7kXDg
+xjNWULJ8TDG6J6hsLzsw6GwPdjRQmN52bWEle/B2EtCY3nY74WV763YBcJg
euyhYTCefSGMHI8jjU4c1rObCyvfs7E3Ujz7T1in+j5OsyMclpc9KRy2F/su
xbPTh8d4dpfwWF72vvCYHjtiBGwPdtUIGM+eHwHLw34VQV7v3YzOExHj2QMi
yvnE1+jTEbG87HiRcLyxG0XC8rDXRHLC76+wv0fC8rBLRMbysMdGxnj2jchY
XnaqKBjPbh8F49k7KT6orhAV68OeFRXj2U9tnD3af+djwsrv77BjRsfysutG
x/EQVH+Kju3NLhwDy8seEQPTY1+2sXdMnK/YrWy8JSZe7+zgsf47T42F6xH7
QSxcL9mZYnt2dxsfjI3rNTtKHCfsZ9g1bLwojhP2O+y3cZzwPJqdL64T9mPs
wXExnn0urhP2a+yE8TA9dlNh5Xkie72wst9k/xJWnreyS8f37AnxMT327fhO
eF7LTpvAqb6P0dwpgRP2i+w9CTA9dviEWB525YQ4nthzE2J/sF8kxPKwcyXC
9Nj9hJX3LeyTFM+Ok9izGyTG64m9ysZfE2N52MWSYH7s0UkwPfY1imenSOqE
/TK7rbDyew/s7UlxvmKH8vbsct4437NneDthv89+7I3rCTtrMs/ulcwJ+0X2
kWS4nrCjJ8f1gl07OcazlybH/NgfkmN52QVTOGG/yB6WAuPZF1NgedhJUjph
v8duIazsJ9ibUmJ+bK9Unu0UVvYj7MkUz74nrPy+ITtDahxv7K6p5XiravT+
1JgfO1Iap3reWHO1NFge9oI02N7s12mc6u8vaM6bVl7vTYwemFZej3WMPmPj
+OkwP3bjdFhf9lob/6D02CXTY3uwx6XH+rJvpsf2ZqfOgPHsDhkwP/Yu4cDf
59AcNqO83l1GV8yI8ezZGbE/2M8yYnuyc2TC/Nh9M+F4Zx/PhOmxY2V2wt8/
YNfLjOmxV1A8+3NmzI9dJIucj0sZPVI48PdVNF+heHayrJ7dOqucTwobvTUr
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
E/thvtcc+4Bn1z8g61Pf6JUHXOr9iuYvB2A+1lz0oEu9X9Q8SthL/PM1+irF
s5Mfcqn3g5rbHMLysrcdcqn3+5pDHsZ4dtnDcj7taPT0wy71fljzI4pnZzni
Uu/nNfcUDrzf1Xz4CLYXO9pRLA+71lHMj73Exu8pPXaBYy71eYjmocdwPLAv
HMP+Zic+jvVlNz+O+bE32vjPcawv23EC+5M96QS2B/vuCawvO/1Jl/q8THOX
kxjP3icc+DxMc8RTGM+uegrry55/CvuD/crGeU5je7MHnHapzyM1nz6N5WHH
O4PpsRudwfHCXnMGy8v+fgavR3aJszifsMeexfzYN85ifuxU51zyPLjR7c9h
f7J3nsP2Yoc5j+OZXeE8xrNnncfysJ+ex/Kws1/A9mL3uYD9yT5G8eyYF7G9
2XVtvNzGny5ie7ELX8J49ohLOJ7Yly9hfdjel7E92K0uY3rsLZexv9jBr7hg
v8G2rmB92VOvYHnZD65gediZrmJ52N2vYjz74FWX+rxUc5RrWB52jWtYX/Yi
YWW/xX5L8ex8112wn2QPFlb2i+xz17E+7IQ3XLAfZTcVVvZ77PU3sD7sXzew
P9ilb2J7sifcxHj27ZuYHzvtLRzv7E63MD32nls4H7HD38b5mF35Ns6H7Lm3
8XpnvxBW9qvsXHfgevKqdccFzweD6vd3ZP38zxexC9x1wfkw9lDhwO9rguzE
91zq74tobn4voP5Gb6R49h8bO+4H9K/Rk+5jPPvufawPO/0DLC+7ywPML6iO
+NCl/r6I5qoPsbzs+Q8xPfarh1gfdp5HHu07/JFLfb6k+dIjOf9NMTrpY5f6
fElzyyB682PMP9gTGM+aXU9c6vM1W08RVp5XsO8/canPmzRnfOpSz9P5dnvq
Up+v2PrAU5f6vEpz5GcueB7Drv7Mpb5P0LzwmUt9nqr5zTMsP9vnuQue97AH
PXepz/s0n33uUp+Xak7wwrObvHCp5+mC7J8vXOr7As2lXuJ6yR5v41svcT1k
p3mF6wW74ysX3G+yd7+C9UNzuNe4XrIrvXbB/Rh7zmuXep5C8/PXLvU8iuac
b1xwv8v2fRNwPRt9wsax37rU81ia67/F/Ngr38r1/IjRX95ifuyi71xwP84e
JRx4Xkjz1XcB67PRyd97dpv3AdeD0dveu9TzYJpDfnCp5700l/2A5WVPt/Gj
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
1D9/GN2rKZ5P9o9NHfX9PGjXa+ao+4U0z5CO32+g+UIzt757jC7V3J1/Lhod
ZfE2izO0COxWLRw1P6J5EcWz77TA/gjWo1s66n4YzYdaOmp+RnOe1x11v4nm
btLx+2U0r3gdr+dgLVrh9Rysz7bC651dvDXOJ+wBrR11v5HmTa0dNb+oOU0b
R83PaW7Wxp2Pw42e18ZtT6TRN9o46v5azRFt3eu1hdHD2zpq/uof97J2eD9l
P2rnqPkvzTXb/znHtHfU/S6aC3dw1Pya5r4d/OPF6LUdHPX5TXPyjoHdsKOj
5uc0z/qbPaTTn3Pmzo76fKq5bWdHfT79y12lS2CP7eKoz7+aoymeHdYV4/9q
h77hqM/f/3VO391R3x+C9kKLb3fH47Eje2A8e2QPjGcfsDhXz8Du+l/u/r3+
nFP1DuwmFs/pjdfrP+09fQI7W98/56V9cb7w/P/LrQc48Lzwf82HBzrq3yfQ
nPcdR91vrbm7dPz6rOaVFice5NanttGOxVOl43+fpvncIPd6bGh0iXfd+aiF
0QMt3iwd//s2zWmjAru5dPx+aM3zpeP3Y2u+KR0i/0WZHFVlsAPrz+yxg2E8
aI6WVtaf2WHvwXynuae0ut+MvPo9uB9YHToE7v8z60rH5481Tx/iqPl9q2OH
OGq+kb0mfKjbP9uNHjTUbd8eo7cOdet/2uj0wxz19+2aWw5z+z9VhMExC4e5
5eUx+rZ03H4YoyPfd9z9LkaPfN9//Rl9QPrx+1uEySG5PwjsN6Tj/p6R0d9/
AMfT/NRwR90/xc7pG+6/foyePNwdP92MPvP3Ourwhw6uD5LzjsDrl919BMxP
mleOgPldc+KRbn8mN3mmM9JR8+eap4501PyY5nMj3fnhoNElRrnt2Wz0wFH+
6/U/0WsqfuSo+eVgHbPvI0fNf2vOMcZx8zdGd5aO+/3Tf6JDio5z5+PH+wE9
e/bs2bNnz549e/bs2bNnz549e/bs2bNnz549e/bs2bNnz549e/bs2bNnz549
e/bs2bNnz549e/bs2bNnz549e/bs2bNnz549e/7r/D+QiDGl
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[5, 8], 0.625], 
          NCache[
           Rational[3, 8], 0.375], 0.5]], 
        PointBox[CompressedData["
1:eJzs3XW8V0W7P/wNinR3d4d0bBrJFV8kJARpECkJEUSBLYIgonRKiISEAoqE
lIRISAgS0t2dIvnci31m7fl85nrtdTbnPs9znt/v8M95vW/nrDVrZtbENbO+
O3ubd+u3jx0WFpazeFiY93//9W/C/jrXqm66l6/5yNgVqvzLfQ78y1Mm/+tf
+hfyRs+1T/VLtSiu6MQH/+XmIzfey5dJdJMAzzqI92Nf91x/ZZYhV5KLLvdX
9B7s2WO9B+Ul76b07AyH8HnZ7T0nODire8UEopd4ruj9D0/KS37kObLqKkiu
efhfLuH9u1Ne8ugAHw1w3iPYXtg9j+DzsNcewfJkxzv6L1+t5/0voht4nv2v
qx08I3o6pWdf8pzfa1AXRZc8hvlhD/TsVWetU6K3H8PyYKc+jvlltzqO5c1e
SOnZ94/j87CrnlDvyyHRI07g87APnlDtfY/oHCdVea0U3fWkas9rRa88qZ5n
luiXTmF6dshzD+9/WCJ6smfvafqNE332lCqveaJfPa2ed7Tofp6fN/eJojef
xuuxk50BR1Q/o+qnqeiRZ9Tz9xd9+Ixq/51F5z77L2f1qqfFC3n1WSg/w6+c
U+mni653TuVnoeip56D+DF/w/KF3w1Wii59X799G0f3PQ/s2vPU8vF+GU16I
3i0uQP9seP4F6B8M370A44vhyhdhfDQ8/KLqP0qI3n9RlVe46GyX/PoW3fmS
qu+Gopdf8tub6FiXVXm1Fe1cVv1HX9ETL6vxZbjo05fV8/YSXfjKv+w9TpYh
ovtewfyyN11R72tH0UmuYn7ZTT171dV8pOjZV/32LvrGVf99ER1+ze9PRA+5
ptr7TNF/UHp2xuuYnt3hOuaH/UOAH19X9blddK0bqrx2ix5zA9Ozj3n2mmuq
66Lz3fTHN9G9bvrjp+h1N/3xV3T8W3XU/LCi5Ia31PuWRfSMW+p5Eoi+TOnZ
pW77/YnoCM8dvH95RP9+W41vaUWnuYP3Y7e+g/llf3fH7y9F/30H78eudhfv
x/7iLpY3+6+7fn8sOuc91d6Siu52D6/H/vkePi/75fuqv3hQQXLd+1ge7Cn3
VX/+sILkc/f98Up00b//5fvecHlP9Id/q/HmqOjf/vbHU9HJH+D7xG7+QNXn
QdHfBvj2A3zf2RX/UfW5UfSwf1R5rxT95z9qPFkqOsvD6P2O58j5q+ifHmJ/
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
Y99zX06i2meE6FJJbTX/fu4eSdX7f170mv+i6yfz+8sX8sVkeD12ieSqPcYp
9yLeltzvH0WnSqHKq57o11PY8P1xTH0+hd8fii6W0m8Poj9K6ZeH6C0p/fYW
LjlFKr+8y0l+K5Vqb3dEz0vll1e45DupbPj+nV0ptQ3f37M/S21DPIu9L7Vf
H6KzpvHHN9Gd0vj9jehlafB67LC0tv77c4bttKq9DRE9Ia0aT4eLPpXWf39F
F0qH92P3SeePR6I3Bjhxehvieewm6bG+2LPS4/XY1z1r3wezy2Ww9fio4cEZ
1P1mvZAzZFT1sVl0e/KYjJh/9rGMeH12vkxYf+xeAV6XCdsHO37m6N0ws9//
i56RGd8v9uXMWL/sUlnwfuyILP74Kfr3LLa+njKcJiuWJ7t1VhvWT+zvstr6
es7w3561+Dq7WjZV38tEf5HN759F/0Xp2Tmz2/p+geFu2W09XmH4Z89R8QLD
L+ew4fdY2HUDPCWHra+XDZ/Lge8Lu2hOzC/7w5xY3jF18lzRu3kurA/2t7mw
vNm36XrsirnxedjDAvxnbmyv7Cx5bH0/yPA7ebC82T/lwfbGfpYH65Nt5cX7
scfnxfedfTIv9t/sgvmwP2C/nw/fd/aGfFhe7ET5MT27sWdtf4r9DaVnX8uP
5cEuWwDTsz8pgPdj7yqA/SE7fUG8HrtdQSwP9uKC2N7ZDwvi/dg1CuH12KMC
fKQQlhc7T2EsD3aPwvi87DWeo+JxhuMWwfyw6wd4WhEsL/bFAJd4Fa/HHvAq
ljd7G6VnpyqK92O3LIrlxV5QFMubfa8olie7SjHMD/vzYvg87APFsD2wsxfH
/LK7FMf07BXF8XnYsUtgerZbAp+HPakE5od9hq7HLlIS07M/KIn3Y/9K6dlJ
S0XvN0thfthzSuF4yL5J12OXL435ZX9a2ob1B3uPZ+18AztTmej9dhkcj9g/
lsH2wH4S4NplsT2zx5bF9OzjZW1YP7Lzl8PyYL9Xzob1IfsXz9p8n50gHMdj
9hvhWF7sr8Oxv2FfCVf9xUHRpcvb8HvQMfUOz1H7QYbTVlDl+fzvOcTY31dQ
7Tmn6AcVVH1mEv1aRRu+N2V/GeBDnrXzL+xclWw438J+17N2voW9yrN23pMd
p7IN+8vs1z1rvzfK/qqyDecJ2ecr27A/zS5WBa/H/qiKDecP2Fuq2LC/z05R
1YbzA+y3qtpwHpE9L8B3qtpwfoRdqZoN5/nYnwV4X4CzvmbD+Q92p9dsON/D
XvaaDedXYmq7OpYne0J1G86XsE9Vx/bALlQD2xO7Tw1sL+yNNfB9YCeuacN5
Y3YTz9p5bvasmvg+sq/XVO2hhOhytfB9Zw+uZev7/YZ311LlmUh0htq2vp9v
uH1tNV5Hns+LqR/VtvXzDIZr1rFhPcoeXceG+Qb7qGctHsLOa+H12D0tTM9e
6zlyv1p0PNuG9Ta7gY35ZU+3bZgPsC/ZmB92SceG+RZ7oGNDPIS93cH8sFO7
NsTT2K1cfF72Qhevx77v2hDPYFcNRe8RIbwf+2DIhvkGO0ddLA9217rYXtkr
PWvzEfZLr+P7wA69jtdjTw7wWboe+9V6NsT72P08a/Eq9uZ6Nsxn2cnq27Be
YDerj9djz62P7YF9qz62N3aFBtge2EMb4POy9zZQ78sZ0ZkbYnmyOzbE95G9
tCG2N/bT6B1W7Q1bXw8Y/uINW19PGf7rDegPDOdsBPVhuFuAf24E5Wn45cY2
nJdn120M7cnwlMaYX/a5xvi87KJNoD0a/rAJXo/9W4CTN4X2Zrh5U2jPhr+l
9OzbTaE/M1zxTbwee9ibMN4Z/pPSs7M0w/yw3wnwT83gfTX8rBnmh201x/yw
xzfH+o6pC75l6/t9ht/3HLWfZnhDgBO1UON5c9GNPUftTxv+poUqzziir7VQ
5RUmumxLTM/+pKXfn5WTvKulGg+f/1694fSt8Hr/bj9sZevnGwzXaK3q6145
yaNaq/byRPSR1vg87DxtVHnkEd3Ds3bek73Gc1Q8xXDcttge2fXb4vvCntYW
+2P2xba2Pl8wXKKdrcc7Yuxt7dT1Cr6QW7a39fWU4QWeo9ZDhu95jlqvGa7S
Aa/H/rwDXo99oIOqr2qis79t6+sxw13exvuxVwQ4dsfo7XZU7dURPakjlgf7
DKVnF3kH07M/eMfW40WGf30H88tO2gnvx36zE6Znz+mE5c2+2Qnzyy7f2dbX
64Y/7Yz3i6kzdYneb3ex9Xhh2Dj/v0eOn+SIrV2gfzGcsqsN50vYLbraMH9n
z/eszd/Zd7tC/2W4cjcb9ofZw7vZEJ9n7+9mw3ksdrZ3YXw23NmzFh9nL38X
88uO1R2vx3Y8a+djPugO45XhX7vDeG44aQ8bzu+z3+yB+WPP6WFDvJ9903dB
0eV7+v2d6E97Ynr2np6q/RURnakXXo/9di//fRD9Yy8Ybw0/6YX5Ydd+D8ub
PfY9v78Qffw9zC87f2/MD/u93tge2L/0tvX5huEE72N69hvvY3mzv35fvT/J
RV/xrJ0fZZfuE70/7mPr80XDO/rg87DT9rXh77Wy2/RV/c9x0d/3xfuxH3iO
XI+Lfu0D1T+uF/1lgA99oNrDUtG5+tlwPpj9bj+/fxW9yrN2vp8d50NbP79u
+PUP/f5L9FcBPv+hqu+hoot95Pevoj/6yIbz1ewtH9n6+X/DKfrbcP6e/VZ/
v78QPS/Ad/rb8P0Iu9IANX5Zoj8bgOnZ+wb4/YnorAOjd6eBeD/2soGqPeUT
HRbh90ei7QjVnquInhCB+WGfivD7Q9GFPsb7sft8rNp7FtEbPWvn99mJB/n9
iegmg2z4/og9y3PU9yuGrw/C/LDLfYLXYw/+xIbvQ9i7P8H8sjMMVvURJrr9
YFv/ns/wEkrPfkTp2TWH+ONNOcmjh6j6vlNW8tEhqj+4KTrvp9G756eYX/ba
T/F+7HhDo3eDoXg/9vShWB/sS5SeXXIYlhd74DB8Hvb2Ydie2Kk/w/ywW33m
j/eiF36m+qukL+Sqw/F9YI8Yju8r++Bw7A/YOT7H/oTd9XPsj9grPT8fjiqK
fmkEjifs0AgcDz8cofqHg6J/G2HD9zTs5F/YMP9kN//CH/9Ef+tZm9+yb3/h
99+iK36p+p9aood9qeqvheg/v7RhvcbOMtKG9Qn7nZE2nA9i/+RZ2/9kPwuw
NcqG/U/2+FE2rKfZJ0dhftkFR9uwnma/P9qG9SJ7w2h1vyGiE42xYb3NbjzG
hvOX7G/GYHmyr9H12GXH2rD/Rg77fCyUl+EDY9Xz3hOdfZytn08w3GWcrZ+v
MrxinK2fnzAce7wN8bts4/3yFd15vN8+RC8fb+vniQzHmmDr56EMOxPU+9lZ
9MQJqnz7iz7tWYtXsQtPVPlt+9/iJJNUf9zhhTzbc9R5G8M3Jtn6eR7D4ZP9
/lj0kMm2/nt9hv+YjPlhZ5zi92+iO0zB+7F/mILtj/14CtYXu9ZXNsST2WO+
wvbMPvZfdK+pKr9hotdNVe3xSbjk+NNUeZ4X3XCaDb/nwZ5B6dmXA1xqug37
zewIz9rvrbB/nw79o+E0M6B/NNx6hg37LezvZtiwn8n+e4YN+z3sal/bsN9L
jhj3Nfbf7BNf4/jHLjATxw9275l4Pfb6mTbEj9kJv4HnMdzoG8wPe+Z/0WVm
2TA/YA+aheM7e+csG+LX7HSzbTgPzW4b4EWzbZg/sf+h9Ozqc1R7Hyd65By8
HvvwHBvmL+zcc22In7O7z7Uh3sxePdfW97tj7Hrf4vXYU7+1IR7PvvCtDfNn
dvF5/ngguv88G+bP7K3zbIjXs1POV/1lRdEt5tsw/2fPn29DPJp9N8CVF9iw
PmAPX4Dp2fsDnG2hDb8PwO680IZ4OXu5Zy1ezY71neqP0op2vvPHK9ETv1Pt
Iafo05SeXfh7G+Ld7L6etXg8exOlZydZhPdjN11kQzycPXuRDb8vwb4R4PDF
eD32EM/a70ew/1hsQ7ydnXGJDfF6doclmJ79wxL1Ph0S/dhz5O8lia71Az4P
e8wPNqzP2cd+wOdl5/sxevf6EeuTve5HvB87/lJsL+yGS23YT2HPWIrvC/uy
Z20/iF3qJ8wvO+InzE9MnWYZ5pfdehnmh/0dpWf/TenZ1ZZjf8j+Yjn2d+y/
lmN/zs65AvszdrcV2B+yf16B4yH75ZU4XsfUU1baMJ+IqYv+bMN8i/3hz7Y+
3zX828+2fh7JcPJVtj7fN9x8la2vRwx/u8qG76li6oqrbX29aHjYaltf7xn+
M8BZ1vjj/Qv5pzW2Hk8w/Mxz1HrSsLXWhu+92OPX4v1i6oLrbD2eYfj9dTZ8
r8XesM7W4zGGE/1i6/EWw41/wfpif/OLra/3DV/7BcuDXXa9Db9vyv5kva3H
MwzvWo/5ZaffYOvnoQy386x97xRTP9yAz8uusTF6j9qI+WEf2YjPy86zyYbv
sdg9NmF9sddswudhx/0V88uu/yvWJ3uaZ+17LvZFz1HnuQyX2IzlwR6wGe/H
3rYZ+wt2qt+id8vfsD9jLwjwvd/88U50lS22Hk8y/PkWvB77wBYbvpdlZ99q
67+3a7jLVn88F71iq6qvVKJjb7P1+LJhd5uqzziiJ1F69pltOB6xi2xX7SHy
ezz2B9vxedm/eo6cT4lO+jvml/3m75gf9pzf8X7sm79jebPL78D8sD/dgeM9
e88O1V88EJ1ppw3zAfbbO1V9nBH94068H/sJpWfX3qXa+x3RY3ep9n5d9PFd
WN7s/Luj93u7Mb/sX3ZjftgJ/sDnYb/xh63v3xj++g+8H/vKH1gf7NJ7bPge
i/3xHvU+7BC9Y48N32Oy0+614fsqdpu9eD32956177nYD/bi/div/WnDfhr7
ywAf+tOGeC87177o/W6AV+3D52XH2W/DfJ39+n68Hvur/fg87PP7bfiej13s
gA3rCfZHB2yI57K3HLAhXs1OcRDTs986iOnZ8yg9+85BG+Lp7Ep/Re/PPGvx
aPa+v2zYP2ZnPWTDeo/d6ZAN6zn2Ms9avJsddhjvx7YPq/FgtOgJh/F+7FOH
8XnZhY5gfth9jmB9sTcewfywEx/F/LCbHMX8sGcdtSHezL5+1IZ4PLvcMRvO
D7AHH7Mh3s3e7VmL17MzHMf07PbHbYg3sJdQevaj4zbEw9k1T6jydESPPoHX
Yx89gflh5z0ZvXsGeO1JLC92vFM2fH/BbnAKr8eefgrLg33pFD4vu+RpzA97
4Gkb9kvY20/bsN8QU7c6Y0M8l73wjA3xWvb9MzbEE9lVz9oQr2OPOGtDPI59
8CzkN+yJ56j4sOFy52w9fmd48Dlon4Z3e47aPzKc4Tz0j4bbn4f+xfCS87a+
v2f40XkYHw3XvADjr+HRnrX9cfbRCzbsr7PzXrRhf57d86Ktz38Nrw1wvEu2
Pv813OCSra/vYuxLAS552dbXd4YHetbOV7C3X7b19bPh1Fdsff0eYy8M8P0r
mB921auqfygoesRVW49fGD541YbzMTF112u2Hj8xvPIalhf7pev4POzQdRvO
97AnX7fh/A377HVbj28afvWGrcdvDPe7gddjb76B5clOdtPW4yeGm93E+mbP
vanexzyibwW4wi1bj88YHnrL1uMXhvfesvX1oeHMt219fW+4423sT9hLPWvn
i9hPb9v6+sVwnTs2/H2fmPrEHVufvxkucBfGX8O978L4b3j9XRxP2AnvYXp2
o3u2Pn8wPDPAV+/h87DL3Lfh+3b2oPswnkV8ex/Ha/bt+zbsx7Er/u2PD+Uk
D/McuZ4U/aeffpHoLA9UfneIfueBal8zRf/0wIbvzdjPHuD9/t0++Y8qz96i
Cz5U42fkefi3H/rvU1nJPz609b/3Y/hJgGs/8vuDcpLHeo6cj5WVfNxPv0N0
/seqvW2UHNb1sRoPeole6TnyfKbol56o/OR77uxP/PYtuovnyPOEolc8gfI1
HPupaq8PRbtPbf17CsOTArzvqa1/r2c46zNoL4Y7PVPlM1z0smdqfJ0uOizM
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
QDyV7W7F67EnbXUgHs4+41mL97KLbMP07A88a/E09q8BTrrdgf0G9pvbHfie
lj1nu/8+i7653e+vRJf/3YHzbOxPf8frsff87kC8kJ1pR/R+e4cD8Tr2jzsw
v+wnOzC/7No7o/fYnXg/9vGd+Lzs/LsciCey3wvwL7sciCeyE+yO3m/sdmA+
yP56t2pvR0VfofTs0n/g/dgf/4HPw97xhwPzWXbaPQ6ch2S3CfD3exyYz7Mf
eNbm4+zX9kbvL/fi/diHKD07158OxIPZ7wZ4lWctHsuOsw/Ts1/f50C8lP2V
Zy3eyT6/z4F4JrvYfn+8E/3Rfgfikewt+x1Yr7JTHHAg3sZ+6wDmlz3vgAPr
ffadAw7EK9iVDjoQr2B/5lmLl7D3HXQgXsLO+pcD8TR2p78ciDewl/3lQDyB
HXbIgfU+2z7kQDyXPeEQ1jf71CGsT3ahw45+ntZwn8NYX+yNh7G9sxMfwfed
3eSIut4e0bOOqPwcFH39CPaX7HJHHVgvswcfxfGGvduzth5nZziG/Sm7/THM
L3vJMeyv2Y+O4fOwax53IJ4QUx89juMpO+8JB/Yz2T1POLDfyF57woHzEOx4
Jx3Yr2U3OOn3J6Knn3Rgvs6+dFI9Tz/RJU85sB/NHnjKgf30mDr1aQfWS+xW
px04L8BeeNqBeA37foCrnnFgvcMeccaB713YB8+o8pwnOsdZ1d9NFt31rD/e
iV55VrXnqaJfOufo5yHCMpzz21clye3P+e9HRclLzjn6+tbwI/96W0TXPO/3
T6JHn3f0758MHz3v9y+i815w1N//qiS55wXVPrOLXnvB0b/fMxzvoqPHVww3
uKjqv67o6Z4j13eiL9H12CUvoVtfUuNphOjvLmH+Y+pqlx09fmj4i8vYfth/
Xfb7w4qSc17B+mN3u4LpY+qXr+L12HWvOnq8yPCUq3g99rmr/ngguug1fH/Y
H17D9s/+7Rq+P+zk16E/MNz8OvSnhr+9ju8v+zZdj13xBuaHPeyGo8fTDP95
A/sndpabmB/2OzdVe5wr+idKz352E/p7w9YtGM8Mj78F402MXfC2o8cTDb9/
G5+HveE2jDeGE91x9Hif4cZ3YLwx/M0dR48nGr52x9HjlYbL3oXx0vAndzE/
7F138X7s9Pccfb5iuJ3nqHie4cX3HD2eaPhhgGvcd/R4nuFR9x09Xmf4yH1H
j/cZzvO3o58XNdwjwGv+dvT5oOG4Dxw9Hmi4/gO8HntagC8+cPT5suES/zh6
PMHwgABv+0fV9/Pz3mFxHjr6+tHw6w/V+99P9FcPHX1/2PD5h45+fstwsUd+
/yr6o0eO/vt6hrc8cvT9YcMpHuPzs9967OjrQ8PzHjv6+snwnceOvn4yXOmJ
o6/vDH/2xNHXP4b3PXH09anhrE8dfX1puNNTTM9eFuCwZ44e3zJsP8P07AnP
HH39aPjUM2zf7EJhrr6+NdzHs5aevZHSsxPHcuH3O9hNPEfFPw3P8qzVJ/u6
Z60+2eViu3r82PDg2Jhf9m7PWn2wM7zkQntktw/wEs/a+8B+9JIL7xu75suq
PJeIHu05Kn5j+OjLLvQH7LxxXD1+bLhnHMwve22A472C+WE38Kz1RzH1pVdc
/fyL4ZJxXf18ruGBcTE/7O1xsbzZqePh87Jbedb6O/bCePi+sO/Hw/eBXTW+
q+9/xdgHPWvjLztHAhfmB+yuCVyY//y7HUro6vufhicndPX9XcNnE7owf2K/
msiF+SO7n2dtfcDenMiF+Tk7WWIX1ifsZoldWN+w53qOOr9j+FaAKyRxYf3D
HprEhfUle28SF9aP7MxJVfrI39Nhd0zq6udlDC9NqvrbkaKfBrhOMr++np+/
aJnMfz7RC5Kp/uOJ6HvJ/PdLdJXkymUrS/7cc+R+qugDyVX7zSM6ewpVPulf
yCtS4P3YsVOq/u1OJcluSn98fF6+7VKq8ahKZcmLU/rvk+iHKVV91RVdI5XK
XwvRozxHns8UfSTAeVKr5yshukdq9b5YkiM2eY7cfxKdJI163rSim6ZR/WUi
yWHT0vjjWSXJF9Oo8jguukRa/30UPSCtP16J3pbW1c+7GU6VzlXrZ9Et0/n9
8X+Lq6TH/oL9eXq/PYo+kN6F3yOLqbtkcCH+yF6RwdXPhxmOndGF+B7bzehC
vJk9KcBnMvrtQXSRTC7E99gfZML+nP1rJhxP2EkzuxDfYr+ZGdOz52TG8ZB9
M7ML8UN2+SzR+9MsqrzXi96TBcdbdqasmB/221ldiI+xf/SszRfYT7K6ED9j
187mwnyCPTabC/E99vFsLsS/2PmzuxB/Y7+XHZ+H/Ut2F+Jn7AQ5MD/sN3K4
EP9kf53D1ff/DF/Jgfdjl87pQvyO/XFOF+az7B05XYgvsdPmcvXzU4bb5HL1
892Gv8/l6ufPDD/I5cJ6lf1abhfiBewvc7uwXmYfyu3q51sM58rjwnqH/W4e
F9a77FV5XFiPs+PkdWG9E1N/ldeF9Qz7fF5VHslFF8uH+WF/lA+vx96ST/UH
cUWnyI/p2W/lx/bCnpff1ffvDd/xHHV+0nClAljf7M8KYH7Z+wpgebGzFsT2
zO5UEPPLXhbgsEJYH2y7kGpv2UVPKITlwT5VyIX4ObtQYRfi5+w+hfF67I2F
VX+ZR3TiIup9zie6SYBnFcH7sa8Xwfpil3sVy5s9OMC7X8X+ip2hKLaHmHpJ
USwv9qOi+LzsmsWwPtmji7n6+RbDR4up56krOm9xVz/fbbhncRyP2GuL43jM
jlcCx0N2gxI4HrOne9bmQ+xLJVyYL7JLlozeAwO8vaTKz3nRqUtF71YBXljK
H29E3w9w1dIu7M+zF5RW7WlRJcn3Sqv+IEJ0lTLR+/MyLqz3yBG7PGvrR3b6
si6s7/N5jvz+SXSvsur6FUWvK6uer9sLuWE5V/2+n+gZ5dT7tUT0Zc+R+wOi
S4X7/UMVyRGeI3+/srLk38NV+e0Qnaa8Kq9loluXh/yGzSnvj0fP778a/7vh
Vyrg87DrVfD75yqSp1ZQ+blXWfKFCmp8uCi6eEUsD3LY+xVV/zZS9IaKUJ+G
E1WC9ma4cSUX4kPsbwJ8rRLmh122st//if4kwLsqq/tNFJ2+iqqvWaLbBXix
58jzci/kGlVVfju8kI9UdfX4leE81Vw9nmi4RzVXj4caXlPN759Fx33NhfgV
u/5r/vsgeprnqN9LN3zRTz9LdInq6nkXih5QHdOzt1X327voVDX88V10yxou
xs/IC2q4+veahu/VcOH8HrtKTVf/ntPw5zVdOM/HPlDThfgWO3stF+L77C61
1HhQRPSKWn57Eh27tnqfk4p2a2N69qTa6n1N+3+k51guxA/ZNz1r5yHZ5W0X
5jfsT211v4Oi99gu7A/F1G87/ngk+kcH7xdT13ZdmN+yx7ouxO9i6vwhF+Kj
7PcC/EsI88tOUNeF+Cn7jbp4PfbXlJ59JcClX3f18+6GP37dhfUFewelZ6et
50L8k92mngv7r+zvPWvrH/YD/3q9Rb9W34X4H/vL+i7EF9mH6qv6aiw6VwMX
4ofsdxu4sL/OXtXAhfUlO07D6P16gL9q6MJ5PPb5hi6sf9nF3nBh/c3+yLMW
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
PXkH9if7ooeL78T2svvsVPfjAau37HT0eL7htLuwP9kR0v54tuFZ0trvK9j3
djn6fttwxd2Ovl83PGI3lmcfoPLsHHscPR5ruO0ebC972R5Hj1cYjrvX0eMR
hp29WB97grQ/HmT4zF5Hj9cZfn2fo8fLDXf38IZ9jp7vZTjFfmwPu85+R8/n
MjxtP7aXfXM/9ie77AFHz5c2PPgA3u/s3QfweWRnOYjPM7uFdDlfvrnhhQdx
vGc/Pejo8RTDVQ858PsS9ljpUb7vmRs+cciB9Ri7wGE1n0Rb3fmwb7y2Olra
v18znOSIo++3DNc8guXZU6T9+znDV6T93zs2XOKoul9LW93vqLrfi1i9Tdr/
PWDD6Y/h8diNjzn6ftfwXA8/OObo+3nDlY/j+bBHHVf92czqw8fV8zDO6twn
HIifsDuc8N0vVq884ejxFMMvx6jxYpfV4TGOHp8yPCnGgfgP+3yMo3/v2fAb
J7E8u5eHN51Uz+tAq1OfUv0RaXX9U44ejzI845RvPLX6zinfeGd1hdPqfBdb
Pew0Xg/2vtPqeT1pdegZ33j6L7n1GQfik+wlZxyIF7JfOuuo+IPVH55V/XfB
6nFn1fM9/1/yKd//P93qwuewPLurh9edw/uJ/cp5vJ/Yn5zH+4X983l83tnX
pbX4Mrv0BRyP2AOl/fFowzupPDvTRUeP5xlu5uEFF3E+YT++6OjxNsPvXsLy
7K8uOXq8z/CxS44eLzOc77ID7zvYnS5jefZvl3G+ZSe64kC8i/2Rh3+44ns+
rb4kHbsfsPrNqw7Eu9iRVx2Id7H/9PCr17A+dsNrWJ4928N/XVP361qrK13H
8uwvrzsQj2MfvO7Aeoqd84YD8Tp2uxtYH3u5h+PdxPrY4iaeL/u7m1gf++xN
B+KF7CK3HIj3sXvcUvfjFKv/8HDK24Fd97ZvvLT6l9sOxBPZt6S19TS73J3A
HnJHPe/drd4jrcU72VnvBnbLuw7EG9mL7uL5sJ9JP9/PdLL6/XtYH/sbaS2e
yo6R1uKN7IJ/YX+wv/gL28Ne8xdeT3bS+w58j5Jd6z7Wx/7xvgPxVPbV+3g+
7JIPHIiHsvs/8M2XVm9/4Jsvrc7wMLCbPHRgP8meJ+3P9zX8kOpjV3nkQLyT
PfqRA/E89pFHDsSz2HkeOxCvY3/22NHzMQyveuzo+ZSGEzzxjYdWV5f258sY
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
N/bw3NsC4nnsB7exPezKdwTku7FHSWv5ZuzDd/B+Y+e+K+B9OTmyy124nwyv
vQvnazjZPayPXfsetMfwT/fweOxrHi71l4DvDbEH/AXXw/COv4Qe7zSc8T7W
x256X+j7VcPzPfzIw+88EJCPwx4j7Y+3GD76QEC+DTvvQwH5ROyOD7E+9uqH
Qv+9keGEj4SeD2O4hrQ/3mR48iNsD/viI2wPu/hjAflU7D6P1fUOs3rLY2wv
O+0TocezDEc8EZAPxZ71REA+GfveE6HHUwxXfArzkeERT/F+Yh94ivc7O8cz
fN7YbZ/BeGx42TMY7wzHDXHhe8ZsR/p5e2K/F8ieIO1fbxg+I+1fTxl+/SUX
/l4Wu7u09vfM2Ruk/ftNwyniuPr7esN1pP35BIanSft/b2H4pq++FVaXjevq
v0cyPFja/3sMw7vjuvrvZQxniefC93LZLeKp9jy0euG/6arxXf33QIbHxlfX
M/Z7wWviq/4tV97mpC+r+y+f1bVeVscvbXPIROnY90tWn5OOHd+sLppA3b+1
rO4pHTt+/S2nSuiq8dPqetKx8Werpyf03f9W3/Zw+UTq+Q37W96bSPXXQKuz
JVbXu53VraRjx+e/5ZAkeL3YHyTxjT9Wfyv9fP5NavVJae33b+xCSeF+Ntwl
KTx/htcmhefXcLJkMH4Yrp1M1Tff6p+SqedlutXXkqnxd4rVpV7B8uwBr6j+
HGf1Dg9nTO5Cfha7aXIX8sfY8z38KLkL+Xnsd1K4ED9kj/HwUWktPsLOmxLm
H8MdU7oQ/2Kv9nDCVC7Eb9g1UrkQf2NPTgXzr+GLqWD+Nlw8Ncz/hvukVtcj
9vs07C2pXYgvsNOmcWF/yY6Q1vZT7FlpXNgfsu+lcSH+wK6Y1oX4AntEWhf2
f+wDaV3Ib2DneNWF9+vstq9iefayV114/8yOm86F96NsJx2WZ09I58L7d/aZ
dK6+/jf8enpXX78b7p5eHa+I1RvSu/D7A3aKDK6+vzFcJ4NqT0qrp0k/P93n
fx/X8E0Pl83ou9/L2jw4o3qeYr9fwd6d0YXvS7CzZMLy7BaZfPe71Qszqeu9
weqnmdR4tdbqqpmxPvbYzL75wOoT0v6//2y4QBY1n0+2unMWdb3GWB2dxTef
WJ0kqzqfflbXzKr6u5PVU7Kq9tS3+kpW33hudYlsvufB6n7Z1PWoYvU26dj4
gNXpQ33zgdWNQ9V4+6bVc0PVfJjH6gehvufJ6srZA3uUhw9n9z2PVufOEdgd
cqj+TmP1yhy+59Hql3P6nufSNofnxPLsSTl981lpm8/nVNczfhmb38iF5dm9
cqnrnbSMzZtyqfk+gdWpc+P1ZNfPjfc7e0ZuNd62tvpObvU8N7a6Qh41Xrxv
9bA8qj3NrN6XB593dmheHA/ZrfOq5+G+1Uvy4nzEfikfzsfsD/O5kN/HHpfP
hfzLYF04vwvvP9hd87uQ/8lel9+F9Qr7lQKB/UkBF95vsH8u4EL8nH29gOqv
h1aXLujC+wv2QGnt/Qd7p4czFXJhvRisFxTC9rAfS2vvV9jvFnZhvcn+qjCW
Zx8r7MJ6mZ3vNWwPu9P/cb9ZxIX9CDuyiAv7oX/aDYu6sJ9jzy7qQn5MsK70
BtYXrA++ofqriNU5i7mwX2W38/DyYqq+DlbHK+7q8VPDQlr7fRP7u+Iu/H6L
fba4C79/Yhd5U7V3lNU93sTywTrlWy7EE9h138L+CNa33sL+Zpcr4UK8gD2k
hAv5P+w9Hs5aEo/HblkS7zf2opIuxBvYz0ri/ch+vxQ+b+xvSuHzzo6R1vI7
2AVLq/YksPqL0mo8Tvm3nLSM6o84Vtcqg/MR+8cyLuR/sK+WwfmSXbKsC/ES
dv+yOB+zt0tr8RJ2hnI437OblHP191eG50lr8RD2Q2kt3sKuUt6F/GX26PIu
rIfYR8q7sB5j56mA5dmfVXDh9wnsVRVciMewE4RheXZ1D38fhvWxL4Th+QTr
3hVdyD9nb67o6u9PDaephO1lN6jkQn4/e6aH70prvy9gh73twu8j2MOltfx+
9v63Xfh9BDt7ZSzPblMZy7OXSofIf2FWx6kS2NWq+MZDq8dXcfX334ZPV/GN
t1a/9o5vvLS62zsuxNvY66k8O/m7WJ796bvqfkxn9VQP33jXhXgeu8x7gT3o
PRfibexd76n+umF15qouxPvYzatifexfq2J97CdVfeO11e+978L3ddlfv4/1
sY9TeXb+D1zYT7M//0CNRzus/v0DNR6stjrxh4H98YdqvlthdZSHL0tr8Uj2
W9UCu2811V/zrd5azYV4Izud45vPrG7k4PHYcxzV31Osvk/l2W8L33xs9UiB
5dmHqDw7lxvY7aW1eDJ7hYvXix0/HO8HthuOzwN7YjiOF+xz4ep4pa0uWh3H
e3bP6jgfsTdWd/X8MMOparjw+zJ2vRouvG9hT6/hwnqAfVs6sf/3q+zyH7mw
3mEP/ciF9Rx7r7QWr2Bn+9iF9Si71ccurGfZi6k8O6SmC+tl9gc1XdgPsL+t
6cL7UPZJaW2/To4sVsvV8+uD9mZp//eLDaep7erfVzXcoLYL+UPsmbV918vq
u7XV83DA6rBPAnv4J+p+2vK3nP1TNR/vsrrNp775xOqln+L5sOPUcf93vzXX
6mp1XMjPYo+v4xuv/pZfq4vny+5W19XzKQyvr+tCfhk7eT3VX2Os/rSeC/lr
7Kn1XD3eYfhGPVePVxguU9/V4z2GB9XH+ti7pLX8PHbmBr7x2OrmDVw9HhG0
nzRw9XhF0P46AtvLPh6B/cXO39DV81EMf94Q+5P9u4cTN3L1eJjhjxup8S7S
6qhGrv77O8OXG+H5st9qHNh9G+P1YG9t7OrxIMPpmsB4/R/3201hPjE8sinM
R4YPNVXPez6rczXD8uz2zVw9H8fwCg/Hb+7q7xMMu81hvjU8sblvPLb6nIeL
tlD9GW11zxa+8fRvOVVLF/6+M7vev+nbLV093hG0h7ZyIb88WGdrjfWxW7X2
jTdWL26N9bFD2mD5YP1tG1dfzwbtQm1dfb37H3ftdi78fuGfdqn2Lvy+4oVf
+IVf+IX/NQ/u4erxSMO7pf3x1v+4n/b89zy2l6vHYw2fkPbnMxku0DuwO0vH
vg8ta3O0dOzv461O0iewa0r742mGp0j730cYvtLH1d9nGC4RifcDu5+09vtE
9jZp7feX7PR9A7txX5zP2XM9/EA6Nh/O6sr9XPh9JHuUtPb7Rvbhfup5aGh1
7v6u/r4tMj/58/7YX+zfpbX1EjvxAOwv9scDXFgvkqOiBrj6+0jDlwfA+Rh+
a6Cr5+sZ7jtQ3S8DbY7eOtDV8/EMpxuE5dmNBkF/GJ4zyNXjrYbvD3L19/Hs
mLcHu3o+2T/uXENcPV+CHdJhiAvfj/inHT7UhXySIB16fqir55sYfmOYq8cT
DPcahuXZm6T93+cwnHq4q++X2WH1pQ/4vq9geIav/DKr70j78z0NVxjh6vtt
dsSwEa6ez2F43whXz8f4TzvypZGqv+f/P/Gpkep5nG5zVOFRrv6+xnDXUTie
/B9zdOkxrp5PYHjgGJivDe8co/qj0gu/8Au/8Au/8Au/8H+FE01z9b8v9sLo
kDnTXbXfs/q+tJbvx357hgv5jl4eKe2PP4UemqGuV5yyNuea6erxKE+3l/bn
dxlegQ6LP8vV81U97Xp44iy4/wyfm+Xq8QnDRWe7+vsvdkRPaX/+luGN0v74
iOFUc1x9/W+4nrQ/fmF4+hxXzx9nR96e4+L7UXL5ua4ePzE8VNr/9yoN753r
wv6QHJVtnqvvjw23mqeux1qrF89z9ffPhkPmY3n2B4Ed/e18V99fGz4539X3
/4YLLXD1328Y7rLA93zaHLPWw8l+dfXvfRmuLe3PDzD8E5VnX5P2/76PHVJ6
IbTH8EBpf/zC8E5p7fevQTq02aLAXiDtj88ZfrwI7kfD7y529d+vsMO+Wuzq
8QfDxxbD82I43xJ4Hg13WgLPo+HflsDzZjjRUmwvOeKjpa4eXzH8w1Jor+FL
S3E8C9aRy7C+IB356nK4noYbLlfz4xirZy93If8iSEdVWgHjteEvV8DxgnbO
lTCes6PbrYTjGV6+0tXfLxiOt8rV4/eGxSpXf39h+LtVMN8F65giq139/QI7
pOe/55iUv7n6+6kX/u9y2Mk1rp7//9/miNrrXH39/U87stR6V/8+DztqwHpX
X9//4266wVXrHavnb/DNhzZHP9rg6r8f+r/mmNUbfeOp1Qk3+eYTq2tscvXf
DxmevMnVf//DDrm0SY1XI6x+c7NvvrE6crNvvLf6T+nY/YLVr26B831hdNjy
rWo8aGx1vG2++dLmCLHNN19a/Z10Gt/3pwyf3aae13Cri2wP7B7b8XjkyD+2
q+e9ktUpd2B5dt0d0F7Dv+zA+ti3drj697HYUeV2Qn8G7T07oT1Bu+UueJ4M
L9oFzxM7+tkuVd/Y/x+OKbgHxpOgvWYPjnfspHthPjBcay/MJ+yQnzx8bS/M
h4ZL7VP34yGrB0j741eGd+xz9fwtdmjG/a7aD1vddD/M54bn71fj9ROrH+13
9fic4XcOuHr+GDtszAFor+GjB6A+w3kPYn3sjgexPnLE6oPQn4YTHlLP4w2r
axzC+tiTPXyR6iNHFj/s6vFMw30Oq/spsdVbDqvxNKXVaY+4evyTHRVxBMob
nuXhe9Kx+SlWVzzq6vFUdvQIaX/81PABKs/OcQz623DbY3A/G152DM6HHRP3
uHpeM1jtHIf+NDzhOBzP8JnjcL3ZIUVOwPka7nECjmf4Dw+njIHzZYfWjYHr
YfiXGLgfDd/ycLmT0B522BAP7zmJzz876yl43g23PAXX0/Ai6efrqZw2RzzD
8obfP63Gq4JWf3Pa1febhmOk/fmn7MiCZ1z9fYDhL864kB/LXuPhpGexPnJU
LQ//eBbOx/DVs66eH2S45DlXz1813P+cq3/fhB29/Ry0x3CG83C+hpucx/rY
86T98Rx2zEOsz3CVC1iePVraHw8zfOQC3A+G81zE8Yoc0tHDq6W176+wE16C
62W4xiW439mhk7G84YuX4HkzXPwy1sfucxnrI4dtwfKG015R40kxqyOuYHn2
rCs4frDvUX3kiIpXA3uEtD8/PmjnuIbjETmy7TU4nuFl16A/Dce9jvWxHQ9P
uI7HI0eduY7jCfv1G3C+hrvfgPnM8IYbcL+zo1PchOfFcJ2bMJ8annYT5kPD
N29Ce9gxZW/h880e7OHdt7A+dpbb0B52SEtpbT3CXiTtXw8afnbbhfUO+/07
MJ8b/uaOq6+n2aEx0tp+iF3wrqvHGw1/cRfLs9fcxeORw5Lec/X9nuFaHv5R
WtsPsa/ec/V4oeGSf7n6923YEf3/gvKGt1N5dob7ar7ZYHWT+2q+W2H1vPuu
vp9mRz687+rxSsNVHrj6ft7w6AfQXsNHHkB72FF5HroQ72Z/5uFVHk7wCPrL
cPVHcD+yo79/pPrjgNUXHrmQr8Mu9hjLs3s/hvuRHbP5sau/jzCc5klgN3gC
z5PhmR6++8TV4wHskIpPXX2/ZXjEU6jvn3Zo22cwHhpe9gzmO8NxQ8JhvcN2
pP3zneEJVJ4cdkZaW6+wX38pHNZL7O4vwfEMbwjsiBRxwvX1uOE60v71sOFp
0v7fvxm+Ke3fLwTryMFxoT7Du6W136+xs8QL6KgW8eB4hhfGg/M1/FTa/747
aI+NH67vF9jRJ+LD+Rou8DK0x3Dnl+F4hqNfhv5gxyRJENg1E8D9YnhKAmiP
4SsJoD3skJIJoT7D/RPC82B4u7S2X2JnSATPGzu0SSJ8ntnzPPwwERzPcJXE
4fp60PBoaf96mR12xMN5koTr453hz6S1/En2KipPjkiQFMobrp40XF9vG/5e
OuT5P6svJIX+YEcWSwblg/bmZOHw+2l2mlcCOqqBh2dK+9fLhu++Eq6vVw2H
Jcf62MOl/fMpO3p/8nB9PjacPQVcT8NtUoTr6wXDS1OEw/qEHSclnC87plpK
uJ6Gx6eE+8XwaSrPfi0V3I/skO6p4HkxvCEVzNeGU6QO7Dqpcbwhh07D8oZv
Unl22TQ4XrAHp8HxiBy2O004xD/YWdJCfYZbpMXxhr0wLbSXHfEUyxuu+mpg
j/XwCQ8XSIfjDTmyczp4ngxHp8PxgZ0kPdbHrpkey5OjpqTH8YJ9BeszXCID
jg/sfhlwvCFHb8uA4wE7fUZ8vtmNM0J7DM+V9u+nDT/ICP3BjqmcCcobHpUJ
ztfw4UwwHhrOnTkc9jvsDpmhv9ghqzKH6/s9wwmywPEMV8+C5dnfZ4HzZYde
yALtNVwsK5Zn95b275cNb5b2xysMp8kW0GENpP3xBsMzPXxX2r9fNxwWGq7H
E9gRw0PV9Zpv9f5QOJ7h7NmxPLtNdmgPO3JpdmiP4Tg51PWabnW1HOEQj2GP
zxGu55MZPi3tz+cw/FpOdb2H2RzVLafqj35Wr6fy7OS5AvvTwI6emgvaa/hG
LjUedbK6TG71vLW2epC0P1/K8K7c2B525jwBHdM8T7ieD2T4VyrPfpIHztfw
e3mxPDlkbN5wyBdkn8gL/WG4QL5wPd/LcOd84Xq+luHofGo8L2lzaJL86nmp
YnXN/Op83rd6CpVnX5GO/f6m1SUKhKu/V/93HLatgOqPDFanL+ibT61uXNA3
X9ocMdfDDwqq9lwrbXPlQuHq71NbPaoQlmcfLuSbj22OzF1YPW+3re5QGOoz
vLKwVt//AAs9Hig=
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[3, 4], 0.75], 
          NCache[
           Rational[1, 4], 0.25], 0.5]], 
        PointBox[CompressedData["
1:eJyM3XW4VkXXBvADSiPdHYogIN1dAjsOLSIhDQICCigSCkinhCAhIUg30t2p
dHd3d39uzjv7zH3Pup798c97/d5r3DmzZmbN7OdkbNyuerOoYWFhmfOGhXn/
GxbWo9HhyrfLxD46tX2J2MVK/+eyR/5zn5vVVqSL9s5DPJfwCrwu+v/xMc+3
/vvP+9wUnfmoOv5W0W09z694vkuS+aJXeq43bNPjrBNEv3/sP1f3TjdcdBXP
2bz/oKXocZ7fPY7aoi8fU9fTVnTu4//5Sdb/DlhAdFfPmx//93+UFb3Nc9ck
/x2xqOiEJ9T9phFd74S63uSiZ5zw36/oByfU87hWRHKJk/+5uffviuj+J9Xz
3i/64En/fYtOd0rVx12ivz6l6tMc0X+f8uuL6Len1PVOF22d9uuT6N9Oq/re
XfS50+p++ojOfgbLs7/3XMm73H6iN1J5dtyzfn0UXTvAf55Vz7O16NuevddZ
rbPowudC+5dz+DzY/3r2Hne9YaJTng/tpp6ntfeeiOgF51V7XCr6xXmsj+wK
F/7zP3u8f6J/vYD1nX3ygnred0RnuejHU9HfXlTx4IXoNRdVe81aVHKMS/85
37t/oqtfUucrIfoPz+PG/vevjuhrAc53WXms6J8uq/OtFb3zsnrfe0UnuaLu
56Hor6748bCY5Nmev/VOmFv04yt+vBZd+qrfn4gedNVvD6KPXPXjjeiM11Q8
2C66zTX1PI+LXn7Nj/fFJUe97j8P0e51db6Kon+/ruK1JfriddXeOon+9IYf
j0T/eMNv76K3eE7v3dBE0fFv+vVN9Jc3/fYq+q+bfnsVfe+m315FF7vlP68S
kvveUs+7tuj9t/znJTrNbRUPuohucduPd6IX3/bvV/Tr2/79iK505z+/O12S
kpJH3lH1rYLoM3dUfa8nOttdvz5JDmtw13+fomcF+NFd1d/NEV3qnh+PRA+8
p+JB1FKSD99T/dHFkpIz3MfjsVvf9/sj0cs8h3n/NoiO8kDVh1WinQcqXs0U
PeaBqu/zRV+g8uycD1V9GCW6c4A3BzjeI9XeG4iu4/ldc2sketojv78TffeR
6u8d0UUfQ3013Ocx1HfD+x77/Yno1E9UfcksuvkTaG+GFz1R/c2zEpJfPfH7
g5KSKz5V93OqhOAeY5+qeHVU9KWn6nwrROd6hvGI3eUZlmdvfabe5xTRCZ77
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
f214RxUL1tPYiavi8dgNAjyrqgXreexHVaE/NFyqGh6PPbAaHo99uBreDztD
dSzPbl0dy7OXVcfnyY5Sw9LHQ4adGpY+3jE8poaljycMX6jhx2PROWtasN+E
3bmmBftF2Jtr4vWw49Wy9PGW4ToBnlbL0sdjhu/WsmC9mV30cwv2s7P7fO73
N6L3fa7i1QbRqWvj9bKb18brYS+qbcF6OvtVbb+/E13xC0ufrxge8QUej33a
s7afiJ21jgXfE7A71PH7W9HrAhzrSwv2I7BrfmnBfiL2JCrPvhHgAnXV/XYR
3aOu39+L3l3XgnwlO1k9C/YjsRvVs2A/FHtuPbwe9tN6eD522fqhPaS+6s86
iT4W4MwNLNiPxW7bAO+XvbIBHo/9/ld4PHaVr1R9rCd63Fd4v+zLX1mwn4ad
uyGej921IR6Pva0h3g87YSN8Hux6jfB62DMaYX1gP2hkQb6dXaIxXg+7v+eI
fJHog1Sena4JPg/2103wftl/U3n22yZ4P2yrKb4v9m9N8Xmyz1F5dvZmeD3s
75vh82BvbIbHY8dtjs+DXbs5lmf/2RzPx77dHK+XXbgFno/9Swusb+x/W1iw
XsRO2RKvl920JZZnL2hp6etVhl+0xP6MXeFr7O/Zv36N5dknPWvjEXaWVhaM
B9jftrJgvMde08qC/XDsGK1Du3qA//CsjVfZ1zxHrEeJztfG0uc7hn9qY8F+
cvbONpY+Hzac5Bssz/7qG78+i579jQX73dmPv/Hrq+jSbf36JnpQWwu+B2Qf
aWvB9wLsjO0stR9HdJt2FnyvwF7eztLzJYajtrfUeFy02x6Px/69vaXncwxf
DPCn31r6fg3DP3rWvtdgbwlw/O/U+9wg+svvLH2/huG/vlPtbYXoe561/Zrs
Yh0s+J6D3TfA+wOcpqMF+0nZLTxH5qMML+6I9Zn9uiO2F3alTipetBc9spOl
56sMn+mE7Zmd7XtL3y9iuGOA1wc49g8WfI/CrhXgyT9Yer7N8E0qzy7YGeMV
u2eA93S29Hye4eQ/4vNmN/asfU/NnvcjHo/97EcL8lHscl2wP2AP9RyZ7zJ8
vAv2F+wPu1rwvRC7XVdLz8cZXtUVr4cdrRv2d+yq3SzI17DHd1PxJkz0lW4W
5IvYebpbkK9hdwvw9u4WfE/ETvSTBfkYdv2fLMgHsWf+ZMF4iP2Qjscu+bMF
+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
RPTRwv77Fp2pCPS3hr8p4r8v0SuKQH9v+L2ioR1eVLW3gaLHFrX1fKbhS0Vt
PZ9lOFcxWx+vGe5SzNbzQYa3BjhBcfU8MheVXLe4rY/HDU8vbuvjfcP3i/vP
S3TxErY+XzHcr4T/PEUfKGHr8ynDaUuq/n6m6JYlbX0+a3hJSf99iH5T0tbn
y4Yrl7L1+bbhUaXU/T4WfbaUX9+LSf6ktA37F9mdStv6+r3hDZ6170/Zccqo
991L9OdlbH191/CUMjbs72PfKmPD7yuwC5W1YX88u1dZFa/Pi/6nrA3fr7JT
lLP19VvDTQI8v5wNvx/Bfl4Onwe7fHkb9k+yh5VXx+sh+kR5fJ/sjyrYsP+U
3b4C1hf26gq2vj/McPTPbD1fZbhagCd8ZsP+dPZVKs/OW9GG/ePs7hVtPd9o
eEdFW8+XGk5cCdsju0ElW893Gp5VCeMB+xEdj12qMl4Pe2BlPB/7cGXVnx4S
ncHCeMRubdl6PtjwMguPx45i23q+z7BjY7xlj7HxeOwLtqqvp0TndLA8u7OD
98PeHOB4rq3n4w3XcW093294mufIfKnhu6663lGii4bb+n4Fw33CVXuaInpf
uGrPw0WnroL9Mbt5FVtfjzG8qIqt73cw/KqKup5GoitWVf1FPtEjqtp6vs3w
6ao2jHfYWav59V10h2q2vl5oeF01v78SHau6ra9XG65Z3YbxIHtSdVvfD2D4
RnVbz3cZLlDD1vcLGO5Rw4bxKnt3DTweO1lNdT0NRDeq6fc3oufWtGE8zn4a
4LK17P+NJz8VPaSWet4FRB+rZev5MMOZP/f7C9FtP7dhvsJe+Tkej/1+bdWf
h4mu4jliPix6XG1bz2cZvlzbr6+ic3/hxyvRXb/w45XobZ61+SQ7YZ3QrlfH
r++iZ9Tx45XoB3VUfZgqusSXfjwV3f9LdT39RB/80o+notPVxfLsr+tiefbf
dW2Yr7Pf1rVhPs626uH7YP8W4HP1bD2faTh7fb8/Fv19fXye7I311f3cER23
gQ35BHbtBljf2X828OO96NsNsL2zC39lq/Us0b985b9P0f9+Zev7QQynbGjD
fJ3dtKEq/1r0goa2vl5k+EVD7A/ZFRrZ+n4Lw782wv6WfbKRqq+tRWdpjMdj
f9vY1vdLGl7TWMWjeqJjNMHzsas3sfX9GIb/8MvPEX2tiQ3jTXa+pjbM99k/
NbVhPM/e2dSG8TQ7STMb9teyv/Ks/74ZeXYzG8az7MfNVH14KLp0cxvGs+xB
zW2Yj7CPNLfh+1N2xhbqfaYR3aYF3i97eQtb3y9hOGpLG+aLbLelDfkS9u8t
8Xjsiy1Veywh+tOv8X7YP36N98Pe8rUN81F2/Fa2vp/D8Jet8H2w//KszYfZ
91rZ+n4ew8Va4/Wy+7bG87H3t1b9TcTvx7HTtMH2wG7RBusje3EbbI/s123U
9W4VXekbG+Zr7JGetfkq+8w3tr5fxHC2tjbMt9gd26r7mSp6fVsb8p3s2O1s
mK+xa7XD62FPbofxkn2znXpfvUQXbG/r+10M92yv4k0H0Xva2zCfZCf/NrQb
f6vqS0vR8761YT7KfvYt9ifsct/ZMF9lD/3O1vezGD7+HfbH7A872Pp+f8Pt
OtiQT2ev6mBDPp4draPqj9KJrtrR1veLGh7f0Yb5MvtKR1vfj2I4Tycbxjvs
bp4jvwcwvL2Tre+HMZzoexvGS+z63/vxsqjkmd/j/bIffu/3B6JL/oDl2QN+
sGG8xj70gx9PRafvjOXZrTpjefbSzvi+2GE/4vNm2z/akO9gj/4Rj8c+/6N6
3rtE5+hi6/uJDP/g2buuiP3uhjd1sWG8zf6gqw35FvYXXW3It7CndrUh38K+
01XFgzGii3SzIV/C7t1Nvc9hovd2syEfw07V3Y+3opt19+Ol6IXd8XrYL7ur
59Fe9Gc/4fHYw39S8aCz6FM/4fHYH/+Mx2N/97MN+SD22p9tWK8l94jfA8ob
/jLAf/WwYT8X+14PG/aDsYv1DO2+Ad7f09bzbYbT9LL1+a7hFgFe3MvvT0S/
pvLsSr/4/Znokb+o/iCL6DO/2Ho+z3C23qHdsTcej72eyrNj98HrZdfqo9pb
CdGT++D52Df72LCfj12wr63nOwz37IvXy97TV9XXzKKT97NhPyC7cT9bz2ca
nhfgZ/3webDL9cf6wh7aH583+3iAPxyA9ZXdbgCWZ68agO2NHW0gxgN21YEY
b9jjB2J7ZV/xrO03ZecZhMdjdwvw9kF4vexEgyEeG67vWduPy57pOTJfZvjh
YOjvDJccYsN+YfaAIdCfGz40xIbvwdjph9r6eo3hVkNt2O/MXjrU1sdLhu8P
9et7UcnFh9l6Psxwv2G2vl/G8AHPkfMpw2l/tfX5muGWv+Lx2Es8R+bjDL/5
1dbne4YrD7f1+Sw7bMJwG+bj7KvDbVjPZecdYcN6OLu7Zy1fwt7hWfv9OHbi
kTbks9gNRuLx2LOoPPvRSDwfu9QoG/JV7IGj/Hgp+vAoPB87w294PHbr3/B4
7GW/2ZAPY0cZbUM+jO2MxuthjxmNz4N9gY7HzjkGj8fuPMaGfCp78xgb8mHs
eL/buB+AXMezls9iT/vdhnwT++7vNuRz2UXHYntg9xmL18PeNxbPx049LrSb
j7MhX85eNE7Fk/miXwW44nhb/x7M8IgAnx6Px2NnnWDDfkB2hwk25MPY6yb4
/ZXoWH/Y+vdmhmt61vJ17El/QLw2fOMPG/aDsAtMhP7AcI+JNuyXZO+eCP2B
4WSTbMjHsRtNsiHfxp47yYZ8G/vpJBvyeeyyk/F+2EMm4/nYxwKceYoN62Hs
tlOgPzS8cooN62Hs9//E8uwqf2J59rg/bcg3si//aUO+ip17amh3DfC2qTbk
09gJp9mQD2LXC/CMaTbk89gPPEest4ku8ZcN+Sp2/79syDexDwY43XTVXveL
/jrAf0+3IR/Gfjvdj1eirRk25KPYv81Q9Xmq6HMz8Hjs7DPV+54j+vuZeDz2
xpk25JPYcWfZaj+r6NqzbMh3sf+cZUO+i317lg35Inbh2Tbko9i/zMby7H9n
2/p8ynDKOTbko9hNA7xgjg37qdgv5tj6fNRwhbmh/WuAT8619fmy4SzzQvtb
z5H5DsNr5tl6PsJwjPk27KdiV5+Px2P/MV+19zSirwU43wIb9pOwf/Ksfc/C
3rkAr5edZKGK5/FFf7UQj8eevRCvh/2YjscuvciG/WjsQYvwetlHFuH1sDMu
xufJbhPg5YvxeOyoS/B+2W6Af/es7fdhX1yi+qPcoj/9G+s7+8e/1fXWFr0l
wPGXhvaXSzFesP/yHDFeEX1vKcYrdrFlGA/ZfZdhPGbvX4bxnp1mOfY37BbL
sb9kL16O/TH79XLsT9mVVtiwX5c9coWt53MMnwlwtpU2jIfYHVfasF+ZvX6l
X99Ex17l11fRtTxr+63Yk1fZMJ5m31xlw3icXXC1DeNtds/VNsyH2HtW27Bf
g518jQ35HHbjNep53BM9b40N+13Yz9bY+u/JGC63VtWnmqKHrvX7S9HH19r6
74Ma/nCd/7xFt/Os/X0K9ioqz462Hs/Hrrpexdt6osevV++riugrVJ6dZ0No
d9vgxyvR2zf48Uh0oo0q3vYSXT/AMzeq5zlW9EPPYd6/DaJLbvLjiegBniP2
O4g+tMmGvz/DTr/Z769Ft9qs2kN20Us3+/FCdNgWG/5+EtveouJ9YdGjt+D5
2OfpeOwcW0P7h62qPmQWvWmr39+K/mCbH09Ff7ENnwd76jbV3pOIvrNNPY9n
xSQX2W7D3wdi9/asfY/I3rsd6yM71Q6/vxTdbIff34peuMOP56JfBviznRgP
2cN3qvupKPrUThv2W7I/3mVDPpr93S6/PYheG+CYu23YD8uusRv7G/bE3Tbk
c9nXd2N/xM6/x4b9wuyf96j+6qjoXXtsyAezk/4T2g3/sSFfy54T4CcBLvOv
Des57MH/2pBPZh/9F4/HzrTXhnwu+5u9NuzXZK/Yq97nHNHv7bMhn8wO34fl
2WP34fWwL+2zIV/LzrU/tLvsV/3pBNFbA5zgQGjXDfD0Azbky9n3D9iQT2YX
P2jj9//kfgdtyLezDxzE47HTHrIhX85ueQjLs5ccsmE8y35zCK+HXfkw3g97
1GE8HvvsYRvy7exPjtiQj2Z3CvCGIzbkk9lxjtqQD2dXPGrDflT2iKM27Jdl
nz5qw3yFnfWYDfMVdodjeD72umM27Idlxzpuw35cds0ATzpuw3yMfeO4qk9F
RRc4YcN8j93jhA37ddm7T9iQ72cnOxnajU7i82bPPYnPi/2Ujscuewrvlz0k
wMdO4ftmZz4d2m1P4/2wV3qO3I9h+P0z2B7YVc5gfWaPO4PPi335DNZXdu6z
eD5217PYHtnbztqwnsROeM6G+Ty73jkb8gHsGecwXrIfnLPhewB2ifNYnt3/
PMZD9sHzGG/Z6S7g8dhfB/jvC3g89tsLeD9s6yIej/3bReyP2Ocu4vnY2S+F
9veX8HrYGy/ZkI9hx72M5dm1L+P9sP/0rH2vwr59Gesru/AVPB/7lyt4PPa/
V7A+s1NexetlN72K/TV7wVV8X+wXV/F62BWu4fti/+pZ2w/APhngLNdD+9vr
eL3sNZ61/QrsGDdCu/oNG8aL7D9uqPe5VvQ1z9p4mZ3vpg3zAfZPAd5504b5
GDvJLRu/zyR/dcuG+Sh79i0b9kOxH9/y+zvRpW+r67VED7ptw3yafSTAGe/Y
MF9nt/Gs5QvZy+/YkA9kR72Lx2O7d/F+2L/fxetlX7yLz5P96T0sz/7xng35
BvaWAMe/r+JVZtFf3lftKarov+5jfWLfu6/iTcT3lOxiD7C+svs+sCGfwd7/
wIZ8BTvNQzwfu8VDG/IJ7MUBfh3gSo+wvbJHBvjMIxvyCexsj22Yr7M7PsZ4
w17vWcsnsGM/UfVhquhaT7C/ZU9+gvGaffMJxlt2wafYX7F7PrVxvYa856kN
41V28mc2jHfZjZ/ZMB9gz6Py7GeetfE8u9xzvB720Oc2zCfYxwP84Qu/PYtu
9wLLs1e98OOF6Ggv8Xjsqi9VfYgvevxLG743ZF95qa4n4ntJdp5Xod3tlbqe
i6K3e9a+52Qnem3r++0N139tw3ose2aAH762YT2YXfKN3x5FD3ij4uVC0Yfe
2Pr3BobTv7VhvxW71Vssz15K5dlhYQ78XhPb9qz9Hgl7dIDPe4783sJwjigO
rPezf/Cs7bdib4qC52N/ENXRv2cx/IVnbT8CucdsLG/4sefI/VqGS7/nwPc2
7EEBPuI5cj+F4YzvO/A9EbvN++p5lRC93LP2vRI7ajQHvjdku9HU+6wi+ncq
z77oWfveif1p9ND+0XPEerXoLdHxebHjx8D3zf4yBr5v9l8xoL4avhcD6wO7
WMzQ7utZ+16KvT8mtAfDaWI5+vfChlt41r53Yi/2rP29NPbrAFeK7cD3UOyR
niPjreEzniN/L89wtjiOvh/GcMc4WJ69nsqzY8d19P7QcC3Pkflaw5PjOnp/
bPhmXEfPxxou+IGj5+sM9wzwng8cPR9nOHk8Rx+vGW4cz9HzIYbnxXP08aLh
Z54j15MMl4vv6PNxw0PjO/p42vDx+I6+nmn4wwSOPt8w3C6Bo8+XDK9K4Oj7
eQxHS+i/L9FVEzr6fNHw+ISOvl/F8JWEjr4ebjhPotDulkj1B11Eb0/k6Ov1
hhMl9p+36PqJ1fM4KnpmYnW+F6IfJlbxOGNxySWT+PVZ9IAkfn8j+lCA0yf1
67voVklVPGwuemlSP96LDkum4mF70XYyVV9aih6dzK8Pos8n8/s70TmSq/sp
IPqHAG9Kju+D/UEKfJ/sL1JgfWBPTYH1iX0nhWqPm0QXSenA35dn907p6PtV
DO9N6ej7XQynSqWuZ5joZqlUfewnemEqvz6JfpnK0X9v2/BnqR19P5rh4amx
vbNPpcbzsT9Oo55nWdHfpXH0fJbhtVSeHTOto+frDNdIi8djT0zr6PslDV8P
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
mwvbK7t2LhfyG+w/qTz7tmct/8AunFtd72DRv+R2Yf8c+9/ceDx2yjwYb9lN
82C8Zi/I40J+nP0iwBXyYn/E/jWvC+sj7JN5/fogOks+/32L/jafHy9Frwlw
jPx+vBddPb96nn1E/5FfHW+C6Gv5XVj/Y+cr4MJ4j/1TARfGY+ydBVwYz7OT
FHRhPsD+qqAL+zfYswu6sL+A/bigqg9NJPeoWAjKGx5RyNXnk4ZPF3L1+arh
rIX9+i66g+fI+brhdX75aP8vxyri1993rlnE1fMVhicVUf/9R/8v3yii4mse
0QWKont4jlgf/X95t+eIfLfoZMVUfLtZSnKjYq6eHzI8t5i6vv2inxZz9fyT
4bLFsTx7SHF8/+xjxbH+sDOXwPLstp4j9+sYXllCvf+Jot8v6er5E8NVSuLx
2OMCfLmkq+dXDOcu5er7nQx39Ry538nwtlKuvl/IcMLSfv8nul5pP76KnuE5
cj+R4QcBLlFGtd9GovuX8ft/0QfLuHp+yXC6sqH9dVl83uy/y+L7Yr+l8myr
HF4v+7dy+D7Z58qp+D9YdPby+L7Z35fH62FvLI/vkx23QmjXroD9A/vPCni/
7NsVsP9gF/4M6wP7l89cPT9o+N/PXH0/peGUFV19v6ThphWhfzW8oCIej/0i
wBUq+f2P6F8rubAewT5ZCe+XnaWyC+sd7G8rq/eZRvSaAMew8HrZ1S1XH78Y
/sNy9fyW4WuWq+fHDOezXT3/avgnz5HjL8M7bRfWk9hJHFfPTxn+ylH1faro
2VSe/dhx9fyU4dJuaA9yXT3/ZfiI58jxreGM4S6sx7HbhOP1spdTeXbUKi6s
B7LdKi78Hhz79wBfrOLCeib706qunr8z/GNVV59/GN5S1W9PouNXc/XvFQ1/
Wc3V83+G/6rmtwfR96q5+n43w8Wq++1RdF/PYe/+id5f3YX1ZnaaGi6sV7Nb
1HD1/KPhxTXwfOzXNdT9RPyeG7tSTVefnxoeWdPV1+MNn/EcMd4Una2Wq+dH
DXespeLZGdHra+H52LE/x+Oxa32O5dmTPUd+L2n4ZoAL1sbrZfesjc+DvYfK
s5N/ge+D3fgLPB573heuvt/P8LMvsD6xy9XB+soeGuDjdbA+sz/80tX3Oxpu
96Wr5z8MrwpwtLp4PHbVuq6+vmB4vOfI75UMX/Ecud/WcJ56od2tnqvnbwxv
r+fq3yMZTlQf4ym7fn3V3puLnlkf+yv2w/qu/nsAhks2wP6YPaCBq+d3DB9q
gP0pO/1X2B+zW32F5dlLv8L+kh3W0NX3cxu2G+L7Yo9uiPWZfd5z5PqS4RyN
sDz7h0bYXtmbGmE8YH/QGOMJ+4sAT22M8ZJ9x3Nk/tVwkSauvl/McO8mqj5O
F723iavnfw2naurXB9HNmrr6+pXhhQF+2dTV15cMf9bMhd/LZA9v5sLvcbJP
NXP19TvDHzd34fdG2d81d/X8teG1zfF9smO2wHjNrtEC6xt7Ygv1vF6Lvk7H
Y+dvGdo/t8T2wN7VEuM5O+nXeDx2Q89h7/6VlDzna+wP2U+oPLtMK7we9uBW
2J+wj7bC/oydqbWKZzFEf9PahfEse0VrfF/s99pgvGKHt8HzscdSefalNvg8
2bm+wfrK7vINlmdv/caF8S47QdvQrutZG++xp7dVz2ut6PttXX0/ruHi7TBe
svu1w3jHPtAO4wE7bXs8Hrtle4y37CXtXX0/sOE37fF87Mrf4vWyR32L8ZB9
9lt1vraiP/kOy7M7fefq+xMMbwhwnA6uvn5p+PMOrv57BYandHD19VfDtzq4
+v4Ew4U6qvZSWHSvAP/T0W/volN08uOR6Cad/Hgjen4nV18fN/y8k6uv3xsu
/73f3opLHuZZ+71X9onv1fUeFf3RD35/KLr9DypebxC92nPk9x6Go3f225Po
ap399i56Qme/vYi+2lmdb5jovD+68Pfc2N09R4xXRO/wrP09VnbiLq7K94hu
0MWvr6JndVHtJbvoR138+iq6VNfQHthVtdcCog971v6eLjtDN7+/Et26m2qv
cUUv66be98NikqN0V/Honminu9+fiR5D5dkXuqv3dU10zp9UfTsvunOAN//k
13fR8X5W8fiO6Do/+/2l6Gk/q+e9XfTdABftoerDCtF9eqj2sEn0vh54PHbq
nni97OY9VXtYJXpRTz8eiH7V0483oiv2Uu97oegRvfz+WPTpXn68EZ31F1et
94ru8IuqTzNFr/sFz8eO1Rvvh12zNx6PPak3Ho99ozfeD7tAH3ze7B59sL6w
d/fB+sJO1hfvh92or98fiZ7bF+sb+2lfbM/ssv0wHrGH9PP7c9HH+qnjZRWd
ub+6n9Ki2/ZX8aCK6JX9VX9dTfT7A1R/V0d0lQEqnncSPW4A9lfsywPU9fYQ
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
+vzL8NV4qv61F503frg+fzTcPT7eL3uH58i/h2o4cQIsz26QAK+HPcuz9n0F
+1GCcH1+abhUwnB9fml4YEKsT+zDCf3+QXSGRFi/2a0Thevr24aXJQqH7zHZ
URKHw/cFbCdxuL6+bXhM4nB9fmX4QmKMP+ycSSA+G+6cJBz2s7I3e9b2t7Pj
JQ3tOp61/d/saUnD9fVrw3fpeOyiycJhfzG7T4D3JQvXxweGUycPh/3R7ObJ
w/Xxg+FFVJ79yrO2/5tdMUW4Pr4wPCJFuD4+Mnw6wFlThnYHz9rvdbDXBThW
qnB9fGa4Ziosz56UKlxfPzR8g8qzC6TG583ukTocfg+EvTt1uD6+NZwsTbi+
fmq4UZpwfXxueC6VZz/1HDl/MFw2bbi+fm94SFpVX2KIPpY2XJ8/Gc6cLlyf
vxlumy4cfq+EvZLKs99Pr/qr46KrBHhcevW8joq+7Fn7vQd27gyqvzgkumuG
cPi9B/a2DHg8dsKMqr6tEl0vwDM8a793wX6QUbWHmaJLZPLjvej+AT6YScXD
/2vszqN9qt4/gN9vJRKJRKTMs2SW+SJD6Oz9MYQyy5h5zpBLJJIhUzJESjIl
UhK5KZQhDUoiXSmZkhIZUr91umufu9/v51n38/Pfa9nrjHt89nM+d7rqewtH
/bHqXoVdfzZT9duF3f2OVP1vYdefJqluUsQ9j36q5xRx7WWE6pQi7n23VF26
qOtPnlA9rKi73yaqPwydOh1SnaVY+m5dLOovVb9SLOrvVP9aLOovVT9QHMuz
ny4e9XeqPyvu6kM21XlKRP2Z6sdLuPZ0g+o34/hqHDcomb5nlIz6o+qaD5d0
9fGq6mKl3Pu6rnpgKTwfe0spPB87Y2nXn1xQ3by0G6+Oq15UOuqPVZ8s7d73
GdUVy7j6clL1U2XwetiflsHnxc55H9YXdsf7XHvKrHrlfdF4p/piHCeWxfrI
fi6OvymL18sueL97H4VV97nfPa+Kqt8Nnbr/q/qGclie/XA5PB/7xXJ4P+zj
5bC9s8uWD9x8UfWT5bG/YX9M5dnZKgRuvqv60QrYX7Jfq+DGm5jq8xWwv2fX
qIj9OfuZiu55dFb9RUUcz9j5KqXvHnG8vhKOh+zrlXA8ZjeunL5nVXbPY7bq
o6FT4w2qS1YJYD7BHhLH26rg8diZqwYwn2C3quray0LVS6ri+dhnqgYwn2JX
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
duEmBvaz2f3i+L3QXryOfVNTA/kybNMUj8d+qanxv8cS/rmpe18jVJdrZmA/
nz0qjnc2M5CvwM7+sIF8HHa7h6P+RPXrob18FvYfDxuIF7JrBVie/WyA5dlf
BdF4q/pe4+43j+pexkC8kf22MRAvZP8bOu33bIWbWAPxAvYcayBewE6xeD/s
0jEDv5fOHhbai4eyP4zh+dhZmmN5duvm+DzYrzTH62X/GtrLZ2I/0MJAvJj9
dAsD8Wr2Zy0M5GOx87TE+sx+vCW2V/abLbE/Y19tif0pu0Er43+vLDyjFY5n
7MOtDMQ72MUewfGaPfAR438PL7zlEQPzCXbG1gbyYdjNW7vzzVS9qLWBeAn7
JJVnV2xjIF7CfqpN9D5Uf9rGwHyYnbOtgfkwu2NbA/vt7JVto/dZW/PFtgby
/dmJj6bv5x5111NO9TdUnl3wMQPrKXafxwzEU9jvPmYgnsK+oZ2BeA774XZY
nv1iOwPrOfbxdng97LLto/qq+snQ3nqa/XF7A/lA7GwdXH+/QfWjHQzk87Bf
62Agn4d9voOBfB52jY5uvL+hjuZnQv/3uDKr/qKjgXgMO18n9zzyqe4R2ou3
sNd3MhDPYV+n8uzGnaP6onpWZyzPPtrZ9UdlVZfsYiAexB4S2otnsbd1weOx
M3fF+2W3Cp06n9GcsKJrVN9VX6Dy7NqPGz8eKDz5cahPwgdCJ4T/klXn72bc
eld1727ReKl6Yzfjx6OEE7q7+tZOddPu0N6F53aH/kT4WHfjx6OFy/SA/lJ4
eBxv7xG1J9VZexr/ezDhNj2NH08SXkbl2eeoPLtaL+PHi4Qn9ILxSnh/r6g+
1dKctzeMp8LdQqfFk4TX9Y76Q9XXQqflgwk3fML43zMJz4zjI08YP54jXLxP
+h7Ux/jzFeGtfYwf7xHO1Nf48y3hFn2Nn88lvLgvHo99qq/x52vClfq5+tpB
9dh+xs9nEt4dx3f2N348SLhT/6g9q17V3/jfYwlf6m/8eJJw3QHueRZTPXWA
8eM1wgcHGPi9I3ahgQZ+b5Ddd6Dx5/PCmwa6/j719xTZNw5K38Eg48eLhOcP
Mv56RPinQcZfzwjfPxjLs0cOdvd7UPWOwcaP9wjfPgTPx35siPHjNcLL4/j3
IcaP5wjXHJq+J4X2/z4A+cs4vmdY1N5U9wzt/Z40e8Mw439vJfzPMOOvZ4Uf
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
WHe86aqvjbUQL2U3TLIQz2TPTLIQT2QfSbIQT2YXH2chHs0eNM7CfIK9dZyF
eB8703gL8XZ2i/EW5kPsxeMtxOvYp8ZbyFcmL6nyNJRnJ4972vr7NcJ7n7Z+
Ppdw7gnW/55RuMsE68+XhddMsP58mZ1yeYL193OF60+0/npBeNpE668XhA9N
tP5+s3CRZ6wf72MnDHjG+vvpwu/H8c2TrJ8vIBwL7a0n2QsnRe1Vc4FfJlk/
3idc4Vk4n/CYZ62/XhX+5Fm4H+E7Jlt/vclO7DDZ+utV4Tcmw/sQ/jN0WrxW
uM4UqA/CU6ZYf7+a3enrKVF/o7rAc+55jlH9xHPQHoTfec76+83spP9NtfA9
BrvZVDie8LypFvaj2T9OtbDfzL7v+XS9ZMTz7nkPUP1R6LT9ZuHbpll/P1y4
7TQsz341fSf/Ns36++XC1ae799ld9cTpWJ79eei09bTw3TOgP2endJ9h/Xxa
4bdmuPedQfXfM6y/XyPcaKb11+PCL8y0/n4RO+FoaO/3OtglX4DzCQ95AcYj
4W2hvd9TZGeela4LtJoFz0N4ySzrxxOEz4RO288TrjIbxnvhcaHT5hvsxL2z
rT9fEc49x/q/hyDcZY711/vCa+ZYfz4mfHmO9eeL7E7156bvaXOtv94VPjTX
+t9zCBeZZ/3vHdhJ/edZ+F6BvXmehfk6O8OLbrw5oNqGTgj/JWtesiB02npa
+ASVZ5efb/31iPDo+dZfjwjvmm/99TQ7OcdL1l9PCbd/ybW36apXUHn2hZes
v15kp9Re4OrzCNWTF1h/PSh8YIH117PC+Re68aqe6t4LsTw54Z2Frj40Uv2/
Ra49F1TdbJF73vlUz1sU9ceaC/y4KKrvqu9bnL5HLHb3c7265o8Wu/Z4UXPi
bS+7/uKq6rYvu/s5ovrVl11/fFD1by+78WCv6upL3P3s0Nxp4pKoP1T9+RL3
vrervnupu5/Nqrsvdc9rq+q30nfS30vheoQbveL6gymqX3jF9TezVX//StQe
VZdY5sazmZqXDI7jD5ZF/YXqW1519XWZ6pavwv0Kv/wqPG928ulX4X0LV34t
6g9VJ72G5dl7qDw5JddyuB7hzsuj/lz16uVQ34T/Wg7PQ7je69Be2AnTXof2
LHwoKp+7huYiK9x4WU51/xWuvy6tevMK7C/JBTK8Yf14qLB9w/WXnVUveMP1
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
ETptP0/49oSYP19ld3osdNp8Wnh56LT5tPDvodPm+8I1/5eukyb9LwbrHfaX
of97HMmq77khBt/Ds3uG9r5XY28InZZvL/xP6LS/V8pe8tCNMT8eIDw7dFq8
QfiH0Aej30sQLnVTzI/HCA+9yZWfpzk5OY5vzRDzf29K+JEM7n43ql4aOu33
KITPhk77Hkm46s0x//c62Snjb3b15ajqfaFT19Oq78oI9yPcNbT3vR454U0s
L3w1I9yPcINMUX1XPSN02vdSwodDe/EucoFit8T8v+crPPAWqI/CW26B+iic
MXPMjwcJN88cg3gVOXERlhc+mTkG8SR2xVuhPQo/dWvMz0djd/r01pj/vYxw
ziyuP/nv9yqFO8bxyiyuPvz3vY3wxSzQH7GTErPG4Hte9nNZ4XjC32SN+flw
wgVvi/nxLuE+t+Hx2O+G9uJd5CU3ZIv58Sjhh7NF/Y3qF7O55zFd9XEqzy57
O5ZnP3l7zM93YxfYeHsM8t/YCdljfjxKuGn2mB8vYifOjeNj2WN+PpRwmRwx
Px4kPDxHzM83Y3fajuWFs94R8+cTwm3uiNqj6mV3uOedTfU5Oh45qVrOGOwX
sSfkjGE+DHl/Trge4bx3wvWwl3S7M+bHw4TXhU7b7xK+dmcM82HIDXPF/Pkg
O3lmrhjkq7CP5IpBvgy7eO6Yny8uPCh3DPNf0Clbc8f8eJRwprvc/axQ3eKu
mD8fFl58V8yfbwufuisG+TLkhMp5XH/dT3VSnpifry+8J45z5cXjkQt0zhvz
41HCq/PC8YT/yhvz403C9e6O+eshduLzd8f89ZDwt3FcOF/67hfH76XvTjfd
4+pDCdXmHvc8Kqt+KXRavEr453tifj4AO6ncvTE/HiY86t6Yn48kvPPemL8e
Fs6eP+bnIwm3yx/z41XsJa/nj/nxAOE/8sf8eIBwrQIxiD+wn43jrwrEIJ5B
Tr63IJxPuFfBmB+PEn67YMzPNxH+t2DMz1dhpzQpFMN8GPKcQjE/H0c4pVDU
n6guXTgarzUnDC8c1ef/4l8bo/9fqjnp38L4/tlNisT8+InwnCJQ/4VTikD/
IFy6aMzPP2EvGVYU+l/hD4vC+CGcpVgM8j/ZrYvheEZOfLpYzN8fKLCyGNxf
gcPFoH4JFyvu7neV6oHFof4Kbyke8/P3hDOWgPfBTmweOu37MuFFJbB/Zp8s
EfPzN4UrloT3KfxUSRg/2J0+LQnPVzhnKRxP7i8F/VFKz1IxPz+NXeC1UtAe
hM+Xcu/rXs2JNUq78tlUP1M66p+qaf6idPQ+VecrE9UH1T3KuP5pnuZO68u4
/n2i6utlouepuvF9rn8aoXrWfa49tJX+P9VQEGY=
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[7, 8], 0.875], 
          NCache[
           Rational[1, 8], 0.125], 0.5]], 
        PointBox[CompressedData["
1:eJzs3WW0F1XbBvAjBhIS0qlIiCCIhHSDwJyZQUKQTmkJCQmBIyHdICHdndIh
3d3d3SkNr8N597Cva9/rzPs879fDF9dvudfMnh33jtnzP6lqNyv7Y5SQkJDU
WUNCvP/++6/HoVK3CuePfmRS8/z5C/3rBof/dbY3//5PXuR51Mh//yX5r1zq
yL/uEH9uiXPP8kkeekTl76XoM5695O0Pis5w9F9/0v1GmWWnRbc+qvJzTPRa
z5Ob/3vHC6JjHPvXb4pvu+gKnnft/PdfX9ETjqnr1RF90/PNMstSdm8sOufx
f13yXPt/H1l0F8//pK86YH2O/8qJT6j8pBZd54Rfn6LnnlDlEV30U8//Ps2N
Mk/ySi52UrW3B6IHeK7n/bss+rjnst4F4+aTnPZUxG5+CvPLXnlK1WdM0R+c
/tdec0v5vugypzE9e/RpzA/7iuc31Z1KdNYzeD12R88bHv1b4VFEbz2Dz8uO
dxbri13dcwuvw94VPeMs3o/98CzWJ7vgOdUfbojufQ7bC/vQOb+/iv70PJYX
u/F5zA97yXk/Hol+5wKWF9u+4MdD0cMvYHmyz1/A9sbOdBHbE7vtRfU86URv
8Ow9TvzMomNdUuVli650SZVHedGTL6n71RN955Jq77VE57mM8ZLd/bLKb1PR
ey+r/AwVnezKv/43Wj5KP1p0vSuqvS0SveAKjhfsF1dwPGOXuIrjGXvwVVUe
50SfuorjHTv9Nb+/iG55zW9P+SWvuYbjNTva9Yhd/rqqr4z5JY+7rtprGdHX
Pb8JVxVF57jxr73qqlpadNgNVR6VRO+44Y/nohPeVOlHiq51E9OzZ9/024vo
xzfVeL1YdJFbfn2K7ndLjecXRB+95ccT0alvq/KKXUBy09t+PBG93PMXbzqM
6Pfu+PFEdOk7Kh7mET3qjt8eRF+647cH0Vnu+vUhusNd1Z8miN58V/WHTaLj
3iv1v/O1LaKr3sP07Gn3/PFG9P176nmOiM5//1+HvPlXUHLP+3g99oH7/ngr
OuUDfzwT3fCBqs/bov8K8OsHfrwTbT3E/LCH/T+d8ZEfD0W3eYTPy14X4Jj/
4P3YFQM88R+/v4u+9Q+2B3aux1ie7K6P/XghevdjvB87yRNsz+y6T/x4Jnre
E9Ufd4p+9gT7E7v4U7wfe+BTTM8+8VSNV6tFp3um4s0+0S2eYXmwVz3D9s6O
+hzbC7vsc+zP7DGUnn31ObZndrYXqjyiFpTcKcDbXqh4/ayA5PgvMT/sGi/x
edgzX/rjiehHLzE/7EKvSqn1jug+r1R/SCn68Cu8HzvVa1XfSUQ3ee2Pl6KX
vlbxOJ3oKCEWXI/teNaehz3Cs/Y87AuU/j91u3csaM/sqZ7fzCcGiL7n+U1x
VhWdL4ql1sOie0RR6ZOL3u85PB7ml5ziXZX+pOgGnsPjhehFnsPjhehXnt/M
t+aLLvWeep4Jood6Dl+viD5D6dkZ3rf+tz+FiW4d4LWe37T3BqJjfGCp9Zzo
Cp7fxPvWoid41ub77Jue3+wnFBGdM6rKT3rRXTxr+53sXVHV/eKKTvyhul8U
0XUCPNezth/KfvqhBesxdrFo6nmuih4QzYL1Fvt4NMwPO210fF528+gW7Pey
V0bH52F/EAPzwy7jWVtvskfHwOuxrwQ4a0zV3xPll9wxJpYHe2tMFa9ii473
EZYHu7rn8P1W0TM8a+th9sOPVLy1RBeMhf2B3TsW9if2oVgqXjcV/WlsFa+a
i24cG+MRe4lnbT3MfieOKo9Jou04FqyX2cPjqPrYI/q85/D5huhMcf36KiC5
bVwL1qPsDXEtWG+SwxJ8rMaLEqJrfmzp61nDswL8z8cq3tcSXTgejLeG+8az
9Pmu4SPxVHktE/1ZfEtfTxj+KcDLAvxuAktfzxh2E1j6esXwyASWPh81fDGB
398LSv4qoaXPdwy3T2jp8zHDmxKq+kglOk6iiF0lkSrvXKKnBvhegPMlVu2h
tOgeiTE9e39i9byVRKdIovq7LbqB5/D5guhFSVR77Cj6VRIVD1qKLpXUUvMN
0UOT+v1F9Jmkfn8TnSEZpme3Tmbp83nDa5NhfbNjJFfPk010heTYntkTAnwz
uaWvlwznTIH9id0lhaXP9w3vSoH9mZ04paWv9w3XSYnxhj3Xc4j3b63opylV
vBguutgn1v/ON7qLHhDg45+o8uohOu2nKr9tRTf/1B9PRa/8VJVXddEfpPL7
k+gyqXC8YY9OpeKZJfpKKhxv2Fk/g/HQcMfP/Hgheutnqr4KiY6X2tL3kw1X
T63KK4voGZ7frgcNP0yt4snL/JILpvH7QwHJvdNY+n664UOUnv1pWtXfz+WX
3Ditpe/3G16S1tLXm4bfSafKa7poO52lz7cMD09n6e87DJ9Pp+q7vehMn1v6
etBw28/9/iB6A6Vnx0pv6fNRw5XSW/p82PDk9Ko9VBV9J72lv28ynOcLv72K
7v6F395F7/3C0ufzhpNl8McT0fUyYHr2ggyW/j7M8IsMlr4eNlwio6Wvpw0P
zmjp60XDpzKq/EQXnf5LS19PGW75paWvpwyv+dLS12uGo2XC/LDLZ7L09bbh
cZksfb1q+HomS38fazhHZnxedpjnt++DDe/IjNdjJ/zKjweia31l6e+TDc/+
Cu/HfvyVKs/1ootksf53vTpLdL8slv6+3fDRLP54Kjr115Z+3spw068t/TyA
4eWew+d7ot/L6vd30aWzqvKsJHpUVtXfw0Rf8vz2PILhLNks/byD4Q7okPnZ
LDi/wn6eTcXvOnnfjCfZVXnHf2Mnu//8ottnV+W/SfSm7H79i46TQ5XfyTe2
c/jlIXp4Dks/r2P4PF2PnekbFU+fiG4b4A0BjpVT5Tckn+RKOS39vA07pH9O
NR6uyCv5WE5/vBWdJheUv+FmuaD8Da/IZcF5Jvb7udXzrBX9XW7ML/vP3Jgf
9uXcqjz2if46jwXnndi/5rHgvBV7Sx6oD8Mf57XgvBu7Wl4/HuaVPD3AD/Ji
/2MXyKf6byrRvfL545nog/lUeRYX/Un+iN0ov6qvPKIX54d4ZjikgCrPQqJD
C+D92H8UsOA8KvscXY/9ZUELzpOxfymI+WWvL4jPy/6oEKZn/1AI4y97UiGI
54ZvU3p27sIRu1th1V57i95TWPWnQaKTFrHgPBv7xwDPL+L3d9HPi/j9XfS3
RS04b80e5Fl738E+SenZnxfz+1N+yT8Xs+B9Ant1MQved7A/LG7B+yJ2ueIq
XmURPdaztp/PvuZZe1/Fzv4tXo/d+VtMz97+raWvRwwnKGHB9wPsmiUwv+xZ
JfB+7H9KYH7ZhUta8D6G3bekBe9T2Ec8a+9j2J+VsuB9EPunUpY+Hze8rBS2
R/a7VsR2LWxv7JGUnn3RwudhfxVqwfs0dnvP4fMZ0Zs8a++72HFsvB67im3B
eVX2VNvS1yuG71F6dj7Hgved7B4O5oe938HnZadwMZ6wG7h4P/aiAL9yLX09
ZrhUaRVv9oke6jl8P1T0mdLqeVeLzvCdBeeR2a2/s/T1muG136n+0l50jDI4
HrErlFHPO1L0hDKWvl4yfLMMjofsnGUt/J6G3KWsBfMJ9q6yOF6zE5ez4Hsc
dp1yfjwUPTfAT8tZMB9kFytvwXyVPaC8Bd9bsI8HOO33lr7eMdz8ewvWM+yV
3/vjoegPKvjjiegynsPXp6JHV8D8sq9UsGC+zc5a0YL1ALtjRbwee6vv8PUU
O94Plr4eNVz9B7+/i55B6dkPf1Dtce6b9Wj6Smp8rCi6ZSW/fYteU8nvH6Kj
Vcb07PKVMT17nGdtP4F9wnP4+y/R6ar4/fuNa1fxx0vRc6qo8sks+kkVfzzJ
I7loVdXel0kOaVtV9feoeSVvqKqeL4foWNXg+QxXqqbi6bM8kidXU/WbKK/k
O9VUfykvOk91VV7FRXevbun7RYb3Vof6MJyshnqeeqLr1cD07AU1VLxoKfpF
DcwPu0RNP56IHlwTy5t9qibWFzt9LT+eiG5Zy4+XeSSvqaXa423R0Wpbar9D
dPnaeD32uNrYHtjX6XrsHHVUeVwWHRbgHZ7Dz9uITlhX1dck0bXqYnmwZ9f1
46Hox3UxP+wiP2J9sft5Dl+viD76I8QTw6nrYXtiN63nj+eil9fzx0vR79XH
/swuXR/ir+FR9bG/sC/Vx/7GztJAlVdf0R0aqP7WUfTmBiredBcdt6Gl7wcb
rtpQxeuxoqc1tGA/kn2/oerPi0Xnb2TB96Lsno1wvGYfaKTK84LolI0t2G9l
N2xswXyL/ZdnbT7Cft3Ygv1CttXEgvkke1gTC+Zj7LNNLJgvszP+ZMF8mN3m
J9VebNHrfrJgv40ds6kF83l2xaYW7FexJzZV7XmR6FtN/fYkOlczC9ZT7K7N
VDydL3p3MwvWu+wkzS1Y77HrNrdgP4A9r7kqjxuinzW3YL+DXbwFXo89sIUF
+yHsEy0sWO+y0/3sjzeiWwR41c9YXuyoLfF52GVbWrAfwB5D6f9TZ2uFz8vu
1MqC/Qz2tlYWfA/Mjt8a2wO7RoBntrZgvc9+1Brvxy7UBq/H7hPgw20s/X2x
4VS/YH9hN/nFgv0O9tIAR2lrwX4022mL8YA9oi3GE/aFthZ8T87O3E6NB5NE
t2tn6e+7DW9sZ+nvqw3Hbm/BfgW7cns13tQTPaW9Be9T2HfbY7xl5+2A8Zz9
ewfVHsqI3tcBxyN28l8t2G9g1/8Vx0v2wl9xPGS//BXHU3bJjjies4d0tOB9
J/t0Rwv2C9hfdLLgfSu7VScL5jPsvzvh/djRO1sw32F/39lvz2/cpbM/foje
1Vk9f/jvx7ATh1mwf8OuE2bB/gx7boCfhlmwf8Mu9psF8yv2gN8smL+xjwc4
bZeI3byLBe+32Su7YPthf9AV2we7TFdL3w8yPDrAV7qq/AwSnbWbH/9Ed+ym
nnek6K3dVHuZJTpedz8+iq7eXdXXVNEzKD37YXcL1h/sgr9bsH5h9/Ycfn5X
9KHfLVhfsT/tofpne9GNe1iwvmIv8fx2P8/wOz0t2D9h2z0t2H9hD++J12Of
p/TsTL3U8+QR3baXBetL9oZeqr1UEh2rt6XvNxqu1Buvx57cG8uTfce/Xpjo
PH0wPbt7H2wP7L2etfUpO1lf7G/sen2xPbMX9LXgfBD7RV/sb+wS/bC/sgf3
w/GAfaof9hd2+v7YX9kt+2M8Ya/pj/llRxuA4x+7/ACM9+xxA3B8Z18foMbP
90XnGGjB/IMdNtCC8y3sHQMteD/CTjjIgvUzu9YgvB57doAfD7LgfA67yGAL
5ofsfoMtmP+xjw624PwJO/WQiN10iN9eRC8fYsH8m/3eULweu7Rnbf3DHjXU
gvUJ+5JnbX3HzjIsYnfwrL1/Zm8OcNw/LDg/wK76B6ZnT/vDgvUr+z6lZ+cf
bsH5DHbP4ao9ZBR9YLjfX0SnHGHB+pzd0Hf4+RT2XyP8/iL69Qh1vzKirZEW
/H4UOazfSD+eiz460h/vRacepdpTF9FNPb/9/tbw8lH+eCX6vT8t+P6DXfpP
v72LHuX57e8TGL70pz8eic4y2h9PRHcI8ObRWJ7suGP8/iy66hjML3vaGCxv
9v0x/ngqOv9YvB+7Z4APjMXyYqcch/XJbjjOHw9F/zUO78d+PU71hx6irfF4
P/aw8Vhe7LPj8XrsjBNUPGwgus0E6I+G102w4PsbdsyJqj1VEl1xogXfx7An
TsTrsW9RenauSao8iojuGuDdAU4yGeKZ4bqTMb/seZMhXhp+5vnt+UbDxadY
8P0Pe+AUTM8+MQXGC8PppsJ4YLjFVNUfU4teRenZUadZ6vs/0WWnYX7YY6bB
eGT4Kl2PnW06jNeGO0234Psg9rbpqj1EER1/RsSuMcPS9/cNz5xh6e8PDD/y
/HY+YLjQTEs/P2e4z0xLP/9m+PBMC75PYqeapepzn+gmAV46y9L3dw1Hma2e
Z5loZ7al798aHuH57XzV8IXZFnz/xM48x4+notvNwfTsjXPU87QUHXuupc+H
DVeei+nZU+Za+nyfHfLEs7b/zC46z4L1Brv/PAveP7KPzbNgf5qdZr4F6yl2
s/l4P/YKz9r3Aez3F1iwnmJ/twDTs/9cgPlhX15gwX4q++uFqjwzi/7Vs7Zf
yt6yEPPD/ngR3o9dbRFejz19kWoPGUU/WIT5ZRf4C8uT3SvABwP8yeKI3Wix
6g9lRC9ejO2NHbLEgvcf7NAleD32H0uwPbDPedbOv7K/XBqxf1mqxqOqotcv
VfVdR/RHyyAeGP5hmQXvr9iTPGvv99i3/estEp17uQXv39ndlluwXmfvWQ7j
meGkK2C8MfxjgOevsOD9Kfu5Z20/gP3tShhPDQ9aacF6mH1ypQXrefbnqyz4
/oL98yq/PYhevcrS56OGP1xtwfcfOVar/LcVHbba0tfHhnestvTv+Q0nXGPB
71Wxa61R/a+v6Nme365PDD9eY+nrJ8NF/rbg9/LY/TxrvxfNPvq3pa//DKde
i/djN12L5c9evtaC733Y763D+meXXmfp83fDo9ap+swl+hJdj51lvQW/Z8bu
sB7zy97sWdt/YsfdYOnzb8NVAzzt/+n8G1V9JxHdcyP2X/YBz9r3PuyUmyJ2
w01YHuy/NmF/Zb/eZMH+HdvajOnZwzZjfbPPbrZgv42dcQvej91mC6Znr9uC
7YUdcytej11xK6ZnT9yK/Y19i67HzrUNy4vddRvej717G/YXdpLtlr4+Nlx3
O/ZX9rwAP/OsfW/JLr4jYg/cgflhn9iBz8NOtxPzw26xE8ubvWqnBfvH7Ki7
LNg/ZpfdZen7K4bH7ML2wL66S5VHLdHZdluwP83utBvLg71tN/YHdvw9WB/s
Gnswv+yZe7C82I/24HjBLrQX64PdZy+2B/bhvRhP2an2Wfr+h+Em+yw4z8he
ug/jMTvKfkvfXzLs7Ldg/sYe4Vmbn7EvUHp25gMWzF/Z7Q5YcF6SvdGzdh6O
HfugBfNndmXP2nk79pSDFrxfY989aMH8n533kKXvTxj+/ZCq75Gi91F6dvLD
FuxPsOsftvT9F8MLD1vwvSP7ZYBLHlH13V70EM/aeUL26SOYH/YXRy1Yf7Fb
edben7L/PorXY0c/huXF/v6YBetD9vhjWB7sG5Se/c1xC9an7N+OY37YO4/j
9diJTmB6du0TFqzf2XNOWLB/xX5ywoL9A3bRkxact2f3P2nB+QD2sZMW7K+w
05yycL+M3OwUXo+94pQF+wfs909jebC/O23B/gj7T0rPvkzp2V+fwfpi/3rG
gv0R9pYzWB/sj8/i9djVzmJ7Yk/3rJ2vYD84i/2NXeAc9md2r3MY79gHz2F/
Y39yXo0ns0Q3Oo/xlr2Y0rNDLmB+2KEXMD/sPy6o+1USfe6Cag99RX95EeMp
+5eLGA/Z6yk9+6NLlv5+wPAPl/B52ZMuYXth3/asnQdn576M6dndLmN/Ze+5
jO2ZnfQKtlf2j1ewv7LnB/j5FYyX7G+vRuxBV7E9sE9exXjK/vyaBfvb7J+v
WXA+jL36mrpfEtEfXlftJb7octfxeuyx11V/iC762nUVL6KIzn7DgvPT7M43
VH3EFb39Bt6PneCmBe8P2DU9a+8fyGELb0I8N/zyJtSn4ZK3VHtMJ3rILUvf
/zd8+haMh4a/uA3t3XCr29DfDP99G8Ybw9HvYHr29wEefwf6k+Ebdyx9vmn4
m7sw3hn+zfPb+YDhnXexPtiJ7uH12LXvWfC+kT3nnmqvYaKf3MP6YBe9D+Ol
4f738X7sY/ctfb5pOM0DrA92swCveIDPE+lIRzrSkY50pCMd6UhHOtKRjnSk
Ix3pSEc60pGOdKQjHelIRzrSkY50pCMd6UhHOtKRjnSkIx3pSEc60pGOdKQj
HelIRzrSkY50pCMd6UhHOtKRjnSkIx3pSEc60pGOdKQjHelIRzrSkY50pCMd
6UhHOtKRjvR/43p/h+q/D214gee3vy9t+IXnt3/fwHCJtaHw+9HswQE+5Vn7
fWp2+nWh8PvG7Jaetd93Zq9ZFwq/H8yOtj4Ufl+ZXd6zVp7scZ613zdmX18f
Cn/Plp1jQyj8PVp2mOe3vx9veMcGfB52wo1YHuxanrXfb2bP9qz9PjP7cYCL
bAqF319m99uE92Mf3YTlwU69ORT+3i676WYsD/byzaH67+8bfm8LXo9degs+
L3uUn76M6EtbsD2zs2zF/LI7bMXrsTdvxeux425T7bmQ6KoBnuZZ+3139v1t
mB92/u2h8Pvv7J7bQ/Xfxzd8YHuo/vv7hlPuCNV/399wwx3qfg/ySv5rB16P
/ZrSs62dqr4uiB4W4LOew/8equiMu1R9HhPdZpeKtztFr9ul4v120TF3R+yK
u1W8XiF64m7VHhaLvrXbj4eic+0JVX//Q3TXPX68Fb17jx9vRCfZq8qjr+i6
e/F52PP2qng1VfSzvX68EF18Hz4ve6DnN39/o6PoE/vUeNVDdLr9eD92i/14
Pfaq/Vie7KgHMD27bIDHHMD6YF/1HP73/0RnO+jHM9GdPIf/fT7R2wIc/5Af
70TXOKTKo7jomYdUe8kj+tEhP16KLnRYjdepRPc57MdL0Yc9h//9S9GpjoSq
v68quskRVR6xRS8NcJSjfrwU7Xh+8/fp7uaRPMJz+N/nE30hwJmPqfH8tuh2
x1R5PxK98Zgqr6uiYx/H9OzKx/F52VOO+/E8j+S7x1U8uSw67wlVXydF/34C
88PeF+DkJ/F+7Ponsb7YC09iebNfnlT9OVFeySVPYXr2kFOYnn36lD/ei/7i
NPYndqvT2F/Yf5/G+7Gjn8H+yP7+jCrPdKLHn8H8sG9QevY3Z1W8zS/6t7MY
b9g7z6r2mFJ0onMRu3aA55zDeMF+cg6fl130fMTufx77G/vYeezP7DQXMD/s
Zhewv7BXXFDjcdS8kt+/iPGK/d1FzC/7z4tqPHmWR/Lli9je2V9fClV/H0v0
rwHecgn7O/vjy/g87GqXMT17+mW8H/vBZexv7AJXVHs4l0dyrytYnuyDV/B6
7E+uYntgN/Ic/vfNRC++iv2VHXIN4w071HOI96+Q6D8CfM5z+HpS9JfXQ2E+
yf7leijM59jrPYf//ULRH91Q8XCR6B9uqPyuFT3pRiisJ9i3b6j2clB07pt+
exTd7WYo7Hex99wMhf0UdtJbobCfwP7Rs7YeZs+/FQr7Ueznt0Jhvc3+9nYo
7KexB90Ohf1A9snbofrf5zP8+Z1QWA+zf74TCutt9uo7WN7sD++q+g7JJ7nc
XT9e5JU89m4orMfZ1+6q/nZZdPZ7+Dzszp61/VL29nt+PM4rOcH9UNjPYNe8
Hwp/X4896z7WB/uf+6Gwn8Iu/ACfh933AV6PfeQBlhf7s4fYX9k/PcT6Zi97
iPXFfvdRKOx3sN1HmJ498lEo7LewL3oO//vfor/6JxT2Q9jt/8F4xt70D8Yr
dpzH6n6zRFd5jOnZUx+HwnqffS/A+Z5gvG/4BMefKU8w3m944sdH0bGehsL6
mF3paSis79mTn4bC/JV95ymOb+w8z0Jh/4Ld/Vko7N+w9z4Lhf0fdrLnobB/
xK73XOUnTPSC56p+G4t+EeASL3D8Zg9+geXNPvXCH19Ep3+J9c9u+TIU5jfs
NS9DYf3IjvYqFObf7PIBHudZWz+zr7/C+7FzvI7YYa/9+CV6x2u//4lOGGKr
9iS6luc388cBomd7Dm9Poh97flNdE0QXecdW/VV0P8/h/UH0Uc/h+3OiU0dR
96slumkUvB97OaVnv/eureZPokt7Dv97zaJHUXr2pXdVfdQTneU9W/09VdEd
ArzZc/j+pOi47+P92FUDPM3zm/ZeXfT991V7sUXn/wDzy+7pOTxeiT7wAdYX
O2VUW40nohtGxfbM/stz+P646NdRVX3OFW19iOnZwz7E9OyzAc4YzYZ4wG4T
4HXRVHkfFB0zOqZnV/QcPh6JnhjdhnjIvkXXY+eKgenZXWPYsD/H3h3Dhv0J
dpKYNuwPsOvGxOux58W0Yf3NfhbThv0XdvGPMD174Ec2zGfYJz6yYb7BThfL
hv0pdotYNoy37FWx/P4oOmpsG94vsMvGxuuxx8T246Xoq7H9eCk6Wxwb5hvs
TnEwPXtbHLwfO35cG+an7BpxbZhvsWfGtWG+x37k+c10ZrToQh/bMH9n9/nY
hvUN+7DnN+ur9aJTxbNh/cJuEs+G9Ql7qWdtfcKOEt+G9R3biW/D+o49Ir7f
nv8rZ05gw/kfdrsENpxvYG9MYMP+yX/qygn98VL0lIQ2/L129t2ENpxfYedN
5Lc30b8HeF8iG873sJMntmF/iF0/sQ3nT9gLA/wysQ1/L55dMgmWF3tIEswP
+3QSbA/sL5LasH/FbpUUy4P9t+fw9aDo6Mnwfuzvk2F69vgA30iG+WV/kzxi
/5Ycn4e9M7kN53fYiVKoeFZcdO0UWN/sOSlsOF/FfpJC3W+k6KIpbTgfxe7v
+c18YazoYyn9eC86zSd+PBbd7BPVHqeKXvGJ6s8rRL//qR/PRX9H7vipKt/3
80veGuB4qVT7eZlPcvUAz/Ac/j4iv+SHAS74maqfuKJ7ew6f//xX/jR1xG6c
WtVfctFLUqv4n1r0O2lstd8q2vYcvj8hengaLE/2+TSqfTwTnSkttl9227TY
/tgb0mL/YsdKh+MPu1I6Fb/CRE9Oh/GZfScdjr/sPJ/b8L6A3T3Aez+3Yb+f
nSy9Dfvh7HrpbZifsBekt2F+w36R3ob3PewSX9gwf2IP/sKG+Rf71BeqvZ4U
nT6DDe8j2C0DvCYDPg87WkYbzgOyy2fE/LLHBfh6Riwvdo4vVX1uEh32pQ3z
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
oscE+OpfOJ6wsy3G8YLdKcDbFuN4xI6/xIb1PLvGEhxv2TOX2DAfYD/y/PZ9
neFCS239fbvhPkttmO+wDy+1YT7DTrXMhvkUu8kyW3+fbnhpgKMsx/ywneWY
H/aI5Xg99oXlNsxH2ZlXROx2K/z+KnrjChvmw+zYK21Yz7IrB3jKSlt/32z4
7kob1jPsvKsi9u+rbFiPsvdh+pAPVqvyKSO6zGrVv1uLHu2nHyT6ymrVvqqL
zrrG71+iO67B9Oyta/zxXXS8v/3yFV39bxX/Doqe8bcqr7WiH3oOnz+JLrjW
j8+ie6/F67EPrfXbr+hP12F6duN1Kr7OFb1kHeaX/c56f3wUbXsOX1+KHr5e
3e+26PPrVX1fFZ1pg9//RLfdoNrDadEbNmB5sWNtxOdlV9qI9cWevBHvx76z
EdsbO88mzA+7+ybMD3vvJtUfF4tOttmPb6LrbVbj0zLRCzb78Vv0C8/h80PR
Jbb444vowVswXrBPbVHtOUx0+q0Ru+VWlZ/GotdsxXjGjrZNlVdH0eW3qfKo
JHrcNn/8F33dc/j+gOgc2yN22HZ8HvaO7ao/1hOdcIetvh8XXWuHaq8VRc/e
gflhP96B8ZpdZCeWF7uf5/D1v+ijnsPfj4tOvUtdL4nopp7f7m8aXh7g93bD
+Gq49G5Mzx7l+e3+ueFLu219/9Fwlj22vn9puMMeG87HsTfvwfyw4+619f1L
w1X32vr+pOFpe219/mP4foDz77P1+Zvhnvv88Uj0gX02nF9kp9xvw/lIdsP9
fjwT/VeAXwfYOmDr80/Dww7g87DPHsDnYWc8iOnZbQ7a+vzc8LqDtr4+MBzz
UMSueMiG84fsiYds/f2t4VuHbH3/1XCuwxG762Ebzi+zd1N6dpIjNpyPZNc9
YsP5afa8I3g99jPP2vlJdvGjmJ490LN2vpx9wrN2/pud7ljEbnEM88NedQyf
lx31uK2/Pzdc9jjWN3vMcSxv9tXjtr6/bjjbCXwedqcTmJ697YStr98Nxz+J
/Zld46QN59vZM09if2U/OonxlF3oFMYrdp9Ttv7+xfDhUxhv2alOYzxiNzlt
w/l09tIARzmD4w3b8Rzy5p/oEZSefeEMjsfszGdt/f2+4XZnVXtIJXrjWVWe
uUTHPqf6YxbRlc+p/JQQPeWcDfMl9t1zNszn2HnP2zAfZP9+3o/Hovedt2G9
yE5+Qd1vquj6nrX1CHvhBbwe+6VnbT3PLnkxYg+5aOvrnbAtF1X+Pigk+eNL
tr7+NFztkq2vXw1Pv6Tq/4noB3Q9doHLeD12r8uYX/bBy377Fv3JFVX/MUQ3
8vxmfZlB9OIrqv0XFh1yVY1P2USHBviPq6p/FxJ97qpqn6VFf3lNlfcPon+5
5vcv0euv+eOb6I+uR+wfAjzpumqfdUTfDnDuG/g87G4B3nMDn5ed9Katfv9Z
9I83sbzZ82+q9hQq+vlNNb4VF/3tLcwPe9AtVZ75RJ+8pcqrqOSQr25Dfgy3
D/Cm26q91xId544af2qLrnIH07OnUnr2Pc9v5q+VRee7C/VtuMdd1d/Kid5/
F+rbcIp7UN+GG9yDeGB40T2or0C/uqfun/2NS923/3f+l1P00PuYPshnPL+Z
j335xhkeqPaSWnTrB6o+Pvs/ee0D1X4/Fx3joYrf6d64guc384M4/ydPeKjq
P6nomw/V+BHrjXM+UvUd7//kLo9U/I8uetcjGN8MJ/5H5feu6Dr/YHr23H9s
2G9lP/0HxkfDxR7bsB/NHvDYhv1O9vHHKr/zRad9gunZzT1r+4XslU9s2K9i
f/DU1s+HGi7z1Ib5MHv0Uxvmw+wrnrX5PjvrM3W9taI7PrNhP4m99ZkN8312
vOe2fn7NcPXnNszX2TOeY37ZD5/bsB5iF3xhw/er7N4v8Hk2+/+/r+i4L9Xz
TRVd1bP2vSd72ksVLyeIvv9SPX8P0flf2bD+Zvd8Zevvuw0feGXD+ped8nXE
bvjahvU5+6/XNuwfsF+/VvHFEm2FOJBf9jDP4esv0Wc9h//eueiM7zhwP3Yb
z9r3qux1lJ4dM4qjn2cwXNGz9nsK7Imetd9jYN+Kosojquhc7zrwewzsrp61
73XZu9/F67GTvOfA9xvsuu/h/djzKD372XuYH3bx97E82QPfx/bCPvG+o5+H
NJzuA6xPdosPMD/sVZ61/S921KgO9Ad2Wc/6fhl5TFQH9qfYVz1r+4fsbB/i
9didPnQg3rC3edb2d9nxozn6eV/DNTxr+0vsmZ617/XZj6I58H6AXSi6A+MP
u49nLd6zD0d34P0KO1UMRz/PbbhJDAfe77CXxnBg/4cdJaYD7+fYToBHxPTj
negLlJ6d+SMH3v+x233kwPkR9saP/PYoOnYsB96/sivHUvnpLnpKgO961t5P
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
DY/y/HY9bvjSJy6sJ9hZPnX19+eGO3zq6ushw5s/dfX1rOG4qVx9vWW4airV
3qaKnpbK1dfDhu+ncvX1quH8n/n9XXTPz1x9vWj4wGf4POyUqbE82A1Tu/r3
H4b/Su3q32cYfp3ajyeirTRYX+xhafB67LNpXH09bzhjWhfWq+w2aTE/7HVp
VbwYLTpmOpXfxqIrpvPHA9ET06n6bC/6VoBzfa6ep7vorp+r+u4tevfn/ngu
Okl6f7wTXTe9am+DRM9Lj8/LfpYe88Mu/gU+L3vgF1je7BOew89/iE6XwVXr
PdEtMqjyqCR6VQZ/vBEdNaMa70qILptRlVcZ0WMyYn7ZVzOqeFhHdLYv1fPk
EN3pS9Veiove9iXmlx0/k4oH+UXXyITXY8/MhPlhPwpwocwRu09mvB/7MKVn
p/oKn4fdxHOI96+Q6KVfYX2yo2RR9ZlZtJNF9bfyokdkwfpmXwhw5q/VeFZL
dLuvsT+wN36N7ZEdO6uKl1X/K0/JivGEfTcr5pedNxs+L/v3bHg/9r5sGE/Y
ybNH7PrZVXsIE73Qc/j3N6JfZsfyZJfMge2JPSQHxiv26RyYX/YX32B5slt9
g+XF/vsbfB5yyMc54XqGq+WE5zU8PSfUp+EHlJ5dIBe0J8O9cmF69sFc0B8N
f5Ib07Mb5Ybx0PDi3NBeDIfkgfHQcGgeqE/Df+SB8dbwOUrP/jIv3o/9S16s
b/Z6z+HnH0V/lO//50n5sD7Zt/NhebNz58f07G6e374vMbzH89v1gOGkBVx4
H8X+sYBqz5NEzy+A12M/97zs7ffX7G8LuvD9O3tQQVdfbxg+WdDV54uGPy/k
wvs49s+FXPg+n72a0rM/LOzq6x3D5Qq78L6SPbYwPi/7WmEsb3b2Iljf7M4B
3l7EhfeZ7ARFsTzZNYtiPGDPKurq6wHD/xTFeMkuXAzjGbtvMYwH7CPFMN6x
PyuO92P/VBzHA/Yyz2/no4bf/Rbzw3a/hfHK8MhvYTw1fPFbvB/7qxKqv+QR
3b6EiofZRG8qofKbUXSckq4+XzRcpaQqr1Sip5ZU7SVE9L0A5yul4smTvJJ7
lFL5vSF6fykVb3eKTmGp55kruoHlxzvRizyH76eLfmWp8n4gulSo6m9J8kke
Gurq833DZ0KxPtgZbGxv7NY2tnf2Whv7CzuGg/GAXcHB+7EnOHg99k0H+zM7
p+vq6wXDXVwX5gPsXS6Ot+zEpV2Yr7DrlHb1/QrDc0vj/dhPS2O8ZRf7Dp+X
PeA7F+ZD7OPf4fOw05bBeMVu7lmb77BXlsH8sD8oi+MRu0xZLC/26LJ4P/aV
AGcth8/L7lgOxyv21nIuzNfY8cpje2BXL+/q+3mGZ5TH52U/LI/lxS74vQvz
BXbv7zE9+9D3mB/2pxUiduMKLswn2Es8a/Md9jsVXfj9H7Zd0YX5Fnt4RRfm
c+zzFV19P/c/dtsfXJjPsTf8gPlhx6rkwnySXakS5pc9uZIL82n2nUoqniwS
naeyC/N9dvfKmF/23sqYX3ayKlhe7HpVXDgfxl5QxdXf5xh+EeASVV0478ge
7Fk7z8k+VdWF85Ts9NXweuyW1Vw478leU83V34cZjlYdr8cu71k770oOG17d
hfNk7PN4PcOZakB+DbetgenZG2pAeRqOVdOF933sSjXxediTa7pwXo19p6aK
NxlF56nlwnkxdvdaqj1XEr23luoPZUQnq+3CeTN2vdr+eCh6QW0XzjuwX9R2
4X00u0Qdf7wTPbiOC++72ac8a+/L2enruvA+nt2yrgvnudhr6rr4/Qw52o+u
/r2C4fIBHvejC+fN2Nd/xPywc9Tz45noMM/aeRv2jnp4P3bC+ng9dq0Az66P
92M/rq/q44LoIg1c/J6G3C/ARxuo/hR+no6duqEL58nYTRvi9djLG7pwnov9
XiNX/30tw6Ubqf6UWfSoRi5878S+1EiVdxLRWRrj/dgdPIe8+Sd6c2MsD3bc
Ji58b8Su2kTFm/DzgOxpTfB67PtNXDivxs7/E7YXds8AH/gJ65Odsqkq7/C/
n8Ru2NQfT0T/5flNdZ0U/bopljfbaobp2cOaYX9in22G8YqdsTn2B3ab5ng/
9rrmeD92zBaqvveJrthC3W+W6IktXDgvxb7VwoXzbOxcP2N6dtefcbxi7w5w
kpYu/D0Ndt2W6nkHiZ7XEsdT9rOWOB6zi7dy4bwVe2ArF+YT7BOt/HglOl1r
F86Ls1u09uON6FWtVX9LLTpqG0zPLtvGhfNa7DFtML/sq21cmE+ys/3iwnyP
3SnA237B67Hjt3XhvBe7RoBntnXhPBn7UVtXX+8YLtTOhfNK7D7tXDivxT7s
WTsPxE7VPmI3ae/CeSP2Us9v13uGo3Rw9f0kw45n7Xsc9ghKz77QwYX3zezM
v7pw3obdzrN2Xoe98VcX3hezY3d04f0vu3JHdT1b9JSOLrzvZt/t6ML7fHbe
Tng/9u+dXDhPwd7XyYXzIuzknTE9u35nfB72Qs/aeSH2ywCXDHP19wWGh4Th
/dinw1x4n8/+4jcXzluxWwX4798wv+zoXSL2912wvtjjPWvnUdg3urj6fqPh
b7pie2b/1hX7G3unZ+28IDtRN4xX7NrdMB6x53TDeMl+0g3HG3bR7hjP2f27
u3DemX2suwvreXaa33G8ZDf7Hcd79orfXfjeiv1+DxfmE+zvergwn2L/2cOF
9TD7cg8X1oPsr3u6MJ9m/9rThfkse0tPF9Yj7I97qfrMJbpaL9Vei4ie3guv
x37Qy4X1GrtAbxd+L4Ldq7dfn6IP9nbh9yjYn/TB67Eb9fHbg+jFnt/+fqnh
kL5+vBId2tePF6L/6KvKe5noc33V8ywW/WU/ld/bon/p57eHgpLX93P137cx
/FF/v7+L/qG/irfPRE/q77dX0bfpeuzcA/B52N0GYH7ZewZgfthJB6r28Ob3
jwz/OFD1x+ii5w/E8mQ/D/C3g1R/iiJ60CDMD/vkIDVexBT9+WC8H/vnwVge
7NWDMT/sD4dE7HJD8H7ssUPwfuxrlJ6dfSimZ3cO8PYAJxiG7ZFdc5iK9zdE
zxqG7Z39zzB/PBZd+A/1vGtF9/0D4wX7iGft7w2yPxvuj1eifxqu+tNU0cuG
4/XY745w4e8lst0Rqr32FT1yhKqP9qIvjsB4yv5qJMZjdnvP2t9XZ28aieMB
O86oiF1lFI6X7Kme3/6+nuF7o9Tz5hGd708X9iPZPf50YT+Pvf9PF/bj2ClG
R+wGo13Yz2IvGu3CfjX71WgXvidmlxrjwn4le+gYfF72mTEuzDfYGca6MB9g
tx7rwn4we+1YF+ZL7BjjMD27gmfte2b2hHEuzKfYN8dhebBzjsf6YncZj9dj
7xqP12MnnuDC99zsOhNc2I9mzw3wU7oeu9hEF+a77AETMb/s4xNd2E9np52E
7ZndfJKKNw9Er/Ss7QezP5jswvsmdhnP4ecdRI+e7ML3suwrAc46xYX9XHZH
z9r34OytU1xYz7DjTY3Y1ae6sF/MnjHVhf1g9kO6HrvgNFUfi0T3nobp2YcC
/Ol0F96XshtPx/JkL5mOz8t+Z0bEtmdgfbKHB/g8XY+daSaWF7vtTGwP7A2U
nh1rlgvva9mVZmF+2ZNnqfFwheg7szA/7DyzXVhvs7vPVvFivei9szG/7GRz
MD273hyMB+wFc1x4n8N+MceF90XsEnNdeJ/GHjwXx2P2qbkYz9jp50XslvMw
nrLXzMN4zo42P2KXn4/xnj3O85vpYnzR1wOcYwGOh+ywBZievWOBC/sF7IQL
VX2++fsmYUUX+vFBdP+FfvsXfWyhq+8PhLxeqOJRddHWIri+4WGLVHm++Xu7
IfsWufr6hB0W/y9Vv21F1/CszY/ZM/+C+xl+RNdjF1qs2n9V0X0W4/3YhwOc
aomr/z0qw008a+sX9tIlLqzf2FGW+vFXtLMU6tfwCM/a+pN9YakL60925mUu
rN/Z7Za5sD5mbwxw7OV4PXbl5S7sr7CnLHdh/4d9d7kff0TnXYH5Yf++QpV3
+oKS961Q18smOvlKVd+26Por8XrshQF+uRLvxy65SsXvJKKHrPLjl+jTq1zY
X2J/sVrFj5SiW63G67H/DnD0NSqeZRH9/Rp8XvZ4Ss++sUa1l8yiv/kb07N/
+xufl73zb6wvdqK1eD127bUq/qYSPWct5pf9ZK0L+1PsouuwPtn912F69jFK
z06zHvsru9l67O/sFeuxP7Lf34D5YX+3Afs7+88NGC/YlwP89UbML/vXjZgf
9paNeD32x5tUezotutomvB57+ibV34+JfrAJ4z27wGYcz9m9NuN4wz7oOXx9
KvqTLSo/I0U32uLCfIa92LO2f8gO2araYw/RoVtd2D9k/7EVx3v2ua0qP81F
f7nNhfkG+5dteD/2+m2uPj8z/NF2F+aP7B+2q3haT/Sk7S7sT7Fvb3dh/4ud
e4cL+5fsbp5DvH+FRO/Z4cL+JjvpThfm1+wfd7qwP8aeH+DnO13Y/2N/u8uF
/TH2oF0u7C+yT+7C52F/vhvTs3/e7cL+IHv1bnwe9od7XNjfZZfbg8/LHrsH
n5d9bY8L+3Ps7Htd2B9jd97rwvqQvX2vC+tXdoJ9eD12zX3qec6JnrXPhffn
7H/2ubD+Zhfe78L+HLvvfkzPPrLfhf0F9mcH8Hrsnw64sP5nLzvgwvqd/e5B
zA/bDfDIgy7sH7AvHsT6Yn91CJ+H3f4Q3o+9KcBxDruwv8uuchjbM3vqYRf2
F9j3DqvxILPofEewP7F7HMH+yt5/BOMdO8VRjAfsBkcxnrMXHXXh/RH71VGM
9+xSx1xYb7OHHsPxjn3mGI6X7AzHcbxitz7uwn4Ae+1xHE/ZMU7geM6ucMKF
95vsCSfwedk3T+D92DlPurAfwO4S4F0nVXsfLjrxKRfmU+w6nrX3s+y5p1x4
f8x+6rm7//eCDBc7jenZA077/V308dMuzEfZac+4sJ/Bbn7Ghfkwe+UZvB77
g7MurGfYZc6q8k4kevRZF85fsK+cVeVVXHTWcy6s59gdz+H12FsDHO+86i+F
RFc/78J6kz3jvAvrVfbD8y6s59kFL0Ts3hdcWC+zDwX404v/mRsHeEmA37kU
se1LfnwVPZzSB/n8JTXexxWd6bIL+yHstpexPtkbLmN9sGNdidiVrmB7YE++
gvdj37nij1ei81zF67G7X8XyZe+96sJ+HDvZNSwvdr1reD/2gmvYn9gvrmF5
sUtcx/pkD76O5cU+dR3jBTv9Dczv/7Rz76FdVnEYwL3M6dzUXdzm3Fxbu+ic
EysMKaywiyH1fjMMMaxYRSWFFYYYVhhSSWF2QQorLKm0MLsghRWGBFooUUhh
V6SwQp3TzTl1U+Mov9/O85zDXqR/nz8/cHhv57znPec55/djLzqAx2NvPYDt
kZ13EM/HnnMQ+0v22oPYX7H3p3hqWwJ5E3tZG9Y3e2dbAnkeu+xQAnkqu/UQ
Pi/2xkN4v+zuFM9o798r2xPIy9h72hPYP8euO4zPi73wcKa9nttfyd6S4pwj
/duOJJB3sdc4e3kTe1/2eO9GPaUjgfEQe6nz2fHIqqi3dySwv4xd1JnAehB7
fmcC4032+s5se4y6ozOBPIU9/WgCeQx7hbM3nmfvPpppr61RV3dhefaCLjwf
e3OKz3Th/bJnHUsg72KvPobXy957DK+X3dydwHyIvbgbr5e9jcqzC47377nO
3voxe12K244nMJ9lTzuRwPo7e/mJBPIY9ncprjiZQB7DvtvZy1vYH1J59skU
X9vTv1/oSSAPYf/ak0AewW7sTWB/Cfvh3gT2f7C/7E3g9yHsoacS2N/FvtnZ
y3vYb1B59r+nEsjD2JecxvtlP5Hib08nkMewR5/B8uw7Uvy+s5c3sbtSfNUA
g/bAfs753Pfwiph/cvbeF3btQIO8if2As5f3sD9z9vJg9qBBBnkO+0ZnLy9i
v+rs5VXsv5y9/pA9eTCej/3oYIPv0fl6VI5Bf8q+NQevh/1OjkHexD7s7H0P
2JcPMVhvYT89BI/H/sHZy7PYVbkGeRD73ly8HvYnuQZ5GPuUszceYV8/FM/H
ftnZG6+w/3D28ih20zCD3w+wHxlmkAexvxqWqc8dUQ/PM9gvw74lL3M9u6J+
M89gPZR9IMWXDjcYT7OfHG6QF7F3UXl2eb7BejL7znwsz/4g32A+wj6ebzAf
YV9dYDBfYz+f4p8LDOaT7PoRWJ794AiD+Rb78xEG8z32kJEG69Xsm1L82kjD
/QHkv53Pfc+ivmiUwX4D9mPO3nyKvWMU3i+7uNAgL2DfVoj1yd5QiMcjD+gp
hPYS+LoiLM9+sQjqM/BvRXg89vhi8+ejge9yPtvdWtSbivF87BPF5uc5ga8p
weOxV5XA8wz8SwnUZ+CG0VBfgR8ajdfD/oLKs3NL8X7Zs0vxetivl0J/E/if
Uqxv9sVl0N4DP57ib8qgPw9cUm7+fpLAt5ebP98P/F65+esdgY+m+Mox5q+3
BH52jPl5QuAfU1xTYf5+lsD3V+D52J9WwPc48MCxBvt52TeMNX88EfiVseaP
ZwL/6dw3XgjcUmn+fD3wkkrzx4OBv640fzwbeGSV+euhgedVmb8eG/jtKvPn
y4HbU3zZOPPH+4GfGofl2d87980nAldWmz9fC3xPtfnz2cAfp7i32vz5YuCZ
F5g/3w38Uop/d+77/UXgCTX9e1FNtj1HvbUm8zzeijqvNvu+RT2nNvu+Rb22
NtsfRL2/NtPeNkQ99UI8HntZinc69/3/ROCyOnwe7NYUb6zD47G7qTx7Rn22
P4h6ZX22v4l6Tz2ej13XkHkflkS9sCHbX0S9pSFT3/OizmnM1Nd9UVtjpj21
Rr2mMfM+z4x6X2PmfmZHPWV8tj+MemmKt4/H47GLJvTv+c6rsv9/Gnh9ijuc
N2X/XyXw9CYsz17RhM+bvbsJ2wu7emLmeT8T9YIUb56Yaa8fRX1mIrZ39qxm
83/fFnh1s/l5YOC9KW6ehP01e/Ek8/O2wNuc+/LWwAUt5uddgeemeF2L+Xl0
4LaWbH1GPW2y+eshgZc79+UtsizLsizLsizLsizLsizLsizLsizLsizLsizL
sizLsizLsizLsizLsizLsizLsizLsizLsizLsizLsizLsizLsizLsizLsizL
sizLsizLsizLsizLsizLsizLsizLsizLsizLsizLsizLsizL5+u9sizLsizL
sizLsizLsizLsizLsizLsizLsizLsizLsizLsizLsizLsizLsizLsizLsizL
sizL/8v/AVK7BNc=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> 0.25, Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.93083526*^9, 28.}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 2000, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.93083526*^9, 3.934875277*^9}, {28, 33}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"k\[UDoubleDot]ls\[ODoubleAcute] h\[ODoubleAcute]m.\"", "\"ovi\"", 
       "\"PK\"", "\"SZGK\"", "\"M\[EAcute]rce\"", "\"G\[OAcute]lyairoda\"", 
       "\"kisterem\"", "\"vend\[EAcute]gt\[EAcute]r\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.87, 0.94, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.87, 0.94, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 8], 0.125], 
                    NCache[
                    Rational[7, 8], 0.875], 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 8], 0.125], 
                    NCache[
                    Rational[7, 8], 0.875], 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 4], 0.25], 
                    NCache[
                    Rational[3, 4], 0.75], 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 4], 0.25], 
                    NCache[
                    Rational[3, 4], 0.75], 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[3, 8], 0.375], 
                    NCache[
                    Rational[5, 8], 0.625], 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[3, 8], 0.375], 
                    NCache[
                    Rational[5, 8], 0.625], 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[5, 8], 0.625], 
                    NCache[
                    Rational[3, 8], 0.375], 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[5, 8], 0.625], 
                    NCache[
                    Rational[3, 8], 0.375], 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[3, 4], 0.75], 
                    NCache[
                    Rational[1, 4], 0.25], 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[3, 4], 0.75], 
                    NCache[
                    Rational[1, 4], 0.25], 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[7, 8], 0.875], 
                    NCache[
                    Rational[1, 8], 0.125], 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[7, 8], 0.875], 
                    NCache[
                    Rational[1, 8], 0.125], 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.87, 0.94, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5800000000000001, 0.6266666666666667, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.87`", ",", "0.94`", ",", "1"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.87, 0.94, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.87, 0.94, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 8], 
                    Rational[7, 8], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08333333333333333, 0.5833333333333334, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "8"], ",", 
                    FractionBox["7", "8"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 8], 
                    Rational[7, 8], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 8], 
                    Rational[7, 8], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 4], 
                    Rational[3, 4], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.16666666666666666`, 0.5, 0.33333333333333337`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "4"], ",", 
                    FractionBox["3", "4"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 4], 
                    Rational[3, 4], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 4], 
                    Rational[3, 4], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[3, 8], 
                    Rational[5, 8], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.25, 0.4166666666666667, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["3", "8"], ",", 
                    FractionBox["5", "8"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[3, 8], 
                    Rational[5, 8], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[3, 8], 
                    Rational[5, 8], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "2"], ",", 
                    FractionBox["1", "2"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[5, 8], 
                    Rational[3, 8], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4166666666666667, 0.25, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["5", "8"], ",", 
                    FractionBox["3", "8"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[5, 8], 
                    Rational[3, 8], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[5, 8], 
                    Rational[3, 8], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[3, 4], 
                    Rational[1, 4], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5, 0.16666666666666666`, 0.33333333333333337`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["3", "4"], ",", 
                    FractionBox["1", "4"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[3, 4], 
                    Rational[1, 4], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[3, 4], 
                    Rational[1, 4], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[7, 8], 
                    Rational[1, 8], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5833333333333334, 0.08333333333333333, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["7", "8"], ",", 
                    FractionBox["1", "8"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[7, 8], 
                    Rational[1, 8], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[7, 8], 
                    Rational[1, 8], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False", ",", "False"}], "}"}]}],
            ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9348892486359043`*^9, 3.934889272885377*^9}, 
   3.934889309692453*^9, {3.934889369800274*^9, 3.9348893809934206`*^9}, 
   3.934889430957142*^9, 3.9348894905007715`*^9, {3.9348895254631834`*^9, 
   3.93488956099533*^9}, 3.934889627442641*^9, 3.9348907569438868`*^9, 
   3.934894661272603*^9},
 CellLabel->"Out[408]="]
}, Open  ]],

Cell["\<\
azt k\[EAcute]ne megn\[EAcute]zni, hogy a k\[UDoubleDot]ls\[ODoubleAcute] h\
\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet \
f\[UDoubleDot]ggv\[EAcute]ny\[EAcute]ben egym\[AAcute]shoz k\[EAcute]pest \
hogyan teljes\[IAcute]tenek a szob\[AAcute]k / m\[OAcute]dszerek
\t> napi lefut\[AAcute]sok
\t> hisztogrammok k\[UDoubleDot]ls\[ODoubleAcute] \
h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet szerinti feloszt\[AAcute]sban

csak kicsit bonyol\[IAcute]tja, hogy az SZGK iroda eleinte \
bels\[ODoubleAcute] f\[UDoubleDot]gg\[ODoubleDot]ny, \[EAcute]s csak azt\
\[AAcute]n lett k\[UDoubleDot]ls\[ODoubleAcute] \[AAcute]rny\[EAcute]kol\
\[AAcute]s (d\[AAcute]tum: aug 13) --> kell el\[ODoubleAcute]tte-ut\[AAcute]na\
\>", "Text",
 CellChangeTimes->{{3.9348891020878*^9, 3.934889155564763*^9}, {
  3.934889193725916*^9, 3.934889196786866*^9}, {3.934889711587676*^9, 
  3.9348897637307377`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomsTempWithRelativeTimestamp", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"roomTemps", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"DateDifference", "[", 
            RowBox[{
             RowBox[{"DateObject", "[", 
              RowBox[{"{", 
               RowBox[{
               "2024", ",", "7", ",", "27", ",", "0", ",", "0", ",", "0"}], 
               "}"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Day\>\""}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"DateDifference", "[", 
            RowBox[{
             RowBox[{"DateObject", "[", 
              RowBox[{"{", 
               RowBox[{
               "2024", ",", "7", ",", "27", ",", "0", ",", "0", ",", "0"}], 
               "}"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Hour\>\""}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"TimeSinceMidnight", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "&"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"roomTemps", "[", 
         RowBox[{"[", "roomN", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"roomN", ",", "1", ",", 
       RowBox[{"Length", "[", "roomsWithData", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.934891786838583*^9, 3.934891807612677*^9}, {
  3.9348925278256826`*^9, 3.934892528106759*^9}, {3.934892630296089*^9, 
  3.9348926716163044`*^9}, {3.934892840346651*^9, 3.9348928437184234`*^9}},
 CellLabel->"In[283]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"externalTempWithRelativeTimestamp", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"0", ",", "\[IndentingNewLine]", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"DateDifference", "[", 
          RowBox[{
           RowBox[{"DateObject", "[", 
            RowBox[{"{", 
             RowBox[{
             "2024", ",", "7", ",", "27", ",", "0", ",", "0", ",", "0"}], 
             "}"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Day\>\""}], "]"}], "[", 
         
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"DateDifference", "[", 
          RowBox[{
           RowBox[{"DateObject", "[", 
            RowBox[{"{", 
             RowBox[{
             "2024", ",", "7", ",", "27", ",", "0", ",", "0", ",", "0"}], 
             "}"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Hour\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"TimeSinceMidnight", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
      "&"}], ",", "\[IndentingNewLine]", "externalTemp"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.934891811054864*^9, 3.934891825670144*^9}, {
  3.9348925299084616`*^9, 3.934892530264165*^9}, {3.934892637730045*^9, 
  3.9348926738366156`*^9}, {3.9348928471376*^9, 3.934892847270305*^9}},
 CellLabel->"In[284]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"hourlyUnifiedData", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "externalTempWithRelativeTimestamp", "}"}], ",", 
         "roomsTempWithRelativeTimestamp"}], "]"}], ",", "1"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "]"}], "&"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9348925194592934`*^9, 3.9348925425125284`*^9}, {
  3.9348925804161863`*^9, 3.934892605518792*^9}, {3.9348926949609823`*^9, 
  3.934892695002853*^9}, {3.934892851908805*^9, 3.93489285196954*^9}},
 CellLabel->"In[285]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"referencedData", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "hourlyMeans", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"hourlyMeans", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"hourlyData", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Module", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", "roomDataPoints", "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"roomDataPoints", "=", 
                   RowBox[{"Select", "[", "\[IndentingNewLine]", 
                    RowBox[{"hourlyData", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", "room"}], "&"}]}], 
                    "\[IndentingNewLine]", "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "roomDataPoints", "]"}], "!=", 
                    "0"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Mean", "[", "roomDataPoints", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "6"}], 
                    "}"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    "room", ",", "None", ",", "None", ",", "None", ",", 
                    "None"}], "}"}]}], "\[IndentingNewLine]", "]"}]}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"room", ",", 
               RowBox[{"Join", "[", 
                RowBox[{"roomsWithData", ",", 
                 RowBox[{"{", "0", "}"}]}], "]"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Table", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Module", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "room1Data", ",", "room2Data", ",", "externalData"}], 
                    "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"room1Data", "=", 
                    RowBox[{"hourlyMeans", "[", 
                    RowBox[{"[", "room1N", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"room2Data", "=", 
                    RowBox[{"hourlyMeans", "[", 
                    RowBox[{"[", "room2N", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"externalData", "=", 
                    RowBox[{"hourlyMeans", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"room1Data", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{"1", " ", "timestamp"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"room1Data", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{"2", " ", "eltelt", " ", "napok"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"room1Data", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    "3", " ", "m\[AAcute]sodperc", " ", 
                    "\[EAcute]jf\[EAcute]l", " ", "\[OAcute]ta", " ", 
                    "aznap"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"roomsWithData", "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"room1N", ",", "room2N"}], "}"}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"(*", 
                    RowBox[{"4", " ", "melyik", " ", "szob\[AAcute]k"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"room1Data", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "-", 
                    RowBox[{"externalData", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    "5", " ", "kinthez", " ", "viszony\[IAcute]tott", " ", 
                    "h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"externalData", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    "6", " ", "kinti", " ", 
                    "h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"room1Data", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    "7", " ", "h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"room1Data", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "-", 
                    RowBox[{"room2Data", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}]}], 
                    RowBox[{"(*", 
                    RowBox[{
                    "8", " ", "m\[AAcute]sik", " ", "szob\[AAcute]hoz", " ", 
                    "viszony\[IAcute]tott", " ", 
                    "h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet"}], "*)"}], 
                    "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
                   "]"}], "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"room2N", ",", "1", ",", 
                    RowBox[{"Length", "[", "roomsWithData", "]"}]}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"room1N", ",", "1", ",", 
                  RowBox[{"Length", "[", "roomsWithData", "]"}]}], "}"}]}], 
               "]"}], ",", "1"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"NumberQ", "[", 
               RowBox[{"Total", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", "3", ",", "5", ",", "6", ",", "7"}], 
                   "}"}], "]"}], "]"}], "]"}], "]"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "!=", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"hourlyData", ",", "hourlyUnifiedData"}], "}"}]}], "]"}], ",",
      "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9348939161167994`*^9, 3.934893977449362*^9}, {
  3.934894029331971*^9, 3.9348940326625814`*^9}, {3.934894097577589*^9, 
  3.9348941196503935`*^9}, {3.9348942729336634`*^9, 3.9348943290541487`*^9}, {
  3.9348950571748734`*^9, 3.934895072044667*^9}},
 CellLabel->"In[429]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"referencedDataColumns", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<1 timestamp\>\"", ",", "\"\<2 eltelt napok\>\"", ",", 
     "\"\<3 m\[AAcute]sodperc \[EAcute]jf\[EAcute]l \[OAcute]ta aznap\>\"", 
     ",", "\"\<4 melyik szob\[AAcute]k\>\"", ",", 
     "\"\<5 kinthez viszony\[IAcute]tott \
h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet\>\"", ",", 
     "\"\<6 kinti h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet\>\"", ",", 
     "\"\<7 h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet\>\"", ",", 
     "\"\<8 m\[AAcute]sik szob\[AAcute]hoz viszony\[IAcute]tott h\
\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.934894844996376*^9, 3.934894881414763*^9}, {
  3.93489507706139*^9, 3.9348950895632534`*^9}},
 CellLabel->"In[431]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<data\\\\summer_temps\\\\referencedData.mx\>\""}], ",", 
    "referencedData"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.9348940454497824`*^9, 3.9348940858103914`*^9}},
 CellLabel->"In[430]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomData", "=", 
   RowBox[{"Select", "[", "\[IndentingNewLine]", 
    RowBox[{"referencedData", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "==", "room"}], "&&", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "!=", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.934893984691454*^9, 3.9348940412623825`*^9}, {
   3.934894094067747*^9, 3.9348940942686806`*^9}, {3.934894154364062*^9, 
   3.9348941937230377`*^9}, {3.9348942564127803`*^9, 3.9348942634527316`*^9}, 
   3.93489430847698*^9},
 CellLabel->"In[389]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomsDailyTempProfile", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "hourlyData", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"hourlyData", "=", 
           RowBox[{"Select", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Select", "[", "\[IndentingNewLine]", 
              RowBox[{"referencedData", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "==", "room"}], "&&", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "!=", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}]}], 
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Between", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"hour", " ", "3600"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"hour", "+", "1"}], ")"}], " ", "3600"}]}], 
                 "}"}]}], "]"}], "&"}]}], "\[IndentingNewLine]", "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"hourlyData", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], "/", 
              "3600"}], ",", "\[IndentingNewLine]", 
             RowBox[{"GetMeanAndSD", "[", 
              RowBox[{"hourlyData", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "7"}], "]"}], "]"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
        "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"hour", ",", "0", ",", "23"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "roomsWithData"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9348943778158016`*^9, 3.934894594841991*^9}, {
  3.934894685262705*^9, 3.9348946856166997`*^9}, {3.934895095605065*^9, 
  3.9348950956738777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ErrorListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{"Transpose", ",", "roomsDailyTempProfile"}], "]"}], ",", 
   "\[IndentingNewLine]", "roomCols", ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "24"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"25", ",", "35"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesOrigin", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "25"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"Placed", "[", 
       RowBox[{"roomNames", ",", "Below"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "->", "600"}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", "->", 
      "\"\<napi h\[ODoubleAcute]m\[EAcute]rs\[EAcute]kleti profilok (j\
\[UAcute]l 27 - szept 7)\>\""}]}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.934894610850481*^9, 3.934894821634676*^9}},
 CellLabel->"In[421]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 8], 0.125], 
          NCache[
           Rational[7, 8], 0.875], 0.5]], 
        LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAELgw3hMw3z84WVnNwjE+QBnnlWcx
7Pc/LglQohoePkAj/H9HqhgEQFwMKxQoDz5AbwrccYgTDEAoZiKBWgQ+QL83
+6jn+RFAvBqcxZj8PUDN1sUlnwgWQKeQi1tm7D1Ap4Ixe7L9GUDjJF/1J/E9
QC6Z7wLPBx5Akp8P0//0PUAqv0tcQvwgQPmmcSzgBz5AvwCxdEMFI0Chd1vk
7A8+QFWLcq8r+iRAE5nLr+0hPkB0iBgVZfomQDlAEMh+QD5A2sRbLIn/KEAj
qHkxDHg+QPYRpd6cACtAY7PZU7rfPkDD7B+EUPosQN4iQe6qSD9AMRFgC9P3
LkDoZHDSvI4/QN5/ezihgTBAA8vBsqd1P0CvM1yZ7X8xQA1krb3WBT9AMYbV
A+B8MkBCGkVg7sY+QFFdz5r8gzNAsaXES8iaPkB1A7neBn40QBcKL9Lncz5A
GEQ4j7V9NUAk56eed3A+QG86l3e4hzZA/V19rnFYPkC2sQQ5OYc3QPSXTG+F
Pj5AOWultg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 4], 0.25], 
          NCache[
           Rational[3, 4], 0.75], 0.5]], 
        LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAupghTdVA4D+tEGG8mDU+QHGf1fQH
0/c/TUk39WMkPkAoCRs5GiQEQMnuAbJ2GD5Ay+/Vw9AJDEBaobgVigk+QDmM
HacRABJAF3hlgVf+PUClwyaj+QgWQDB4+ohr9j1ATxLtJNEOGkDph5p+qPs9
QD0k2QKQBB5AY4LuREf3PUBZfPT6FAshQEYy3Xj26z1A2EUGRtAPI0DmPKyh
+O09QDHSTBNCACVAMKJ3FuUBPkDqY69MTP8mQCA7EhgzEz5AeWdgg3ACKUBd
uOFfWzE+QDPwrHbbAStADhRAsbp/PkDBE4t03QUtQMw7lI8W1D5AGj93P9oD
L0BKqJmvDgA/QGgWxvDvgDBA3NKpERURP0DaBdYZIYMxQJKMd+Ir6D5AzapK
2qmAMkD5L9d/Lrk+QPmXf/mXfzNA19HGDbKYPkCMW8JQQoA0QL0grCpWcD5A
3mnnZ4F/NUD0ZJ6GvGY+QK9LLYjahTZAS5QjqdhUPkAXFpfWtoY3QLxOdZ8U
RT5Acb2h8g==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[3, 8], 0.375], 
          NCache[
           Rational[5, 8], 0.625], 0.5]], 
        LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAApGp+3s1M3z+D7cNXS/Y9QAPePezN
5fc/gpn9XeDaPUASb/YiOPoDQMLXk465xz1AKIIu4THxC0B040xbubU9QKpk
1FRS7RFAcix9M0OlPUBHKMmJOvMVQDpbJtC9nD1AlFcYf6rzGUAmnAauJJs9
QK+IE8GZ+x1AZ4DHvEuRPUBV0T6EtvggQNZaODXMlT1A7bfIKqH8IkDQ24Tm
I6U9QEhr2YTY9iRAWDO1m3q3PUA9WA6ZoPgmQGFRZU7Rwj1AjPWQFQv9KEBY
dN204eI9QACuvmJO+SpAsDtVWkspPkAU3UTJgvksQMh3GdDMgj5A6fmySkX4
LkBZ6mRrhLM+QIvFCTOQejBAqyHOMpmsPkCvGc4UAHsxQIvq2/HQlz5AAgAr
T2N7MkDkkyGIH3A+QHHxDd2fgDNAQaKxM2tTPkDIedRXBnw0QNUIStImNz5A
ltw4I9p6NUDuUXGhZy4+QJNCi9xgfTZAtxCQGaMXPkB/J3DiIn03QOBR4dq9
/j1A74WxLA==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 2], 0.5], 
          NCache[
           Rational[1, 2], 0.5], 0.5]], 
        LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAKp/A0fxJ4D+/3cQQZyw8QMv71S+h
Cvg/JcyDpFAgPEAr73g1kwsEQKnApfQ5GjxAFu0gL4cPDEBeu9JtBhY8QP3U
ac2XBRJA1zkviygQPEBAvqyUEwIWQISjsIKjCDxAhiFTGDIFGkBI/lWxLAI8
QJLYfAp3BB5AbA/rKEEFPECFow9tQQohQNH6Hq5AATxA+to0ScICI0ALkrOt
3Pc7QEnwAIYJACVA/v3XuGjcO0CztkXP2wYnQMaFfCqcwDtA0r5du3sHKUBM
M44N07k7QNJn/zl3AitAqBe4M2aqO0AvMp/OlQAtQAQqTQIOwTtA4egrGHj/
LkBLbUH5Asg7QIUsEXE7fjBAqv6Gf4LSO0Ak/rZrsYExQK6mFgGL5TtAI+WK
PwZ/MkDR6eh1Kfk7QJ95SJwGgDNA7MZqwTYYPECBPqtRToE0QI1plqN4IDxA
qttM8m2BNUAIFpjHqS08QIT4dMjVgTZAi26f9VAwPEBK4/jj5X43QDD8Akoz
LzxAT2yhrQ==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[5, 8], 0.625], 
          NCache[
           Rational[3, 8], 0.375], 0.5]], 
        LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAiY2fqNyo3j85ukqdVtM7QPN8xcYv
bvc/5V2yIKG0O0Bt0LfFdMQDQBP+CA2jmDtAtdm+kDu+C0Ci1+cRToU7QA8y
0wGz1xFAfqWHEAV8O0C0xuBb7eEVQDaSC8VKbztAh9h03tHgGUBrRJVsCGk7
QKNg5TdW7B1AN1zlorpyO0CaMbsYd/cgQFHqHeZKlTtAQHBW5pz1IkBBAXbq
auU7QAWTfqLD7yRAnsT+bS5CPEAGRDKK4/kmQClikDopgzxAwwksQFz9KEBg
8JRPHME8QA1F4FUL9CpAYXAvcPL0PEAJlNnfJvUsQISSHzOjCT1APe3JP1v5
LkDc0BTI0fs8QO8kkvvgeTBAOe3DI77yPEASHMMzPnsxQDUw6GdjwzxA3CX8
DPF3MkBEVIOMlJM8QMgDWU39eTNA0+RsZGFvPEDliuFL8Xg0QAkwcVARTjxA
MBeNwUx2NUDfqNiHnT48QL1wKT0BezZATI+VZ2MXPEA8xFYLDHo3QEGfuxrS
8jtADJOrrg==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[3, 4], 0.75], 
          NCache[
           Rational[1, 4], 0.25], 0.5]], 
        LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAbZQ9ij0V4D/LH1CbZSc8QINfnhju
C/g/Aj4+KXb4O0DgW3WZDAUEQBNCbWpmyztAy7clmSIEDEBQ5rrSiaI7QIEW
5DmuARJA35RymySBO0CjYe/ILwMWQLPbWsnZcjtAGw5UoIoDGkBUl9sfZIA7
QOXcZxcQAR5Aj0wvWxmxO0AUwgOTWAAhQKq6I4by/DtAPZdWh9//IkCCKDaq
hEU8QM9NJe9EACVAtm76jFmTPEBuq5QoZwAnQCIj3LMQ2TxAGy5NDKr/KECv
Zu3d0TI9QIRNA0AC/ypAb6XEdc6HPUCEnx5v2/0sQBFdU1gOxj1AYl7SHJ39
LkBGfcBJWb89QJp0MmaNfjBAsIqRlfmYPUB15xComn4xQLdt27ZtZT1Af1QH
8qJ+MkCE5nyg3zY9QEDLu+iqfjNARvUvgwcOPUAJYd2i+n40QOcD2Bk34jxA
1QhSyNp+NUBiE1Uxbsc8QDVSitdsfzZAyeU+YMKUPEC/gNtp3n83QPbiSKU5
ZTxADvejeg==
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[7, 8], 0.875], 
          NCache[
           Rational[1, 8], 0.125], 0.5]], 
        LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAGX1miNVh3z9niPLsjoU9QBDoI8rQ
xvc/puUPbjlSPUBTDivI3/ADQDf4YuD8Kz1A71TpRCT4C0DE9LnAcAE9QG9n
SMzb+RFA7KUP8R7iPEAgYt3m0/kVQFwuVtOlzTxA1unLeHX6GUCbbi8OQNU8
QLQuCeZj+R1A7CgZw2jpPEDP8zzP8/wgQNMYMI0BEz1AouNeaFX7IkAoZ1Dk
Ikw9QEgh9Mfs8yRAArvQWrZ3PUC9NCn0zPsmQMV/QVZPmD1AM53tc+z7KECc
E6fvW8I9QJwZ+pCoAytAyxpqBcHgPUD1fXWZQPosQIpTDpnUKT5A/0CEFZ74
LkBgqIojg1I+QKdVZlTMfDBAutw81OJWPkCKpwO9FX0xQJJGFf4nUj5AMvcW
4D54MkCTOP2IpVM+QP1tilHDezNAWfKLJb9YPkAnKrAaVXs0QD4K16NwPT5A
CTn6I+p7NUANMLy/RCM+QE8njB9tezZAmbu/R9/uPUAIKTtdfnw3QE7EEeld
wz1AQHWvMw==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 25.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"napi h\[ODoubleAcute]m\[EAcute]rs\[EAcute]kleti profilok (j\
\[UAcute]l 27 - szept 7)\"", TraditionalForm], 
     PlotRange -> {{0, 24}, {25, 35}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {{{{
          Opacity[0.15], 
          RGBColor[
           NCache[
            Rational[1, 8], 0.125], 
           NCache[
            Rational[7, 8], 0.875], 0.5], 
          PolygonBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQLbDD4J6wwX37w2emF/8PtnWQfD413fDNd/u/G7/f
/mpp66D8p959lQSLw+0JjgZfNG0d8rnuFHYI8zhsn59ZZqRg67Df/PeK5z8F
Hbb9Tb3KLWXrcPbaUdX5HGIObtwF2jGstg7LmwyrN/2VdFjR2Jf/i8/WQW/m
e6bz7HIO8anuF5cJ2Dpo7feOcfqj4PCN73iyOcg8ho0lzqzKDnvsk1jOa9k6
hHYXrdf+peJwqmGFiL2drUNJh4Ro6i81h5u1YeGKEbYOt45E63T+13AQWr1x
3402W4dvgkvvzWHQdihUX3b7/3Nbh8Nv5FsCfuk4hGaYmCc62DkYCiZwX/6u
5xCovq/sYYedw736aouFjQYOF8xOpfxpsHNYbxwz8229oQPX04UPlMSB6tuu
Mj+oMXKwfbNow/YHtg6Bsedn/Wk2dqjesdFXZ6etQynzzntsdSYOZ6K2OZ/t
t3WQcLHo31pr6pC9p1L99kRgeFlNL9/RbuagEWy97WmVrcO2jSyWlu3mDvNN
nmpVJiL4nr83b54obQ9Xfylj/7K/pvZw8+4KXhMV8beH25e0c3kCU4Q93D3P
J133TKmxh7vX3eM5v+pae7h/BB7vmNX1xR7u39nrYxo0TR3g4eEQKCju4+UA
D6/N75YFVWk4wMMz1J73TMl1e3h4myx1XGKfaQ+Pj5lMpyzuaNjD4ytm4zuv
Oaz28PhsWx9yhOurHTy+/9jJfO14bwdPD0dvXr8ScdMOnl7kTuhXh162g6cn
DrHl3QVAPiy9HTK/tFX1vh08Pc7Uud3d9MIOnl7vtov8iP5iB0/P8QkrMuyZ
7B1g6X3tUyn1Nn57BwAuKUy1
           "]]}, Null}, {{
          Opacity[0.15], 
          RGBColor[
           NCache[
            Rational[1, 4], 0.25], 
           NCache[
            Rational[3, 4], 0.75], 0.5], 
          PolygonBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQvWuGou9Vhwf2l+SsJv63tnUonH/1C/vl7/aTXTqd
P2nZOmhwSltKqbA4rJo469AdGVuH0++vHr7AyeNQY/MpfCa/rYNlj+xyQQYh
h5nVVilxLLYOSw+rLf7JIeZwYcd5MV0GWwd/obcqF/mkHHY6v428BZS3VbnJ
NIFFzuHXMdWQ+t82DpE1X36JcCs6BP82qXl318bhhiub2wV+ZYc1Iaa/mm7Z
OBhe8hF2YlB16Px3MVr1s43Dq+T1Pj7/1RxmvvROZOK1dahMT2guYNJ0EHxx
szga6F7jD2vKbjNqO3if8hZqLrN1OCjcXXKXVddhodCO1L8HbB2k7MvtbzHr
Oxw4wKHz4r2tQ4bYsQ/vGwwczm1/MncKt53DLdZrkorNhg5i8h53XZ7bOpxd
5XVrZYORQwHre9lle20dfk6vByJjhwbTnz+kZtk69EQfCnBqMHHwfPNPQS3H
1uFe5vP0xnpTh3kT3tx9GGvrsN5bt+NWq5nDycvBx1Z42zqIi02/tq3N3EG5
1SLK3hnBD5XY9OSlmz1c/dmQz90ccfZw87wsA/Sn59vD7TMMjTRpK7GHu0cv
b4qS53R7uHubovY/3LbFHu4fvl/Lngu9tIf792vZ9kNe3A7w8HjlPnWmFIcD
PLy+pxTs1H9uDw/Pi7EmAZ867OHhvbLjpXe0hT08Ppb33DiXLGkPj6/rrrIX
lwjYw+NTQVXZM4/RHh7flpmtpf9+2sHTwxnb7ab8n+3g6UXyjPvisk928PQ0
wVz198o3dvD0NrVkwryAH3bw9GjBVn+5itkenl5feGcuFBCxh6dndr+ny67K
2jvA0nsHU8dzQ317BwBcqESD
           "]]}, Null}, {{
          Opacity[0.15], 
          RGBColor[
           NCache[
            Rational[3, 8], 0.375], 
           NCache[
            Rational[5, 8], 0.625], 0.5], 
          PolygonBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQvSSr7t5Zn/v29ftur+AWsnVgvmf75uzT7/bB0S7n
rz+xcRDK/6Zk8YvZYdaqG6lNJ2wcNJr0Hhp+5HaIWr69TXiHjcOqlCshQW8F
HTq32fucWWrj4K5xstPqs6iDkbT1w+DZNg5TwiXqV32WdHj1Ze2Hh4tsHNZ3
CB+c+VvWoebsyS7X1TYOoRftWrb9UHAQNC7foLPTxuHt9hNaC/8oOdhor7j8
8qKNg0f2zZYb31QcVv/9KBr7zMbBNoJv5oIfag7aKobdL77YOPR8nSDK/VfD
Ifztv2UXpW0dGNbtS/L7qeXAqrmh42K2rYPIXZeTTT91HMx5lpQ7H7J1ePlz
k5frDz0Hk1S+zqRXtg7dRzmNJ1QZOCw3efTywW1bh/WS50QYqg0dPt3/myl/
3NaBiUHbP7nayOFHY1rolXm2DoUfee/ObzB2uGz5Z+6rOluHE5VXwtlqTByu
lv07fS3W1mHaHQvlW1WmDlpGLNt3+dg6THbqvpNQa+Yw8T2Lr4aRrUO9esEj
pVpzhzWy9xV9eBF8kbbHk/U/2MHV3zWUfib71w5u3qbCe90iAvYI+2ZNvVEG
5MPcs54r/eRrdXu4ey8svbMry9Ee7h+VrzsrmzLs4f5dz7erOrDWHh4edfm7
fZfV2MPDK/Jxn0aYsz08PKP9fmkffWYHD+/I37sPfVxpB4+P6XUzBXdNsIPH
F2tmheKMDjt4fKb0JP6MrbCDx/fspp87s4vs4OkhyPjou8ByO3h6SXKOz06f
bAdPT06zBferz7ODp7foRbukdi2xg6fHPvlH+vGb7eDp9RWL//YPx+zg6Xnj
9W1vXlywc4Cl93aZNWzdt+wcAIeOYLk=
           "]]}, Null}, {{
          Opacity[0.15], 
          RGBColor[
           NCache[
            Rational[1, 2], 0.5], 
           NCache[
            Rational[1, 2], 0.5], 0.5], 
          PolygonBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQrTX/wMU/ng/sY68Yn4lutHY4/fuq/kKuH/bvt6+f
tCvf2kH7fYXpZG4Wh80S+r1xGdYOYm8V9Nv5eRx4osM3v0qydvh7JfPsdFYh
h/3MU1dMjrZ2cNi3Zoowk5hDW3iMz4EQa4c2xWAJI1YpB+Xg15abfawdJt2o
4SpnkXM4OaFJUjzI2qF1MX+uI5eiw9Tlj84ecbV2+HXLxPMQk7JD+P8Qzh3W
1g6eHxjaOBlUHf6xBek5ylg7bN7mev42m7qD9tOE5bdZrB0u7YvdXc2u6TBR
cnKOyCcrh0vp/y3LmbQdHvyX2CN7wcpB32j+uakMug41U+tz+q5bOTx8oS1R
8V/PQd6F4UjmIyuHVh3BQus6A4dXu9oa4sSsHVT+bcve2GjoMNHeTMzAytpB
+WmXPVu9kcMLvVOXl/laO8yv9JjD1mDs4L3c8cHZXGuHRrvVgX6NJg6HtHs1
A4utHVbd9vmU22jq8OTwzqDSemuHlh8lJ642mjlwMC2IfNpi7eD1+Mfjp3Xm
DjJ7+6b01iP4Ltbl/2/cs4Gr57s9b+Ke2zZw83QyymzuAfkw+yKWz5ddcNYG
7p7eZ5MXzT9kA3fvriXsEmuW2MD9c5r3++unE2zg/s1yaq9b1mcDD4/yaU16
c9bawMOrZ5/UjN5VNvDwLNAPX72uxQYe3uy+nesmNtrA4yNRbcbamBobRHx9
iXWeMMcGHp/7VYSCGLfYwOOb1y+6b88eG3h64O8LtsjeYQNPL7krD2gs224D
T09N71l2tgHVw9Lb+/yTuXuP2MDT4wZpPw2lkzbw9Do/QyZG9IwNPD1HPwjf
9uyCjQMsvSs+Dw0tum7jAAAHX0e1
           "]]}, Null}, {{
          Opacity[0.15], 
          RGBColor[
           NCache[
            Rational[5, 8], 0.625], 
           NCache[
            Rational[3, 8], 0.375], 0.5], 
          PolygonBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQ3dk7f8WdFffsG+eHXb12xMrhc83RY/p53+2Lri2q
3bfAyiH3wvajJUeYHWQcl4SKZVg5bL25b4L1Pm6HB9NelDr6WjnwG11m3Hxd
0KGpXKmDI8rKYcuxB9FvH4o6eIZ8O78m3Mqh/UbJvYsPJB3ajp8sTA61clic
8NQ87I2sg9BNxc538VYOswx3S5R/V3BgWsq2QLPBysGhIOzZnK9KDgoP5ikn
XrJyYJ1ct+jwexWHpCWGySYG1g5sLkZdj3+qOfht/7A3uMTa4TCnjkPMXw0H
rze+3DcWWTvwuj4I5f6i5XB7yof2/zesHTin3Lyv9lXH4dCRGZ/WvbN2sH17
0j76p57DsunSv+c+tnZ4rzLp94NKAwfX+1mCG29aOwjJHDa2qzZ0iJE6w35v
o7XDHdU/PB/LjRw6n0b+rOu3djjBHOn7t9LYgd1jzrnabGuHp10PvT9WmDi4
TZq+yz7I2sFAvPegT5mpg5t3pvk1Z2uHvQWatozVZg7MkvY+B0StHWyOhHHz
VJk7zNrGdF3gtRWc/6K9JG7yLxu4+qmsb5rYJG3h5lWwedxIsbSF23fmrNez
R562cPfMb7T95VJsC3fv/0Nr5FdNt4X7h8+N5cSLK7Zw/+r+ljE7zW0HDw8h
Lr6prCJ28PByS1hWPF3FDh6ez73zIp4K2MHDu+zL7ckJ923h8cHCa7D930Rb
eHzdenK6QiPEFh6fSUq+G0t+2MDje4G+qU7OKht4eoi5v2JPW6sNPL0EHExI
X1tjA09PyhcUdr1os4Gnt6rLb2YwzrOBp8cUiedro/bawNMr1+7cI/onbeDp
OeLpwcPNJ2wcYOn94xW71GsPbRwAjlxctg==
           "]]}, Null}, {{
          Opacity[0.15], 
          RGBColor[
           NCache[
            Rational[3, 4], 0.75], 
           NCache[
            Rational[1, 4], 0.25], 0.5], 
          PolygonBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQnTvFtstW9IH9/YkRddvvWTk0x8+TeMf9w37HoWfW
kzZYOTyILp3Jw8rikCWjEfy0wcrh9HbVmUosPA6NhcofCkKtHBrFnliuYxRy
2N5ZILfD3MphceL7E/rMYg79b0KZczSsHKT5QhZ0MUs5BGkayG+ws3J4eidd
XIBRziFozWx9tjIrB5FDzJMjGBQdejY+5BbdaeVgOz2s/f5/JYea5Xq3Ln63
cjjvq/rehUHV4bKkqHmoo7VD3uopGukM6g4GilEW8fXWDtJ6vjyr/ms4/L8n
LHrohLVDiy+zA9N/LYc9l55dfsBi49AyXy7/9l8dB4aWdSeP2do4JMVdkpn7
V89B68iCq9x+Ng6zSozSeusMHHaIva7ZbmbjUPpcYMWsOkOHXJt2BWsuG4f6
EPZPi+qMHM4eOXjt9SNrB4fTu1+sqjN2UL8YWrhvp7UDZ+LdRb/qTBxOzbPk
mDPN2uEqR9CJW3WmDmp7PjysqrN2MA3qup5Tb+Yw7RxXw0J3a4f9Dbcz79Wb
OyT9m8nBooDgdx3/7pi/yhau/s+fIofHD23h5s3L2tmQKGAHt48ls0z7kq4d
3D2pklxTA5Ls4O615rDIutxlB/cP43x93wUH7OD+XfHPfJ31bzt4eCSZPdi7
zMAeHl5KZj+ehfrZw8NTqWKR+B4ue3h4x787tuzhHDt4fIioxukfMrKDx9fM
w/cfxT61hcdnx0rbKvPJtvD4PnE4leGCgy08PZx5c6hN540NPL2EsbYrSByy
gaen66fi+9332sDTG/uCEomJp2zg6VE+Omjrovc28PS6J31T43NRW3h69tk5
VSwKaB8svW9f675DuMDWAQC1a0Ba
           "]]}, Null}, {{
          Opacity[0.15], 
          RGBColor[
           NCache[
            Rational[7, 8], 0.875], 
           NCache[
            Rational[1, 8], 0.125], 0.5], 
          PolygonBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQLVmb1nE18b79qurXEx542DgIvFA+deHYd/vqqYnR
WyVsHIL5tE/c/8Ds0BAwfa/VV2uH9yEvXVR+cDtoTshoyDtt7ZCf7nHm9k9B
h4j1DWtubrF2UEi6++zyT1GH6MjKtX8WWztce3m6ovSXpMMlt7MOO9ZbO2zR
43yW/FPWIfdfZzD7QWuH859tzn/+o+Cgy95hyXTP2mHR47iM0N9KDoZZ3sFb
+WwcPBS/HH/zWcVhXreK41dTG4e9JppfzvxWc1Bfuo+JIdzGwXju2+I3vzUc
wucExubU2DjMkfw1YQWztkPPv9CwJ5NsHL7Wls50+KXjcPxA7dnA6zYO/x1a
ROf90HP4xXyrR4Hb1mF5aFrImRoDh+MNNt58/LYOXcuZ94rWGjqs2Lvs+k8m
Wwej72IP7CqMHDwCc1cd/2Xj8De3K/BwtbEDv/rvW7OB8upaG6RCq00cOtxf
eOz5aOPAaflL+VW1qUOTvwKn9wUbB3/1HvncajOHbVu/Tlfut3Hg0LSOrasx
d3h/pCnkZyaCv/bwgtpDMvZw9TUHO7/P8rOHmzdDIKLMrswebt+XM0f/qXTa
w92zeK9MwaN19nD33pPvTW9eYw/3T835ZpWwhfZw/661sI3dPs8eHh7HfKx3
PZ1pDw8v32fzUsJr7OHhyWVet2Wunj08vB92/Wn05rCHx0dy1JGV827aweMr
7VVNSflOO3h8yqeElk7otIPHd6XWjQcMHnbw9JAdvMLolKAdPL2kTJt4+/gv
W3h6imU2/un33Rae3hrmzDNN4beDp8f4SG7GYnM7eHp9N1+PeX+SHTw9XzTd
17C3284Blt5Vpv70sD1k5wAAA5NexQ==
           "]]}, Null}}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"ovi\"", "\"PK\"", "\"SZGK\"", "\"M\[EAcute]rce\"", 
       "\"G\[OAcute]lyairoda\"", "\"kisterem\"", 
       "\"vend\[EAcute]gt\[EAcute]r\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 8], 0.125], 
                    NCache[
                    Rational[7, 8], 0.875], 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 8], 0.125], 
                    NCache[
                    Rational[7, 8], 0.875], 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 4], 0.25], 
                    NCache[
                    Rational[3, 4], 0.75], 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 4], 0.25], 
                    NCache[
                    Rational[3, 4], 0.75], 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[3, 8], 0.375], 
                    NCache[
                    Rational[5, 8], 0.625], 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[3, 8], 0.375], 
                    NCache[
                    Rational[5, 8], 0.625], 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[5, 8], 0.625], 
                    NCache[
                    Rational[3, 8], 0.375], 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[5, 8], 0.625], 
                    NCache[
                    Rational[3, 8], 0.375], 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[3, 4], 0.75], 
                    NCache[
                    Rational[1, 4], 0.25], 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[3, 4], 0.75], 
                    NCache[
                    Rational[1, 4], 0.25], 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[7, 8], 0.875], 
                    NCache[
                    Rational[1, 8], 0.125], 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[7, 8], 0.875], 
                    NCache[
                    Rational[1, 8], 0.125], 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 8], 
                    Rational[7, 8], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08333333333333333, 0.5833333333333334, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "8"], ",", 
                    FractionBox["7", "8"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 8], 
                    Rational[7, 8], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 8], 
                    Rational[7, 8], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 4], 
                    Rational[3, 4], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.16666666666666666`, 0.5, 0.33333333333333337`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "4"], ",", 
                    FractionBox["3", "4"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 4], 
                    Rational[3, 4], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 4], 
                    Rational[3, 4], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[3, 8], 
                    Rational[5, 8], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.25, 0.4166666666666667, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["3", "8"], ",", 
                    FractionBox["5", "8"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[3, 8], 
                    Rational[5, 8], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[3, 8], 
                    Rational[5, 8], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "2"], ",", 
                    FractionBox["1", "2"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[5, 8], 
                    Rational[3, 8], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4166666666666667, 0.25, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["5", "8"], ",", 
                    FractionBox["3", "8"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[5, 8], 
                    Rational[3, 8], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[5, 8], 
                    Rational[3, 8], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[3, 4], 
                    Rational[1, 4], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5, 0.16666666666666666`, 0.33333333333333337`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["3", "4"], ",", 
                    FractionBox["1", "4"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[3, 4], 
                    Rational[1, 4], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[3, 4], 
                    Rational[1, 4], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[7, 8], 
                    Rational[1, 8], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5833333333333334, 0.08333333333333333, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["7", "8"], ",", 
                    FractionBox["1", "8"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[7, 8], 
                    Rational[1, 8], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[7, 8], 
                    Rational[1, 8], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9348946150254908`*^9, {3.934894661722303*^9, 3.934894668721545*^9}, {
   3.934894701507371*^9, 3.934894719834524*^9}, {3.9348947509296007`*^9, 
   3.934894768348854*^9}, {3.934894804403426*^9, 3.9348948220572352`*^9}},
 CellLabel->"Out[421]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomsDailyTempDiffToExternalTempProfile", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "hourlyData", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"hourlyData", "=", 
           RowBox[{"Select", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Select", "[", "\[IndentingNewLine]", 
              RowBox[{"referencedData", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "==", "room"}], "&&", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "!=", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "&&", 
                 "\[IndentingNewLine]", 
                 RowBox[{"30", "<", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}]}], "&"}]}], 
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Between", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"hour", " ", "3600"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"hour", "+", "1"}], ")"}], " ", "3600"}]}], 
                 "}"}]}], "]"}], "&"}]}], "\[IndentingNewLine]", "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"hourlyData", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], "/", 
              "3600"}], ",", "\[IndentingNewLine]", 
             RowBox[{"GetMeanAndSD", "[", 
              RowBox[{"hourlyData", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "5"}], "]"}], "]"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
        "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"hour", ",", "12", ",", "20"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "roomsWithData"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9348949321690903`*^9, 3.934894946613221*^9}, {
  3.9348951145362005`*^9, 3.9348951261464825`*^9}, {3.9348951625743203`*^9, 
  3.934895165149825*^9}},
 CellLabel->"In[436]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ErrorListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{"Transpose", ",", "roomsDailyTempDiffToExternalTempProfile"}], 
    "]"}], ",", "\[IndentingNewLine]", "roomCols", ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"12", ",", "20"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "6"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesOrigin", "->", 
      RowBox[{"{", 
       RowBox[{"12", ",", 
        RowBox[{"-", "6"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"Placed", "[", 
       RowBox[{"roomNames", ",", "Below"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "->", "600"}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", "->", 
      "\"\<napi kinti h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klethez viszony\
\[IAcute]tott profilok meleg napokon (30\[Degree] < T_kint)\>\""}]}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.93489495293501*^9, 3.9348950378310337`*^9}, {
  3.934895152635951*^9, 3.9348952209100237`*^9}},
 CellLabel->"In[442]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 8], 0.125], 
          NCache[
           Rational[7, 8], 0.875], 0.5]], 
        LineBox[{{12.494444444444444`, 0.4802083333333331}, {
         13.496556473829196`, 0.15262258953168065`}, {14.48179012345679, 
         0.0779629629629641}, {15.498749556894719`, -0.16059494269171523`}, {
         16.48996794871795, -0.6058205128205126}, {
         17.495833333333334`, -0.9710666666666647}, {
         18.478595679012344`, -1.0848148148148151`}, {
         19.50030864197531, -1.2416666666666663`}, {20.503703703703703`, 
         0.23500000000000001`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 4], 0.25], 
          NCache[
           Rational[3, 4], 0.75], 0.5]], 
        LineBox[{{12.466666666666667`, 0.5138888888888887}, {
         13.507222222222222`, 0.11500000000000092`}, {
         14.504761904761905`, -0.12746428571428428`}, {
         15.49491129785248, -0.3360504201680671}, {
         16.474486461251168`, -0.7115126050420176}, {
         17.512116402116405`, -0.8680857142857128}, {
         18.497481481481483`, -0.8344888888888903}, {
         19.474801587301585`, -0.7402380952380936}, {20.497777777777777`, 
         0.545333333333334}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[3, 8], 0.375], 
          NCache[
           Rational[5, 8], 0.625], 0.5]], 
        LineBox[{{12.474801587301588`, -0.11809523809523936`}, {
         13.469907407407407`, -0.5908888888888906}, {
         14.464035087719298`, -0.7561403508771917}, {
         15.475152625152623`, -0.9450066600066599}, {
         16.451093713050234`, -1.2817397385223483`}, {
         17.47544191919192, -1.3276136363636368`}, {
         18.47535331384016, -1.3798245614035098`}, {
         19.480396825396827`, -1.1507619047619035`}, {20.473148148148148`, 
         0.112222222222222}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 2], 0.5], 
          NCache[
           Rational[1, 2], 0.5], 0.5]], 
        LineBox[{{12.493030753968252`, -2.576175595238093}, {
         13.496666666666666`, -3.305069444444443}, {
         14.493706060021852`, -3.5188789280894532`}, {
         15.495444832944832`, -3.9047703962703966`}, {
         16.46681531029357, -4.226675558740777}, {
         17.52242465137202, -4.1503177524230175`}, {
         18.49429012345679, -3.917870370370366}, {
         19.510277777777777`, -3.4458333333333324`}, {
         20.525, -2.0833333333333335`}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[5, 8], 0.625], 
          NCache[
           Rational[3, 8], 0.375], 0.5]], 
        LineBox[{{12.469881507381512`, -0.3678860722610726}, {
         13.467024063899062`, -1.24429945054945}, {
         14.482924458582362`, -1.9152777135145562`}, {
         15.492193791057428`, -2.3542519601610516`}, {
         16.47882672882673, -2.7599650349650346`}, {
         17.48399470899471, -2.871666666666667}, {
         18.454078703703708`, -2.92965}, {
         19.487222222222222`, -2.8178333333333305`}, {
         20.49259259259259, -1.3808333333333347`}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[3, 4], 0.75], 
          NCache[
           Rational[1, 4], 0.25], 0.5]], 
        LineBox[{{12.533680555555556`, -0.038333333333334885`}, {
         13.513296425796428`, -0.541353923853925}, {
         14.508479532163742`, -0.9501754385964919}, {
         15.511342445433353`, -1.4465374019919486`}, {
         16.51019137866964, -1.9859810479375701`}, {
         17.51060606060606, -2.1275000000000004`}, {
         18.510412037037042`, -2.1572499999999994`}, {
         19.526666666666667`, -1.952499999999999}, {
         20.522222222222222`, -0.34111111111110876`}}]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[7, 8], 0.875], 
          NCache[
           Rational[1, 8], 0.125], 0.5]], 
        LineBox[{{12.514368964368966`, 0.6217299367299363}, {
         13.503086419753085`, -0.2818518518518537}, {
         14.492234848484847`, -0.5266287878787862}, {
         15.49180911680912, -0.9684116809116815}, {
         16.49469828417197, -1.3258280316175037`}, {
         17.499845679012346`, -1.3153148148148122`}, {
         18.494791666666668`, -1.1188125000000004`}, {
         19.493333333333332`, -0.574166666666666}, {20.484259259259257`, 
         1.008611111111111}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {12., -6.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"napi kinti h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klethez \
viszony\[IAcute]tott profilok meleg napokon (30\[Degree] < T_kint)\"", 
       TraditionalForm], PlotRange -> {{12, 20}, {-6, 2}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {{{{
          Opacity[0.15], 
          RGBColor[
           NCache[
            Rational[1, 8], 0.125], 
           NCache[
            Rational[7, 8], 0.875], 0.5], 
          
          PolygonBox[{{12.494444444444444`, -0.23958992322321349`}, {
           13.496556473829196`, -0.8238905695177834}, {
           14.48179012345679, -1.0105516377653012`}, {
           15.498749556894719`, -1.3147718898606577`}, {
           16.48996794871795, -1.9544953525971493`}, {
           17.495833333333334`, -2.449839098747529}, {
           18.478595679012344`, -2.489850361519713}, {
           19.50030864197531, -1.8546103834955447`}, {
           20.503703703703703`, -0.20965931313973815`}, {20.503703703703703`, 
           0.6796593131397382}, {19.50030864197531, -0.6287229498377879}, {
           18.478595679012344`, 0.3202207318900827}, {17.495833333333334`, 
           0.5077057654141997}, {16.48996794871795, 0.7428543269561242}, {
           15.498749556894719`, 0.9935820044772272}, {14.48179012345679, 
           1.1664775636912295`}, {13.496556473829196`, 1.1291357485811446`}, {
           12.494444444444444`, 1.2000065898898797`}}]}, Null}, {{
          Opacity[0.15], 
          RGBColor[
           NCache[
            Rational[1, 4], 0.25], 
           NCache[
            Rational[3, 4], 0.75], 0.5], 
          
          PolygonBox[{{12.466666666666667`, -0.13560077646139646`}, {
           13.507222222222222`, -0.6850097598274709}, {
           14.504761904761905`, -1.175185630720393}, {
           15.49491129785248, -1.4928574099713505`}, {
           16.474486461251168`, -1.9389312909731968`}, {
           17.512116402116405`, -2.16382665917195}, {
           18.497481481481483`, -2.1544670516106916`}, {
           19.474801587301585`, -1.5647633800467249`}, {20.497777777777777`, 
           0.0613919005702086}, {20.497777777777777`, 1.0292747660964594`}, {
           19.474801587301585`, 0.0842871895705376}, {18.497481481481483`, 
           0.48548927383291096`}, {17.512116402116405`, 0.4276552306005248}, {
           16.474486461251168`, 0.5159060808891615}, {15.49491129785248, 
           0.8207565696352163}, {14.504761904761905`, 0.9202570592918244}, {
           13.507222222222222`, 0.9150097598274727}, {12.466666666666667`, 
           1.163378554239174}}]}, Null}, {{
          Opacity[0.15], 
          RGBColor[
           NCache[
            Rational[3, 8], 0.375], 
           NCache[
            Rational[5, 8], 0.625], 0.5], 
          
          PolygonBox[{{12.474801587301588`, -0.7955221297342584}, {
           13.469907407407407`, -1.5335050598176525`}, {
           14.464035087719298`, -1.9372111929986988`}, {
           15.475152625152623`, -2.3073573592469283`}, {
           16.451093713050234`, -2.773577247042674}, {
           17.47544191919192, -2.8422044261564103`}, {
           18.47535331384016, -2.804625732103677}, {
           19.480396825396827`, -2.0916558964084966`}, {
           20.473148148148148`, -0.39041526587873954`}, {20.473148148148148`, 
           0.6148597103231835}, {19.480396825396827`, -0.2098679131153105}, {
           18.47535331384016, 0.044976609296657255`}, {17.47544191919192, 
           0.18697715342913646`}, {16.451093713050234`, 0.2100977699979769}, {
           15.475152625152623`, 0.4173440392336084}, {14.464035087719298`, 
           0.4249304912443156}, {13.469907407407407`, 0.35172728203987125`}, {
           12.474801587301588`, 0.5593316535437797}}]}, Null}, {{
          Opacity[0.15], 
          RGBColor[
           NCache[
            Rational[1, 2], 0.5], 
           NCache[
            Rational[1, 2], 0.5], 0.5], 
          
          PolygonBox[{{12.493030753968252`, -2.8779438584188335`}, {
           13.496666666666666`, -4.286776450299188}, {
           14.493706060021852`, -4.749388597355004}, {
           15.495444832944832`, -5.24968413958158}, {
           16.46681531029357, -5.675115297718044}, {
           17.52242465137202, -5.480748577969593}, {
           18.49429012345679, -5.131089718028211}, {
           19.510277777777777`, -4.179877255878836}, {
           20.525, -2.414451209049892}, {20.525, -1.7522154576167748`}, {
           19.510277777777777`, -2.711789410787829}, {
           18.49429012345679, -2.704651022712521}, {
           17.52242465137202, -2.8198869268764417`}, {
           16.46681531029357, -2.778235819763511}, {
           15.495444832944832`, -2.559856652959213}, {
           14.493706060021852`, -2.288369258823902}, {
           13.496666666666666`, -2.323362438589698}, {
           12.493030753968252`, -2.274407332057353}}]}, Null}, {{
          Opacity[0.15], 
          RGBColor[
           NCache[
            Rational[5, 8], 0.625], 
           NCache[
            Rational[3, 8], 0.375], 0.5], 
          
          PolygonBox[{{12.469881507381512`, -0.9149425322555368}, {
           13.467024063899062`, -1.909912089648687}, {
           14.482924458582362`, -2.7967123886554424`}, {
           15.492193791057428`, -3.4419450579091024`}, {
           16.47882672882673, -3.9607948381103864`}, {
           17.48399470899471, -4.158946175294585}, {
           18.454078703703708`, -4.1085563890868055`}, {
           19.487222222222222`, -3.3775901661316503`}, {
           20.49259259259259, -1.7681461145272812`}, {
           20.49259259259259, -0.9935205521393883}, {
           19.487222222222222`, -2.2580765005350107`}, {
           18.454078703703708`, -1.7507436109131946`}, {
           17.48399470899471, -1.584387158038749}, {
           16.47882672882673, -1.5591352318196827`}, {
           15.492193791057428`, -1.2665588624130009`}, {
           14.482924458582362`, -1.0338430383736699`}, {
           13.467024063899062`, -0.5786868114502131}, {12.469881507381512`, 
           0.17917038773339156`}}]}, Null}, {{
          Opacity[0.15], 
          RGBColor[
           NCache[
            Rational[3, 4], 0.75], 
           NCache[
            Rational[1, 4], 0.25], 0.5], 
          
          PolygonBox[{{12.533680555555556`, -1.0440943979749002`}, {
           13.513296425796428`, -1.5815355603153276`}, {
           14.508479532163742`, -2.069475933221373}, {
           15.511342445433353`, -2.6247683048602184`}, {
           16.51019137866964, -3.223768711828537}, {
           17.51060606060606, -3.413733999225397}, {
           18.510412037037042`, -3.2559172949214306`}, {
           19.526666666666667`, -2.4681073978334336`}, {
           20.522222222222222`, -0.7571018008726167}, {20.522222222222222`, 
           0.07487957865039918}, {
           19.526666666666667`, -1.4368926021665642`}, {
           18.510412037037042`, -1.058582705078568}, {
           17.51060606060606, -0.8412660007746036}, {
           16.51019137866964, -0.7481933840466031}, {
           15.511342445433353`, -0.26830649912367877`}, {14.508479532163742`, 
           0.16912505602838912`}, {13.513296425796428`, 0.4988277126074777}, {
           12.533680555555556`, 0.9674277313082305}}]}, Null}, {{
          Opacity[0.15], 
          RGBColor[
           NCache[
            Rational[7, 8], 0.875], 
           NCache[
            Rational[1, 8], 0.125], 0.5], 
          
          PolygonBox[{{12.514368964368966`, 0.0648611764983611}, {
           13.503086419753085`, -0.9921035764039392}, {
           14.492234848484847`, -1.4017618911170056`}, {
           15.49180911680912, -1.8618794200572095`}, {
           16.49469828417197, -2.3248802663796653`}, {
           17.499845679012346`, -2.3934063931917393`}, {
           18.494791666666668`, -2.0956835735292794`}, {
           19.493333333333332`, -1.07276427623894}, {20.484259259259257`, 
           0.4953902669118174}, {20.484259259259257`, 1.5218319553104043`}, {
           19.493333333333332`, -0.07556905709439216}, {
           18.494791666666668`, -0.14194142647072172`}, {
           17.499845679012346`, -0.2372232364378848}, {
           16.49469828417197, -0.3267757968553424}, {
           15.49180911680912, -0.0749439417661536}, {14.492234848484847`, 
           0.34850431535943316`}, {13.503086419753085`, 
           0.42839987270023183`}, {12.514368964368966`, 
           1.1785986969615114`}}]}, Null}}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"ovi\"", "\"PK\"", "\"SZGK\"", "\"M\[EAcute]rce\"", 
       "\"G\[OAcute]lyairoda\"", "\"kisterem\"", 
       "\"vend\[EAcute]gt\[EAcute]r\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 8], 0.125], 
                    NCache[
                    Rational[7, 8], 0.875], 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 8], 0.125], 
                    NCache[
                    Rational[7, 8], 0.875], 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 4], 0.25], 
                    NCache[
                    Rational[3, 4], 0.75], 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 4], 0.25], 
                    NCache[
                    Rational[3, 4], 0.75], 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[3, 8], 0.375], 
                    NCache[
                    Rational[5, 8], 0.625], 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[3, 8], 0.375], 
                    NCache[
                    Rational[5, 8], 0.625], 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[5, 8], 0.625], 
                    NCache[
                    Rational[3, 8], 0.375], 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[5, 8], 0.625], 
                    NCache[
                    Rational[3, 8], 0.375], 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[3, 4], 0.75], 
                    NCache[
                    Rational[1, 4], 0.25], 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[3, 4], 0.75], 
                    NCache[
                    Rational[1, 4], 0.25], 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[7, 8], 0.875], 
                    NCache[
                    Rational[1, 8], 0.125], 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[7, 8], 0.875], 
                    NCache[
                    Rational[1, 8], 0.125], 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 8], 
                    Rational[7, 8], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08333333333333333, 0.5833333333333334, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "8"], ",", 
                    FractionBox["7", "8"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 8], 
                    Rational[7, 8], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 8], 
                    Rational[7, 8], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 4], 
                    Rational[3, 4], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.16666666666666666`, 0.5, 0.33333333333333337`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "4"], ",", 
                    FractionBox["3", "4"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 4], 
                    Rational[3, 4], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 4], 
                    Rational[3, 4], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[3, 8], 
                    Rational[5, 8], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.25, 0.4166666666666667, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["3", "8"], ",", 
                    FractionBox["5", "8"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[3, 8], 
                    Rational[5, 8], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[3, 8], 
                    Rational[5, 8], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "2"], ",", 
                    FractionBox["1", "2"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[5, 8], 
                    Rational[3, 8], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4166666666666667, 0.25, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["5", "8"], ",", 
                    FractionBox["3", "8"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[5, 8], 
                    Rational[3, 8], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[5, 8], 
                    Rational[3, 8], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[3, 4], 
                    Rational[1, 4], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5, 0.16666666666666666`, 0.33333333333333337`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["3", "4"], ",", 
                    FractionBox["1", "4"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[3, 4], 
                    Rational[1, 4], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[3, 4], 
                    Rational[1, 4], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[7, 8], 
                    Rational[1, 8], 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5833333333333334, 0.08333333333333333, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["7", "8"], ",", 
                    FractionBox["1", "8"], ",", "0.5`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[7, 8], 
                    Rational[1, 8], 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[7, 8], 
                    Rational[1, 8], 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9348949642389975`*^9, 3.9348949686174917`*^9}, {
  3.9348950000587053`*^9, 3.934895006792127*^9}, {3.934895143065612*^9, 
  3.9348952211654806`*^9}},
 CellLabel->"Out[442]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["referencedDataColumns"], "Input",
 CellChangeTimes->{{3.934894885471963*^9, 3.934894886157791*^9}},
 CellLabel->"In[432]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"1 timestamp\"\>", ",", "\<\"2 eltelt napok\"\>", 
   ",", "\<\"3 m\[AAcute]sodperc \[EAcute]jf\[EAcute]l \[OAcute]ta aznap\"\>",
    ",", "\<\"4 melyik szob\[AAcute]k\"\>", 
   ",", "\<\"5 kinthez viszony\[IAcute]tott h\[ODoubleAcute]m\[EAcute]rs\
\[EAcute]klet\"\>", 
   ",", "\<\"6 kinti h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet\"\>", 
   ",", "\<\"7 h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet\"\>", 
   ",", "\<\"8 m\[AAcute]sik szob\[AAcute]hoz viszony\[IAcute]tott h\
\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.934894886311696*^9, 3.934895103910689*^9},
 CellLabel->"Out[432]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"szgkModificationRelativeDays", "=", 
   RowBox[{
    RowBox[{"DateDifference", "[", 
     RowBox[{
      RowBox[{"DateObject", "[", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "7", ",", "27", ",", "0", ",", "0", ",", "0"}], 
        "}"}], "]"}], ",", 
      RowBox[{"DateObject", "[", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "8", ",", "13", ",", "0", ",", "0", ",", "0"}], 
        "}"}], "]"}], ",", "\"\<Day\>\""}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.934895336782317*^9, 3.9348953623257875`*^9}},
 CellLabel->"In[445]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"roomsConfig", ",", "\"\<SZGK\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.934895372347525*^9, 3.9348953812700377`*^9}},
 CellLabel->"In[446]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"4", ",", "2"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9348953814544945`*^9},
 CellLabel->"Out[446]="]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"room", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"szgkModificationEffect", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "hourlyData", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"hourlyData", "=", 
           RowBox[{"Select", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Select", "[", "\[IndentingNewLine]", 
              RowBox[{"referencedData", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "==", "room"}], "&&", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "!=", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "&&", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", "\[IndentingNewLine]", 
                  RowBox[{"before", ",", "\[IndentingNewLine]", 
                   RowBox[{"szgkModificationRelativeDays", "<=", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"szgkModificationRelativeDays", ">", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]",
                   "]"}]}], "\[IndentingNewLine]", "&"}]}], 
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Between", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"hour", " ", "3600"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"hour", "+", "1"}], ")"}], " ", "3600"}]}], 
                 "}"}]}], "]"}], "&"}]}], "\[IndentingNewLine]", "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"hourlyData", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], "/", 
              "3600"}], ",", "\[IndentingNewLine]", 
             RowBox[{"GetMeanAndSD", "[", 
              RowBox[{"hourlyData", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "5"}], "]"}], "]"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
        "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"hour", ",", "12", ",", "20"}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"before", ",", 
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.934895314368596*^9, {3.9348953667536435`*^9, 3.9348954704173994`*^9}, {
   3.934895532795356*^9, 3.9348955330332246`*^9}},
 CellLabel->"In[452]:="],

Cell[CellGroupData[{

Cell[BoxData["szgkModificationEffect"], "Input",
 CellLabel->"In[455]:="],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   StringJoin["Making second backup, ", 
    FileNameTake[NotebookBackup`Private`bakfile2$9271832], "..."], 
   StandardForm],
  Evaluator->"Local",
  ImageSizeCache->{298.705078125, {3., 9.}}]], "PrintTemporary",
 CellChangeTimes->{3.934895564158262*^9},
 CellLabel->"During evaluation of In[455]:="],

Cell[BoxData[
 DynamicBox[ToBoxes[
   StringJoin["Backing up ", 
    FileNameTake[NotebookBackup`Private`nbfile$9271832], " to ", 
    FileNameTake[NotebookBackup`Private`bakfile$9271832], "..."], 
   StandardForm],
  Evaluator->"Local",
  ImageSizeCache->{364.681640625, {3., 9.}}]], "PrintTemporary",
 CellChangeTimes->{3.9348955641893797`*^9},
 CellLabel->"During evaluation of In[455]:="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ErrorListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{"Transpose", ",", "szgkModificationEffect"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Red", ",", "Blue"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"12", ",", "20"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "6"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesOrigin", "->", 
      RowBox[{"{", 
       RowBox[{"12", ",", 
        RowBox[{"-", "6"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<el\[ODoubleAcute]tt\>\"", ",", "\"\<ut\[AAcute]n\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "->", "600"}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", "->", 
      "\"\<k\[UDoubleDot]ls\[ODoubleAcute] \[AAcute]rny\[EAcute]kol\[AAcute]s \
hat\[AAcute]sa SZGK irod\[AAcute]n\>\""}]}], "\[IndentingNewLine]", "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.934895482856267*^9, 3.9348955628558903`*^9}},
 CellLabel->"In[454]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[{{13.482779737409366`, 1.4636349206349197`}, {
         14.483516313932983`, 0.8131569664903002}, {15.474523622810661`, 
         0.4004277944277948}, {16.480333258990665`, 0.07406121039454253}, {
         17.47116769547325, 0.1557098765432097}, {18.467655679368644`, 
         0.5346103896103896}, {19.501359739369, 1.899740740740741}, {
         19.56367104823172, 2.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[{{15.320155334861223`, 2.}, {15.502847805788978`, 
         1.965686274509806}, {16.480778371954848`, 1.5407237076648812`}, {
         17.49607843137255, 1.5567647058823537`}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {12., -6.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"k\[UDoubleDot]ls\[ODoubleAcute] \[AAcute]rny\[EAcute]kol\
\[AAcute]s hat\[AAcute]sa SZGK irod\[AAcute]n\"", TraditionalForm], 
     PlotRange -> {{12, 20}, {-6, 2}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {{{{
          Opacity[0.15], 
          RGBColor[1, 0, 0], 
          
          PolygonBox[{{
            12.4892129844362, Rational[1, 168] (527.7246753246753 - 6 None) - 
             167^Rational[-1, 2] (
               6 Abs[-1.3383333333333347` + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[-0.15000000000000213` + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[-0.11166666666666814` + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[-0.05142857142857338 + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[-0.04499999999999815 + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[0.21428571428571885` + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[0.6333333333333329 + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[0.774999999999995 + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[0.7866666666666653 + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[0.826666666666668 + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[1.088000000000001 + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[1.7399999999999984` + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[1.7833333333333314` + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[1.8333333333333321` + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[2.318333333333335 + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[2.4300000000000033` + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[2.640000000000004 + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[2.7566666666666677` + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[3.376666666666665 + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[3.7042857142857137` + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[
                  3.9766666666666666` + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[4.29666666666667 + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[4.983333333333331 + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[5.422000000000004 + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[5.645 + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[6.406666666666666 + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[6.729999999999997 + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
               6 Abs[25.283636363636365` - None + 
                   Rational[1, 168] (-527.7246753246753 + 6 None)]^2)^
              Rational[1, 2]}, {13.482779737409366`, -0.7928985928605501}, {
            14.483516313932983`, -1.6060403572134347`}, {
            15.474523622810661`, -2.1752634215917848`}, {
            16.480333258990665`, -2.6187029017960373`}, {
            17.47116769547325, -2.549076299087919}, {
            18.467655679368644`, -2.2775665633507907`}, {
            19.501359739369, -0.7635562078365095}, {20.46207818930041, 
            0.9538904356708415}, {20.46207818930041, 5.937194220413813}, {
            19.501359739369, 4.563037689317992}, {18.467655679368644`, 
            3.3467873425715697`}, {17.47116769547325, 2.860496052174339}, {
            16.480333258990665`, 2.7668253225851225`}, {15.474523622810661`, 
            2.9761190104473743`}, {14.483516313932983`, 3.232354290194035}, {
            13.482779737409366`, 3.7201684341303896`}, {
            12.4892129844362, Rational[1, 168] (527.7246753246753 - 6 None) + 
             167^Rational[-1, 2] (
                6 Abs[-1.3383333333333347` + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[-0.15000000000000213` + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[-0.11166666666666814` + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[-0.05142857142857338 + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[-0.04499999999999815 + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[0.21428571428571885` + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[
                   0.6333333333333329 + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[0.774999999999995 + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[0.7866666666666653 + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[0.826666666666668 + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[1.088000000000001 + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[1.7399999999999984` + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[1.7833333333333314` + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[1.8333333333333321` + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[2.318333333333335 + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[2.4300000000000033` + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[2.640000000000004 + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[2.7566666666666677` + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[3.376666666666665 + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[3.7042857142857137` + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[3.9766666666666666` + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[4.29666666666667 + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[4.983333333333331 + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[5.422000000000004 + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[5.645 + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[6.406666666666666 + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[6.729999999999997 + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2 + 
                6 Abs[25.283636363636365` - None + 
                    Rational[1, 168] (-527.7246753246753 + 6 None)]^2)^
               Rational[1, 2]}}]}, Null}, {{
          Opacity[0.15], 
          RGBColor[0, 0, 1], 
          
          PolygonBox[{{12.505392156862746`, 1.225185918208518}, {
            13.498930481283422`, 0.5478109609554402}, {14.498039215686275`, 
            0.13718439744820055`}, {
            15.502847805788978`, -0.17768350525593513`}, {
            16.480778371954848`, -0.7446326872009461}, {
            17.49607843137255, -0.8329514675644183}, {
            18.519187675070025`, 
             Rational[1, 102] (359.17142857142846` - 6 None) - 
             101^Rational[-1, 2] (
               6 Abs[-2.7166666666666686` + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
               6 Abs[-1.778333333333336 + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
               6 Abs[-0.4849999999999959 + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
               6 Abs[-0.240000000000002 + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
               6 Abs[0.3683333333333323 + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
               6 Abs[1.0766666666666644` + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
               6 Abs[1.1300000000000026` + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
               6 Abs[1.211666666666666 + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
               6 Abs[1.9485714285714302` + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
               6 Abs[2.3783333333333303` + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
               6 Abs[2.3833333333333293` + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
               6 Abs[3.6183333333333323` + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
               6 Abs[3.701666666666668 + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
               6 Abs[4.55833333333333 + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
               6 Abs[5.528333333333336 + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
               6 Abs[6.96833333333333 + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
               6 Abs[30.21 - None + 
                   Rational[1, 102] (-359.17142857142846` + 6 None)]^2)^
              Rational[1, 2]}, {19.5141369047619, 0.04629674622112301}, {
            20.517547598749648`, 1.3816466607929936`}, {20.517547598749648`, 
            5.886863143128577}, {19.5141369047619, 5.053209206159828}, {
            18.519187675070025`, 
             Rational[1, 102] (359.17142857142846` - 6 None) + 
             101^Rational[-1, 2] (
                6 Abs[-2.7166666666666686` + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
                6 Abs[-1.778333333333336 + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
                6 Abs[-0.4849999999999959 + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
                6 Abs[-0.240000000000002 + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
                6 Abs[0.3683333333333323 + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
                6 Abs[1.0766666666666644` + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
                6 Abs[1.1300000000000026` + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
                6 Abs[1.211666666666666 + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
                6 Abs[1.9485714285714302` + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
                6 Abs[2.3783333333333303` + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
                6 Abs[2.3833333333333293` + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
                6 Abs[3.6183333333333323` + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
                6 Abs[3.701666666666668 + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
                6 Abs[4.55833333333333 + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
                6 Abs[5.528333333333336 + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
                6 Abs[6.96833333333333 + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2 + 
                6 Abs[30.21 - None + 
                    Rational[1, 102] (-359.17142857142846` + 6 None)]^2)^
               Rational[1, 2]}, {17.49607843137255, 3.9464808793291257`}, {
            16.480778371954848`, 3.8260801025307085`}, {15.502847805788978`, 
            4.109056054275547}, {14.498039215686275`, 4.171639131963563}, {
            13.498930481283422`, 4.548445723536535}, {12.505392156862746`, 
            5.017323885713047}}]}, Null}}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"el\[ODoubleAcute]tt\"", "\"ut\[AAcute]n\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9348955036457405`*^9, 3.9348955442907887`*^9}},
 CellLabel->"Out[454]="]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536., 831.5999999999999},
WindowMargins->{{-5.3999999999999995`, Automatic}, {-5.399999999999864, 
   Automatic}},
WindowStatusArea->"kazanfutes_2425.nb last backed up to kazanfutes_2425.nb~ \
on Mon 9 Sep 2024 at 8:22:39 PM",
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 146, 2, 70, "Title",ExpressionUUID->"45380696-a4ad-46a1-bca3-1d40be5c33bf"],
Cell[729, 26, 1901, 43, 70, "Input",ExpressionUUID->"3ec87830-8516-4582-a79a-1e28a4f80e66",
 InitializationCell->True],
Cell[2633, 71, 2150, 54, 70, "Input",ExpressionUUID->"88c3cf67-0207-4f5e-9fee-f1ba60113376",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[4820, 130, 97, 1, 70, "Title",ExpressionUUID->"8ea3fea8-31d1-4752-9a3f-1016b2d400f0"],
Cell[4920, 133, 142, 2, 70, "Subtitle",ExpressionUUID->"cb42fc41-a0d2-4510-b599-015caf4cbbba"],
Cell[5065, 137, 660, 19, 70, "Input",ExpressionUUID->"dc306a8b-e241-4797-b832-b8d654af6118",
 InitializationCell->True],
Cell[5728, 158, 622, 18, 70, "Input",ExpressionUUID->"02e7685a-c5b8-4017-a7d5-dde8560d0cad",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[6375, 180, 141, 2, 70, "Subtitle",ExpressionUUID->"a32e4f9e-dc69-4b2a-93c8-c9fd27f7a84a"],
Cell[6519, 184, 1235, 31, 70, "Input",ExpressionUUID->"4dfd5257-a958-4a53-a9b7-7987478c1c65"],
Cell[7757, 217, 1864, 47, 70, "Input",ExpressionUUID->"d4b6807b-dad2-4ec1-b27c-80ee24bc2ef4"],
Cell[9624, 266, 355, 10, 70, "Input",ExpressionUUID->"55ecfb0d-b7ea-47f6-9a17-c32c92090ae4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10028, 282, 100, 1, 70, "Title",ExpressionUUID->"b10c9452-429f-4ee5-8fc4-ba4eef284ea0"],
Cell[10131, 285, 196, 2, 70, "Subtitle",ExpressionUUID->"b6a7febe-b302-4399-a695-76ac6d0a0fc9"],
Cell[CellGroupData[{
Cell[10352, 291, 270, 7, 70, "Input",ExpressionUUID->"9a4d5115-ba90-4dd9-82b1-f3df42160e08"],
Cell[10625, 300, 349, 7, 70, "Output",ExpressionUUID->"c53bbde2-a020-43fe-b7ce-fdc4355cfd65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11011, 312, 204, 5, 70, "Input",ExpressionUUID->"58b16112-7817-4d53-be85-9506ae13c1df"],
Cell[11218, 319, 374, 7, 70, "Output",ExpressionUUID->"c900ebf0-cb26-4f34-9233-109df4284b0f"]
}, Open  ]],
Cell[11607, 329, 827, 17, 70, "Input",ExpressionUUID->"6165df48-87b5-4362-9e6d-0b4fad39d0a4"],
Cell[CellGroupData[{
Cell[12459, 350, 199, 4, 70, "Input",ExpressionUUID->"04534bae-23c6-423d-9ecf-21768391756d"],
Cell[12661, 356, 649, 12, 70, "Output",ExpressionUUID->"6a4587d2-3565-4827-82f9-20caa2a16b2e"]
}, Open  ]],
Cell[13325, 371, 523, 15, 70, "Input",ExpressionUUID->"7d9a91de-a8aa-4ead-9f08-04463bbda41a"],
Cell[13851, 388, 1686, 40, 70, "Input",ExpressionUUID->"e1e296b3-982e-4e5e-997f-c1581bca9e22"],
Cell[15540, 430, 886, 24, 70, "Input",ExpressionUUID->"44316a5c-ecc7-4a8d-8c18-766bddb4e3b4"],
Cell[16429, 456, 833, 23, 70, "Input",ExpressionUUID->"cd2f608a-e7bd-46ee-8900-c1f7fc09073e"],
Cell[17265, 481, 836, 23, 70, "Input",ExpressionUUID->"9cef6913-8fd0-48db-8389-e84c2dc7719a"],
Cell[18104, 506, 840, 23, 70, "Input",ExpressionUUID->"77ba30d6-69e9-40e4-b16d-76d95797f7a6"],
Cell[18947, 531, 500, 15, 70, "Input",ExpressionUUID->"b5464d99-63bf-4479-ad3d-7499250e15a4"],
Cell[19450, 548, 326, 9, 70, "Input",ExpressionUUID->"b79fe5e4-d27f-40b5-82cd-692d21c2566e"],
Cell[CellGroupData[{
Cell[19801, 561, 1608, 41, 70, "Input",ExpressionUUID->"be113712-732c-4809-8d21-e531791db9fb"],
Cell[21412, 604, 335458, 5754, 70, "Output",ExpressionUUID->"96da1f94-ffd2-46ec-8c8c-22ca921714e3"]
}, Open  ]],
Cell[356885, 6361, 888, 16, 70, "Text",ExpressionUUID->"8bddb869-2e5b-407f-a46a-ea34222a5a99"],
Cell[357776, 6379, 2387, 57, 70, "Input",ExpressionUUID->"ad09c656-2eac-42ee-9cd8-eb501c0408bc"],
Cell[360166, 6438, 1852, 43, 70, "Input",ExpressionUUID->"abdd41ad-5934-42c9-be9e-cc998bff2c10"],
Cell[362021, 6483, 738, 19, 70, "Input",ExpressionUUID->"fefa4314-4238-4150-b789-fc74c909de81"],
Cell[362762, 6504, 8513, 183, 70, "Input",ExpressionUUID->"2c6effc5-d6da-41c6-ac5e-b08e6ff448f7"],
Cell[371278, 6689, 804, 16, 70, "Input",ExpressionUUID->"2d43297e-a346-4b6a-a129-73f0195ad8ae"],
Cell[372085, 6707, 336, 9, 70, "Input",ExpressionUUID->"982a6f4e-6f89-4430-ae4c-5ba254bad4f4"],
Cell[372424, 6718, 992, 26, 70, "Input",ExpressionUUID->"f133dea3-1229-44b6-ab3b-d1732ebcb664"],
Cell[373419, 6746, 2873, 68, 70, "Input",ExpressionUUID->"955bb7c7-7941-4ebf-8be2-97b73060a654"],
Cell[CellGroupData[{
Cell[376317, 6818, 1257, 32, 70, "Input",ExpressionUUID->"b4c19a09-da98-4fa5-b61b-cd1c799e1e14"],
Cell[377577, 6852, 47255, 1019, 70, "Output",ExpressionUUID->"d87273ce-af41-4509-afe2-1864f94bd9c3"]
}, Open  ]],
Cell[424847, 7874, 3094, 73, 70, "Input",ExpressionUUID->"09de0b9c-1b93-4fec-aaa7-4217c520e077"],
Cell[CellGroupData[{
Cell[427966, 7951, 1417, 35, 70, "Input",ExpressionUUID->"74cf8c9a-0a81-476e-98a1-2c54a0888603"],
Cell[429386, 7988, 46779, 998, 70, "Output",ExpressionUUID->"dc5ad156-fcea-43e4-b494-8c0ea6395952"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476202, 8991, 138, 2, 70, "Input",ExpressionUUID->"cb395cee-1afb-4e57-8d47-ba7168a8268b"],
Cell[476343, 8995, 672, 12, 70, "Output",ExpressionUUID->"36808b6d-f705-4ac4-b198-a31c084a2697"]
}, Open  ]],
Cell[477030, 9010, 632, 16, 70, "Input",ExpressionUUID->"76c84d1c-06eb-4bd1-9c33-a0b1f2cf0c39"],
Cell[CellGroupData[{
Cell[477687, 9030, 198, 4, 70, "Input",ExpressionUUID->"a544f1af-1b3d-4193-b888-9e4e8c97233e"],
Cell[477888, 9036, 166, 5, 70, "Output",ExpressionUUID->"fde7eab5-ae8b-44ab-824d-d82b7f797ecf"]
}, Open  ]],
Cell[478069, 9044, 3669, 85, 70, "Input",ExpressionUUID->"29eb528e-4b64-402b-90aa-cd6bd6424728"],
Cell[CellGroupData[{
Cell[481763, 9133, 73, 1, 70, "Input",ExpressionUUID->"660d2270-b773-470e-ab99-cbef7a55a6a4"],
Cell[CellGroupData[{
Cell[481861, 9138, 336, 8, 70, "PrintTemporary",ExpressionUUID->"ae0bd285-22f1-40b1-8cfe-bcb9713a88ba"],
Cell[482200, 9148, 392, 9, 70, "PrintTemporary",ExpressionUUID->"0cad53d2-e73f-4fc6-903c-b06f7dda0239"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[482641, 9163, 1405, 37, 70, "Input",ExpressionUUID->"233cd296-313a-44a4-a7ae-05e9cb93910d"],
Cell[484049, 9202, 24865, 473, 70, "Output",ExpressionUUID->"9ba6346e-ae54-4002-8aa5-8debc201350b"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
